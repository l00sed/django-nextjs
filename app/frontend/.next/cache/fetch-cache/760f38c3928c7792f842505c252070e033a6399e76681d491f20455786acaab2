{"kind":"FETCH","data":{"headers":{"allow":"GET, HEAD, OPTIONS","connection":"close","content-length":"92164","content-type":"application/json","cross-origin-opener-policy":"same-origin","date":"Mon, 21 Aug 2023 03:57:32 GMT","link":"<http://backend:8000/webmention/receive>; rel=\"webmention\"","referrer-policy":"same-origin","server":"gunicorn","vary":"Accept, origin, Cookie","x-content-type-options":"nosniff","x-frame-options":"DENY"},"body":"[{"id":11,"tags":["code","DIY","electronics"],"title":"Vim Clutch","author":"Daniel Tompkins","description":"Hacking together a <i>Vim Clutch</i> from the foot-pedal control of a dictation machine. Learn how to make a Raspberry Pi 0 be recognized across operating systems as a plug-and-play <i>Human-Interface Device</i> (HID), or keyboard. See me struggle with Python and solder some really tiny leads.","slug":"vim-clutch","likes":0,"created_at":"2021-05-21T19:28:00-04:00","updated_at":"2021-05-21T19:28:00-04:00","featured_image":"http://backend:8000/app/backend/uploads/uploads/blog/vim-clutch/pedal_clicks.gif","image_alt":"Gif of me clicking the middle and right switches on a black foot-pedal with 3 switches total","content":"<ProseWrapper>\n## Goodwill Strikes Again\n\nA symptom of heavy [Vim](https://www.vim.org) usage is that your brain begins to re-partition old memories for keyboard shortcuts— trashing old brain files for small boosts in finger dexterity.\n\nIt was this mass of tangled brains in my own dome that compelled me to purchase a weighty foot-pedal at Goodwill. The model I got is actually a combination of three, springy switches. Sold for the reasonable price of $3.\n\n<TwoColumn>\n  <ImageWrapper\n    alt=\"Picture of pedal assembly on it's face with the bottom up. Getting ready to unscrew the clamshell housing with a screwdriver.\"\n    src=\"/assets/img/blog/vim-clutch/screwdriver.jpg\"\n    width={ 500 }\n    height={ 889 }\n  />\n  <ImageWrapper\n    alt='The foot pedal has a wide, center pedal (with an embossed \"PLAY\"). Two, thinner pedals on either side read \"REW\" and \"FWD\", respectively. All 3 switches are really clicky.'\n    src=\"/assets/img/blog/vim-clutch/pedal_clicks.gif\"\n    width={ 300 }\n    height={ 334 }\n  />\n</TwoColumn>\n\n\nIt's a surprisingly hefty contraption. The base is a thick stock of foam that helps keep it from sliding across the floor. It's a clamshell design, sandwiched together by a screw at each of the four corners.\n\nTraditionally, I've coded with my fingers, and my feet remain flat on the floor. The thought of throwing another appendage into the mix had, however, actually crossed my mind (if you can believe it).\n\nThe serendipity of discovering the pedal among the other assortment of donated goods gave the idea shape.🦆\n\n## What the heck is a Vim Clutch?\n\nSometimes it feels like we're living in the future. A sci-fi fantasy where you can buy electric cars with digital coins and speculate on blockchains founded on memes.\n\nUnsurprisingly, I'm not the only one under the _Vimperious_ curse... (yes, that was a Vim + Harry Potter pun) In fact, there have been a good many other model Vim Clutches:\n\n<HorizontalScroller className=\"full__width\">\n  <Card\n    element={{\n      id: \"0\",\n      slug: \"https://github.com/alevchuk/vim-clutch\",\n      image_alt: \"The O.G. Vim Clutch by Aleksandr Levchuk, hooked up to a desktop.\",\n      featured_image: \"/assets/img/blog/vim-clutch/og_pedal-thumbnail.jpg\",\n      title: \"The O.G.?\",\n      updated_at: \"Apr 2011\",\n      auto_update_at: \"false\",\n      author: \"Aleksandr Levchuk\",\n      description: \"As far as I can tell, this is the O.G. Vim Clutch. First committed by Aleksandr Levchuk in 2011. Aleksandr uses <i>two</i> USB foot switches&mdash; costing $20. Not exactly thrift prices, but not at all bad. These pedals use an infrared sensor that gets interrupted by a <i>toothpick</i> when the pedal is depressed.<br><br>Aleksandr used one pedal for the \\\"i\\\" key, and the other for \\\"Esc\\\". So, I can imagine some real <i>Fast and Furious</i> vibes in Aleksandr's home office. The GitHub write-up that Aleksandr did is really excellent too&mdash; well-documented, and well worth a read.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"1\",\n      slug: \"https://github.com/foxweb/vim-pedal\",\n      image_alt: \"clutch\",\n      featured_image:\"/assets/img/blog/vim-clutch/aleksey_two-thumbnail.jpg\",\n      title:\"Aleksey #2\",\n      updated_at:\"Jul 2014\",\n      auto_update_at:\"false\",\n      author:\"Aleksey Kurepin\",\n      description:\"There's another great GitHub write-up (<i>Digression:</i> isn't it nice when people use GitHub READMEs like a blog post?) on a pedal by Aleksey Kurepin.Alek #2 called out Alek #1 (Levchuck) as the inspiration for this Vim Clutch project. Aleksey's pedal also uses an optical sensor to detect pedal presses. Aleksey, however, introduces an <i>Arduino Leonardo</i> microboard clone to send \\\"i\\\" on press <i>and</i> send \\\"Esc\\\" on release using the same pedal. Neat.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"2\",\n      slug: \"https://spin.atomicobject.com/2017/04/07/vim-clutch/\",\n      image_alt: \"A shoe about to press down on a unique-looking Vim clutch.\",\n      featured_image: \"/assets/img/blog/vim-clutch/vim_clutch_shoe-thumbnail.jpg\",\n      title: \"Fancy-Shoe Joe\",\n      updated_at: \"Apr 2017\",\n      auto_update_at: \"false\",\n      author: \"Joe Chrysler\",\n      description: \"Another super cool person, Joe Chrysler, wanted to ride the <i>Vim</i>bus 2000. This is a fun piece because Joe talks a little more about the other unique interfaces that he's seen and that have inspired him&mdash; curved, split, mechanical keyboards, giant trackpads, and Echo Dots to name a few.<br><br>Joe paid $25 bucks on Amazon for his \\\"sturdy, if somewhat sketchy\\\" pedal. I like these descriptions Joe, keep 'em coming.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"3\",\n      slug: \"https://twitter.com/peterssonjesper/status/934957115709333505\",\n      image_alt: \"Seemingly an electric piano pedal, but actually... a Vim clutch.\",\n      featured_image: \"/assets/img/blog/vim-clutch/piano_pedal-thumbnail.jpg\",\n      title: \"Piano Player\",\n      updated_at: \"Nov 2017\",\n      auto_update_at: \"false\",\n      author: \"Jesper Petersson\",\n      description: \"Pay special attention to the socks in this one, that's the true source of this programmer's text-editing prowess...<br><br>Jesper didn't seem to have a write-up on his pedal (correct me if I'm wrong, Jesper), just this short Twitter demo. I liked the allegory of the piano pedal, so I put it in the list.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"4\",\n      slug: \"https://www.reddit.com/r/vimporn/comments/gus5ri/vim_clutch_vc1_pedal_by_boss/?utm_source=share&utm_medium=web2x&context=3\",\n      image_alt: \"A modified BOSS guitar pedal. In convincing BOSS-style lettering, it says \\\"Vim Clutch\\\".\",\n      featured_image: \"/assets/img/blog/vim-clutch/boss_pedal-thumbnail.jpg\",\n      title: \"Boss Pedal, VC-1\",\n      updated_at: \"Jun 2020\",\n      auto_update_at: \"false\",\n      author: \"u/sjachim\",\n      description: \"This pedal is hardcore, rock-n-roll. I found it on Reddit, via <i>u/sjachim</i>. This project also has a recent timestamp (which means it's still a super cool, hip thing to do).<br><br>The <i>VC-1</i> model is a converted <i>BOSS</i> guitar pedal. It's one of the most legit-looking custom clutches that I've come across&mdash; especially with the vinyl-sticker lettering. The red pilot light also adds to the badass-ery. I might have to add some LEDs to mine...\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"5\",\n      slug: \"https://yeah.nah.nz/electronics/vim-clutch-2/\",\n      image_alt: \"Close-up of this Vim clutch's wiring showing an Arduino and switch.\",\n      featured_image: \"/assets/img/blog/vim-clutch/vim_clutch_micro-thumbnail.jpg\",\n      title: \"Yeah, nah, aye\",\n      updated_at: \"Sep 2020\",\n      auto_update_at: \"false\",\n      author: \"David Phillips\",\n      description: \"David Phillips, a.k.a. <i>Yeah, nah, aye</i>, is another contemporary pedal hacker. Perhaps the flood of Vim clutches in 2020 is because all the developers were going crazy WFH. I don't know.<br><br>David's \\\"improved\\\" pedal (that's a Vim pun folks) uses an ATMega32u4 Arduino-compatible board. David also calls out Alek #1 as the O.G. Vim clutch hacker&mdash; and <i>does</i> indeed make some unique improvements upon the original project.<br><br>Definitely worth a read.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"6\",\n      slug: \"https://github.com/moretea/kludge\",\n      image_alt: \"Looking into the messy electronic innards of the \\\"Kludge\\\", another unique Vim clutch\",\n      featured_image: \"/assets/img/blog/vim-clutch/kludge-thumbnail.jpg\",\n      title: \"The Kludge\",\n      updated_at: \"Mar 2021\",\n      auto_update_at: \"false\",\n      author: \"Maarten Hoogendoorn\",\n      description: \"Hoogendoorn shared his pedal in the comments on <i>Hacker News</i>. The \\\"kludge\\\" pedal is also a misused piano pedal, similar in shape to one of the previous clutches. Maarten's, however, triples the fun with three switches.<br><br>My favorite part about Maarten's hack is that he also configured it to work as a push-to-talk pedal for calls! Wicked. Another excellent GitHub writeup and a unique way of coding it together.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"7\",\n      slug: \"https://github.com/tenderlove/initial-v\",\n      image_alt: \"A Vim clutch made from a salvaged BMW shifter and a 3D-printed enclosure.\",\n      featured_image: \"/assets/img/blog/vim-clutch/clutch-thumbnail.jpg\",\n      title: \"Initial V\",\n      updated_at: \"Mar 2023\",\n      auto_update_at: \"false\",\n      author: \"Aaron Patterson\",\n      description: \"Patterson (a.k.a. <i>tenderlove</i>) broke the mold when designing the <i>Initial V</i> Vim clutch. It's made from an actual BMW shifter and features a 3D-printed enclosure and custom PCB. It certainly feels antithetical to the Vim ethos of keeping our fingers planted firmly on the home-row; but, no one can deny this is a remarkable invention in the Vim clutch hall of fame.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n</HorizontalScroller>\n\nLooking at these examples, it's clear that a Vim Clutch can assume many forms. At its core, a Vim Clutch is a pedal that engages or disengages the _INSERT_ mode in the Vim editor. In Vim (Visual-editor IMproved) you can type `i`,`I`,`a`,`A`, or a few other keys to enter _INSERT_ mode, pinning the cursor to specific starting locations.\n\n_INSERT_ mode lets you type normally— like you would in a Google doc or in Notepad. Pressing the `Esc` button brings you back to _NORMAL_ mode...\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/vim-clutch/vim.svg\"\n    alt=\"Vim logo\"\n    width={ 100 }\n    height={ 100 }\n    visible={ false }\n  />\n</OneColumn>\n\nIf you've used Vim, then you know _NORMAL_ mode is anything but \"normal\". You can jump to matched characters, do clever search and replace maneuvers, build macros on-the-fly and much much more from within _NORMAL_ mode.\n\nA proper _Vim Clutch_ would have to take the place of one of the _INSERT_-enabling and disabling key presses. Depressing the pedal would enter _INSERT_ mode, and releasing the pedal returns to _NORMAL_ mode.\n\nInstead of settling into a cubicle'd menagerie of isolated and burnt-out developers, the _Vim Clutch_ puts you in the cockpit with Vim Diesel— racing stick, staying above 50 words-per-minute to save all the innocent bus riders.\n\nSo that's the \"what\" and the \"why\", but before I give you the \"how\"— If you've made a dope Vim Clutch, and you're not in the list— what gives?? Leave a comment, paste in some links or images. I'll put it in with the others.\n\n## Vim-Clutch Hardware\n\nThe Goodwill pedal had about 4-feet of flat, fettuccine-looking cable coming out the back. It terminated in a telephone jack. After a quick Google search, it seemed like the pedal would have been used to control playback on a transcribing machine.\n\nYou'd engage the center pedal for normal playback, step on the left pedal to rewind, or step right to fast-foward while listening to a recording of speech. It would've provided a quick way to navigate (probably a casette) back and forth while simultaneously having both hands free to type out the actual letters and spellings of what was said— at a keyboard or electric typewriter, I'm guessing. Similar models go for a decent chunk of change on Amazon:\n\n<OneColumn>\n  <ImageWrapper\n    alt='This Dictaphone model was one of several other models that were indistinguishable from the one I snagged at Goodwill. It was a range of about $30-$90, and some of the pedals terminated in a USB connector rather than a telephone jack.'\n    src='/assets/img/blog/vim-clutch/amazon_dictaphone.jpg'\n    width={ 660 }\n    height={ 205 }\n  />\n</OneColumn>\n\nAll the more re-assured by the deal that I got, I decided to hack it apart and see what was happening inside. The previous owner definitely had cats. The insides contained a treasure-trove of hair, whiskers and dust bunnies.\n\nThere were two metal weights affixed to the bottom-half of the clamshell. They keep the pedal from scooting across the floor. Springs at each of the switches set-off the plastic pedals from engaging the switch mechanism. I looked up the string of numbers and letters that are printed on the side of each of the switches (out of curiousity); but no conclusive result about the design or manufacturer. The pedal itself has no distinguishing brand markings.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"I wasn't really sure how I would convert switch presses to keypresses... but this was a good look at the pedal guts. There's a slightly thicker red wire that loops the current into all three switches. Each independent switch completes or closes it's own isolated loop through another wire (going out to the telephone jack). This was good news to me. It meant that each switch can be tracked separately, and the pedal could probably do combination presses.\"\n    src='/assets/img/blog/vim-clutch/pedal_guts.jpg'\n    width={ 500 }\n    height={ 281 }\n  />\n</OneColumn>\n\nThe springs are were also an exciting find. They could probably be swapped out, giving some control over the quality of the pedal's action. After playing with it, I feel like it'd be more comfortable to have a stiffer press. Right now, the weight of my foot is enough to create an accidental key-click.\n\n## A Controller: RPi Zero\n\nWe'll have to add $10 to our budget. I decided to use the Raspberry Pi 0 for the keypress controller— the thing that'll turn our pedal presses into \"i\" and \"Esc\". That's $13 total… still worth it. I had a couple of the Pi 0 [SBCs](https://en.wikipedia.org/wiki/Single-board_computer) lying around from projects past, so it was a convenient option.\n\nThe Raspberry Pi 0 was a go-to board for some of my [school projects](/signs-of-life) in the past. I like the Zero model a lot. It's insane to have a programmable device that can use a display, provide WiFi and an SSH connection, GPIO and more for such a low price. Plus it's about the size of a few sticks of gum! Which is more than small enough to fit comfortably within the foot-pedal casing.\n\nSo now it's a project. I think the Pi will come in handy if I ever want to try sending keypresses via Bluetooth. Could you imagine that? The first (AFAIK) _wireless_ Vim Clutch. That would be legit. We'll see. Probably don't have the energy. I don't know, maybe that would be worth it…\n\nBottomline, the Pi 0 gives you a lot of flexibility in an exceptionally tiny form-factor. The physical interfaces of the Pi 0 are diverse and low-profile— the micro-USB is convenient for simultaneously powering the device and sending data.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"The Raspberry Pi 3 measures about the same as the model 4, on a 85 x 56mm PCB. The Pi 0 (and Zero W, wireless, model), has a 65 x 30mm footprint. I haven't gotten my hands on the smallest Raspberry Pi, the Pico— which measures only 51 x 20mm and is supposed to cost $4.\"\n    src='/assets/img/blog/vim-clutch/rpi0_schematic.jpg'\n    width={ 616 }\n    height={ 346 }\n  />\n</OneColumn>\n\nIn the past, I'd tried setting up the headless Pi 0 using a single USB for both data and power. The tutorials online seem super straight-forward and fool-proof; but I've still never gotten it to work seamlessly.\n\nThe first Pi Zero I bought as a kit with all the silly dongles and adapters to plug in a mouse, keyboard, and display. I had more resolve to get it working this time, but still got into some muddy waters with setting up the Ethernet gadget for SSH'ing over USB.\n\nA useful, succinct tutorial by [Andrew Mulholland](https://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md) provides the basic documentation for setting it up. There's also a good one from [Adafruit](https://learn.adafruit.com/turning-your-raspberry-pi-zero-into-a-usb-gadget/ethernet-gadget) that provides more context for Mac and Windows users. Most people seem to get it working by following those directions, but it always gets a little sticky for me.\n\n### Raspberry Pi OS Config\n\nOn Linux (Ubuntu 20.04), I would install the [Raspberry Pi Imager](https://www.raspberrypi.org/software/) with aptitude:\n\n<Pre>\n```bash\nsudo apt-get install rpi-imager\n```\n</Pre>\n\nThe RPi Imager has become incredibly easy to use and gives you a nice pre-populated catalog of compatible OS's. I was able to quickly flash \"Raspberry Pi OS Lite\" after selecting it from a menu of recommended options. I used an 8GB micro-SD card (probably overkill for this project).\n\n<OneColumn>\n  <ImageWrapper\n    alt='The Raspberry Pi Imager has releases for multiple platforms. The interface is really simple. Just click \"Raspberry Pi OS\" and select the \"Lite\" image. Then select your SD card and write the image to the card.'\n    src='/assets/img/blog/vim-clutch/RaspberryPiImager.jpg'\n    width={ 741 }\n    height={ 478 }\n  />\n</OneColumn>\n\nAfter flashing the SD card, it'll prompt you to eject it. I just pop it out and back in. You'll probably see two things: `rootfs` and `boot`. The next step is to open boot, then edit `config.txt`.\n\nAt the bottom of `config.txt`, add a new line:\n\n<Pre>\n```bash:config.txt\ndtoverlay=dwc2\n```\n</Pre>\n\nNext, you have to edit the `cmdline.txt` file. As Andrew pointed out in his [gist](https://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md), each parameter is separated by a single space (no new lines). In here, you will insert the following after \"rootwait\":\n\n<Pre>\n```bash:cmdline.txt\nmodules-load=dwc2,g_ether\n```\n</Pre>\n\nAfter this, you should be able to plug in the Raspberry Pi 0 with a micro-USB cable (making sure to use the port that isn't the power port) and SSH into `pi@raspberrypi.local` as a USB Ethernet gadget. I managed to get this \"working\" in a hacky sort of way (helped along by this [blog post](https://shallowsky.com/blog/linux/raspberry-pi-ethernet-gadget.html)), but ultimately removed the \"g_ether\" option and configured the Pi to SSH over my local WiFi instead.\n\nMaybe one day I'll get it to work on the first try. [Configuring the Pi to connect to the Wi-Fi network](https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md) is a perfectly acceptable alternative solution. On a running Pi, you would use `sudo raspi-config` to configure Wi-Fi and other important options— like language and locale.\n\nAlternatively, you can create a file on the micro SD card called `wpa_supplicant.conf`:\n\n<Pre>\n```bash\nsudo vim /etc/wpa_supplicant/wpa_supplicant.conf\n```\n</Pre>\n\nIn this file, include the 2-letter ISO code for your country as well as the SSID and password of your network.\n\n<Pre>\n```bash:wp_supplicant.conf\ncountry=US\nnetwork={\n   ssid=\"Chance the Router\"\n   psk=\"CocoabutterKisses\"\n}\n```\n</Pre>\n\nIf you have other Raspberry Pi computers on the network, I recommend you turn them off or disconnect them temporarily (unless they have a different host name). I had a Pi 4 that was already broadcasting as `raspberrypi.local` and it was another stick in the spokes. I've since set the newly-connected Pi's hostname as `vimclutch.local`.\n\nOne last recommendation (just to make your life easier)— don't go crazy with the password. I had a whacky password with a double-quote or something stupid, and I'm still convinced it was the culprit after going down yet another debugging rabbit-hole.\n\n## Software\n\nOne last excuse to use the Pi (rather than an Arduino, for example) was that it gave me a chance to try out some of the GPIO Python libraries. The one I ended up importing is [gpiozero](https://gpiozero.readthedocs.io/en/stable/).\n\nThis library provides a ton of convenient features around the \"Button\" object. A gpiozero \"Button\" is instantiated with the GPIO pin number— for example, `pedal = Button(2)`. It accepts a few other parameters that will dictate the Button's attributes and behavior.\n\nYou can then use methods like: `pedal.is_pressed`, `pedal.is_held`, `pedal.when_released`, and much more. Have a look at the [Button-specific documentation](https://gpiozero.readthedocs.io/en/stable/api_input.html?highlight=Button#gpiozero.Button) for a full list of capabilities.\n\n<OneColumn>\n  <ImageWrapper\n    alt='After setting up a breadboard, I wired up a basic circuit with another switch I had on-hand. Messed around with the gpiozero Python library for a bit (it is awesome). Finally managed to get everything setup so that a button press would print \"Hello World\".'\n    src='/assets/img/blog/vim-clutch/hello_world_scrot.jpg'\n    width={ 927 }\n    height={ 521 }\n  />\n</OneColumn>\n\nSetting a `Button()` lets the script detect that the 5V boolean \"high\" signal \"is_pressed\", or \"is_released\". Now we have to turn that \"high\" or \"low\" into keypresses. The script below opens the Pi as a _human interface device_ (HID) that sends emulated keypresses (as structs) to the computer the Pi is plugged into.\n\n<Pre>\n```py:keypress.py showLineNumbers\ndef press(char):\n  mod,key=hid_codes[char]\n  raw=struct.pack(\"BBBBL\", mod, 0x00, key, 0x00, 0x00000000)\n  with open(\"/dev/hidg0\", \"w\") as fd:\n    fd.write(raw)\n    fd.write(struct.pack(\"Q\" 0))\n    sleep(0.005)\n```\n</Pre>\n\nThe _struct_ library interprets Python bytes as packed binary data. The weird \"BBBBL\" pattern is just dictating 4 unsigned chars (BBBB) followed by one unsigned long (L) integer. The code is bummed a little further than some other examples I've found (mostly using Python's `write_report` function. I ripped it from a rather cool presentation, [One Device to PWN Them All](/assets/files/articles/vim-clutch/upenn_philpolstra_1d2PWNta.pdf).\n\nThe gist of the function above is that we're able to build the unreadable keypress signals (one long string of bytes) by referencing the readable character (i.e., the letter \"o\" or \"i\") in a lookup table. The lookup table packs the bytes for that key and its modifier (i.e., \"Shift\" or \"Ctrl\") into the longer struct. If there's someone smart reading this article, they can please explain this better.\n\nAs far as how those binary bits are actually interpretted as keypresses, I'm not sure how that works…\n\nBefore this script will work, we need the Pi to say, \"hello, I am a keyboard\", whenever it's plugged into another computer via USB. I put a link to the blog post with the relevant script (as well as a few other useful links) in the footer to this project's [GitHub README](https://github.com/l00sed/vim-clutch.git). Here it is below as well:\n\n<Pre>\n```bash:/usr/bin/vimclutch_usb showLineNumbers\n#!/bin/bash\ncd /sys/kernel/config/usb_gadget/\nmkdir -p vimclutch\ncd vimclutch\necho 0x1d6b > idVendor # Linux Foundation\necho 0x0104 > idProduct # Multifunction Composite Gadget\necho 0x0100 > bcdDevice # v1.0.0\necho 0x0200 > bcdUSB # USB2\nmkdir -p strings/0x409\necho \"fedcba9876543210\" > strings/0x409/serialnumber\necho \"l00sed\" > strings/0x409/manufacturer\necho \"VimClutch USB Device\" > strings/0x409/product\nmkdir -p configs/c.1/strings/0x409\necho \"Config 1: ECM network\" > configs/c.1/strings/0x409/configuration\necho 250 > configs/c.1/MaxPower\n\n# Add functions here\nmkdir -p functions/hid.usb0\necho 1 > functions/hid.usb0/protocol\necho 1 > functions/hid.usb0/subclass\necho 8 > functions/hid.usb0/report_length\necho -ne \\\\x05\\\\x01\\\\x09\\\\x06\\\\xa1\\\\x01\\\\x05\\\\x07\\\\x19\\\\xe0\\\\x29\\\\xe7\\\\x15\\\\x00\\\\x25\\\\x01\\\\x75\\\\x01\\\\x95\\\\x08\\\\x81\\\\x02\\\\x95\\\\x01\\\\x75\\\\x08\\\\x81\\\\x03\\\\x95\\\\x05\\\\x75\\\\x01\\\\x05\\\\x08\\\\x19\\\\x01\\\\x29\\\\x05\\\\x91\\\\x02\\\\x95\\\\x01\\\\x75\\\\x03\\\\x91\\\\x03\\\\x95\\\\x06\\\\x75\\\\x08\\\\x15\\\\x00\\\\x25\\\\x65\\\\x05\\\\x07\\\\x19\\\\x00\\\\x29\\\\x65\\\\x81\\\\x00\\\\xc0 > functions/hid.usb0/report_desc\nln -s functions/hid.usb0 configs/c.1/\n# End functions\n\nls /sys/class/udc > UDC\n```\n</Pre>\n\nSave this script to `/usr/bin/vimclutch_usb` on the Raspberry Pi Zero (or give it another name). It also needs to be made executable:\n\n<Pre>\n```bash\nchmod +x /usr/bin/vimclutch_usb\n```\n</Pre>\n\nThen put a line in `/etc/rc.local` (before the `exit 0` line) that will allow the script to be automatically run, setting up the Pi as a USB keyboard:\n\n<Pre  copyButton={ false }>\n```diff:/etc/rc.local\n...\n\n+ /usr/bin/vimclutch_usb\nexit 0\n```\n</Pre>\n\n## Soldering\n\nThe fettuccine cable running out the back of the pedal was removed. I severed the leads from the switches, and soldered them directly to the GPIO pins (2, 3, and 26) of the Pi. I also soldered the thicker red wire to the Pi's 5V out, and closed the other end of the loop to ground. Depressing any of the three switches now closes the circuit with its specific GPIO pin.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Soldered the connections directly to the Pi Zero's GPIO pins— plus two more wires, one to 5V and one to ground. Not very pretty, but I got the job done.\"\n    src='/assets/img/blog/vim-clutch/pi_in_a_pedal.jpg'\n    width={ 600 }\n    height={ 338 }\n  />\n</OneColumn>\n\nTo keep the Pi firmly in place, I drilled some holes through the base of the pedal and mounted the corners of the board to two standoffs. The single USB cable connects to the side of the Pi and exits out the same hole in the back— protected by a rubber grommet.\n\nI've been using the pedal to code for about a month now, and it really is a lot of fun. It took some getting used to at first, but after a couple days practice it's easy to build up the muscle memory. It also incentivized me to learn about the different ways to enter INSERT mode— I had no idea about _SHIFT+a_ until I looked it up for this project!\n\nUnfortunately (after a couple weeks of usage) the main center pedal's switch started to get a bit funky… might just be a bad solder joint; but hopefully the switch isn't faulty. Luckily I could just SSH into the pedal and swap out the keys. I still have the right and left working swimmingly.\n\n<OneColumn>\n  <iframe width=\"498\" height=\"315\" src=\"https://www.youtube.com/embed/9JegZhkDhrw\" title=\"Vim Clutch Demo\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\n</OneColumn>\n\n## Conclusion\n\nThis has been an enlightening project. I think it's given me a lot of useful knowledge that I will carry forward in my future projects. Excited to be doing more with electronics and linking physical interactions with digital events and vice versa.\n\nUntil then, thank you so much for taking a minute to share my excitement over this project. Like I said earlier, if you've made a Vim Clutch, or another bonkers HID, please share a link in the comments! Happy coding.\n</ProseWrapper>","content_type":"blog"},{"id":9,"tags":["DIY","culture"],"title":"Cars and Fish","author":"Daniel Tompkins","description":"Far too many of us have been in the same gut-wrenching situation. You're late. The doors slam as you rush into your car. Then you turn the key, and ... <i>nothing</i>. If you're less unlucky, you might still hear a click— or see the flash of a dash icon...","slug":"car-hacking","likes":0,"created_at":"2021-04-18T20:22:00-04:00","updated_at":"2021-04-18T20:22:00-04:00","featured_image":"http://backend:8000/app/backend/uploads/uploads/blog/car-hacking/post_corrosion.jpg","image_alt":"Example of lead-acid battery post corrosion","content":"<ProseWrapper>\n## 03/12 Fish Fry Kerfuffle\n\nIf you're familiar with the Christian observation of Lent— meat is forbidden on Fridays. As a result, a lot of churches host Friday-night fish fry dinners, and I had been leaving to pick up my battered cod dinner.\n\nSomeone showed me an interact [fish fry map](https://codeforpittsburgh.github.io/fishfrymap/) that'd been coded by _Code for Pittsburgh_. Side note: Code for Pittsburgh looks like a really cool gang of like-minded coders, and they've built some neat stuff together.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Screenshot from the official 2021 Pittsburgh Lenten Fish Fry Map from Code for Pittsburgh\"\n    src=\"/assets/img/blog/car-hacking/fish_fry_map.jpg\"\n    width={ 737 }\n    height={ 686 }\n  />\n</OneColumn>\n\nUsing the map, I picked out a church in nearby Shadyside. We pre-ordered two fried fish sandwiches for pickup at 5:45pm. Naturally, I was late, rushing to the car at 5:50pm, I rolled (it's low) into the front seat and slammed the doors. I could see the tartar sauce in my mind's eye ...\n\nThen I turned the key ... _nothing_. Far too many of us have been in the same gut-wrenching situation. If you're less unlucky, you might still hear a click— or see the flash of a dash icon.\n\nThe stakes were still pretty low. I've been working remotely since September 2020. So, I'm blessed that I wasn't relying on the car to get to my job. In the grand scheme of things (WFH, pandemic, in the garage, on a Friday), this was probably the best-case scenario for a dead battery.\n\n### Jump-Starting a Dead Battery\n\nMy neighbor happened to be pulling into the driveway next door. So, in desperation, I hurriedly asked if I could get a jump. If you're like me and always forget the connection steps, enjoy this beautiful illustration by yours truly:\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Diagram showing connection steps for jumper cables. First connect to the dead battery's positive post (1), then the running battery's positive post (2) with the red/white cable. Next, connect the negative post (3) of the running car's battery. Lastly, connect to the metal frame (4) or other exposed ground on the dead car.\"\n    src=\"/assets/img/blog/car-hacking/battery_jump.svg\"\n    width={ 740 }\n    height={ 428 }\n    visible={ false }\n  />\n</OneColumn>\n\nApparently, you can also go from the running car's frame (#3), and connect (#4) to the dead battery's negative post. However, the above order is what I've most commonly seen (you're welcome future, stranded self).\n\nWe hooked up the cables. To my understanding, the alternator spins faster when you rev the engine— and, consequently, outputs a higher amperage. So, holding the pedal at about 2000 RPM might be productive— especially for bigger engines.\n\nThis should put out between 14V and 15V from an idling vehicle. If you measure less than 13V across the battery's posts while the car is running, then it's more likely you have an issue with your alternator (which charges the battery).\n\nWe must have let his car rev for at least 5 minutes without a click, blink or whisper from our Camry. In a last ditch, I tried biting into the battery's terminals using the jumper cable's copper alligator-teeth— still nothing. I thanked my neighbor for trying, but it seemed toasted— kaput.\n\nAlas, it was not our destiny to taste the buttery, fishy flavor that night.\n\n## 03/13 Camry Debugging\n\nTo recap:\nFish Friday. Yet no tangy-sweet tartar sauce.\n\nMy fiancée and I actually attempted (after some rapid deliberation) to bicycle across Pittsburgh's East End to the church.\n\nUnfortunately, the hills of Pittsburgh are unforgiving to flat-land Illinoisers like myself. We also realized, after about a half-mile of biking, that the kitchen would definitely be closed by the time we would arrive.\n\nI called the church, and they kindly said they'd comp the dinners we'd ordered for the next Friday. Without any pressing appointments or plans for the weekend, I made it priority one to get the car running— and to get those battered cods in one week's time.\n\n### Under the Hood\n\nSaturday was an unseasonably beautiful day for March in Pittsburgh; so, I opened the garage door and ducked under the hood of the Camry. The first thing that stood out was the corrosion all over the battery's posts. It was heckin crusty and gross. 👇\n\nThat white (or bluish-green) powdery stuff is apparently either lead sulfate or anhydrous copper sulfate. As this corrosion builds up, so does the battery's resistance. No good.\n\nI dug through the mantle of powder with the multimeter probes to find that the battery was reporting a mere 1.79V. That's close to 10% of the battery's full capacity.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Example of lead-acid battery post corrosion\"\n    src=\"/assets/img/blog/car-hacking/post_corrosion.jpg\"\n    width={ 960 }\n    height={ 540 }\n  />\n</OneColumn>\n\nThat nasty business is lead sulfate or anhydrous copper sulfate. Hydrating anhydrous copper sulfate gives it the green or blue tinge. This [NOCO blog post](https://no.co/blog/ultimate-guide-to-clean-and-remove-car-battery-corrosion) was a great resource for understanding battery maintenance and safety— plus I really liked the graphics.\n\nSince the jump didn't work and the battery was reading an incredibly low voltage, my conclusion was that it needed to be replaced.\n\nIt's super easy to get the battery out. Doing this job on a Camry, a **10mm socket** (I recommend a little box-end too for the terminal clamps) is probably the only tool you really need.\n\nI recommend loosening the nut on each battery terminal clamp before the bolt tying this bracket to the frame. I made the mistake of taking off the bracket first and it was a pain to break the corroded nuts loose on the terminals with the battery loosy-goosy.\n\nOnce you get the front bolt out, there's a hooked tension-rod on the back that will need to drop down. Then you can pretty easily remove the bracket entirely. If you do it this way, you might be able to avoid dealing with the tensioning bolt at he other end of the bracket (see the image below).\n\n<TwoColumn>\n  <ImageWrapper\n    alt=\"Corroded battery still installed in Camry's engine bay. Red circle showing post-clamp tightening nut and the main bolt for the battery-retaining clamp bracket.\"\n    src=\"/assets/img/blog/car-hacking/battery_bolts.jpg\"\n    width={ 338 }\n    height={ 600 }\n  />\n  <ImageWrapper\n    alt=\"Corroded Toyota 2010 Camry battery sitting on the garage floor next to crescent wrenches and battery clamping bracket for mounting in car.\"\n    src=\"/assets/img/blog/car-hacking/took_that_shit_out.jpg\"\n    width={ 540 }\n    height={ 960 }\n  />\n</TwoColumn>\n\nReally only 2 nuts and 1 bolt to get the battery out. Both the terminal clamp nuts and the bolt tying the battery bracket to the front of the car frame use a 10mm socket.\n\nWith the battery finally out, I looked around the outside to find a long string of letters and numbers that had been heat-stamped into the plastic:\n\n> The first letter refers to the month it was manufactured: A-L refers to January – December. The number refers to the year in which the battery was made. For example: 2 would be 2012, 3 would be 2013, 4 would be 2014, etc. The last letter refers to the plant in which the battery was made.[^1]\n\nMy Toyota-manufactured battery had the number \"8\". Since the average lifespan of a normal car battery is between 2-5 years, it was most likely manufactured in 2018.[^2] R.I.P. battery, I promise to take better care of the next one.\n\n### Costco Membership\n\nThere are a couple stores (AutoZone, Advance Auto Parts, O' Reilly Auto Parts, Firestone, etc.) that will apparently test your battery for free. If you have a spare, it might be good to clean up the dead battery and take it over to them. You could find out if your battery is definitely shot or if the problem might lie elsewhere.\n\nI was eager to get this fixed, so I went ahead and decided to purchase a new battery. Like any product, there are good and bad manufacturers. It can be helpful to read reviews and make sure you're getting your money's worth.\n\nThe only two things that are really important in purchasing a new battery are the battery \"group\" and the cold-cranking amps (CCA). The 2010 Camry uses group 24F, and the CCA needs to meet or exceed 582 (the CCA on the original, Toyota-manufactured battery). A quick cost-comparison among some of the nearby stores yielded these results:\n\n<HorizontalScroller caption=\"Battery comparison. April, 4th 2021.\">\n<TableWrapper width=\"1000\">\n| store                                                                                                                                                                                                   | price + core     | CCA  | warranty                  |\n| :---                                                                                                                                                                                                    | :---             | :--- | :---                      |\n| [Advance Auto Parts](https://shop.advanceautoparts.com/p/diehard-gold-battery-group-size-24f-750-cca-24f-6/2130001-P?navigationPath=L1*14920%7CL2*15000)                                                | $169.99 + $22.00 | 750  | 3-year free replacement   |\n| [AutoZone](https://www.autozone.com/batteries-starting-and-charging/battery/duralast-gold-battery-24f-dlg-group-size-24f-750-cca/832327_0_0)                                                            | $169.99 + $18.00 | 750  | 3-year warranty           |\n| [Costco](https://www.costco.com/automotive-batteries.html)                                                                                                                                              | $89.99 + $15.00  | 700  | 3-year limited warranty   |\n| [Home Depot](https://www.homedepot.com/p/Exide-SPRINTER-MAX-12-volts-Lead-Acid-6-Cell-24F-Group-Size-750-Cold-Cranking-Amps-BCI-Auto-Battery-SX24F/308488599?)                                          | $99.00 + $15.00  | 750  | 30-month free replacement |\n| [O' Reilly Auto Parts](https://www.oreillyauto.com/detail/c/tested-tough-max/marine---boat/battery---automotive/9e0b1d7dae44/motorcraft-tested-tough-max-battery-group-size-24f-24r/mot2/bxt24fa?pos=4) | $134.99 + $18.00 | 700  | 3-year free replacement   |\n| [Walmart](https://www.walmart.com/ip/EverStart-Maxx-Lead-Acid-Automotive-Battery-Group-Size-24F/28275657)                                                                                               | $98.76 + ?       | 750  | 3-year free replacement   |\n</TableWrapper>\n</HorizontalScroller>\n\nThe cheapest options by far were Costco, Walmart, and Home Depot. The \"core\" charge was a new concept to me (someone who has done little to no car repair); but it's important to note:\n\n> Certain types of auto parts can be recycled or, more specifically, remanufactured for future sale. These parts have a core price that is used as a form of deposit on the portion of the part that can be remanufactured and that is designed to encourage return of the old part. The \"core,\" simply put, is your old part. Returning cores can save you money on replacement parts.[^3]\n\n<Note title=\"TL;DR\">\nMake sure you recycle your old battery instead of tossing it out the window, because it could save you $20 on the new one.\n</Note>\n\nWalmart didn't seem to advertise their core charge; regardless, I somehow convinced myself that the $60 Costco membership might be worth the $10 of savings for a Costco battery...\n\nA generous friend gave me a ride to a nearby warehouse. This was my first time within 100 feet of a Costco, and <i>that</i> deserves its own story... but I'll stay on topic.\n\nThe sales rep recommended the ($120) \"Gold Star Executive\" membership and described the reasons why that was the way to go. There was visible disappointment when I revealed that I had knowledge of the $60 option.\n\nAfter some very uncomfortable back-and-forth, I signed my soul away and got my picture printed on the plastic admission to the capitalist warehouse of wonders (in bulk).\nWe got back and plopped in the new battery. I hooked the tension rod back behind and tightened down the front of the bracket to the frame. There were a few articles online that recommended a mixture of baking soda and water for cleaning up the corrosion.\n\nI soaked the terminal clamps, then brushed off the remaining corrosion with a stiff-wired brush. The same articles recommended using dielectric grease to prevent corrosion on the battery posts. I didn't have that readily available; but apparently [petroleum jelly](https://blog.firestonecompleteautocare.com/batteries/how-to-clean-battery-terminals/) can be used as a substitute.[^4]\n\nThe negative post gave a satisfying *pop* when I touched it back together— that's just an eager arc of electricity from completing the circuit to all the car's electronics. This time, when I turned the key, I could heard the familiar *chunk-chunk* of the starter before the engine revved to life. Success!\n\n## 3/19 Charge Your New Battery\n\nOne week later, I was swimming in confidence and excitement. I had completed another successful home auto repair that had undoubtedly saved me hundreds of dollars in genuine Toyota parts, labor and B.S.\n\nWe were once again ready for delicious, holy fried fish. It was already paid for during the prior week's battery debacle. I rolled into the front seat, turned the key... and once again, the familiar fading dash lights of a dead battery.\n\n<OneColumn>\n  <ImageWrapper\n    alt='Inconceivable! (animated gif from \"The Princess Bride\")'\n    src=\"/assets/img/blog/car-hacking/inconceivable.gif\"\n    width={ 245 }\n    height={ 200 }\n    visible={ false }\n  />\n</OneColumn>\n\nThis time, we had the time and fortitude to battle the hills of Pittsburgh. We biked to the church and got our fish sandwiches. It was worth the trip, but it was still a bittersweet meal knowing that our battery woes were to be continued...\n\nThe next day, I had my neighbor help me jump the car again. Thanks be to Zeus— god of electricity, it started. I swear, Nick, I won't ask you for another jump start for the rest of my life.\n\nFor real. As soon as we got it started, I drove to the nearest (actually, not the even the nearest) Walmart and bought a 120V plug-in charger.\n\nWe kept the car running for another hour or so, just to make sure the battery was getting topped-off.\n\n### Testing for Parasitic Draw\n\nOver the course of the next week, I took measurements across the battery posts. If the issue had been a parasitic drain— some short along the circuit that was pulling charge off the battery; then I might have had a real problem.\n\nMeasuring across the terminals while the car was running showed over 14V, confirming that the alternator was doing its job. After shut-off, the battery measured 12.79V (good). Over the course of a day, the battery dropped to about 12.5V. This seemed concerning at first, but then the voltage settled at about 12.47V and held.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Just a few minutes after shutting off the car, the battery measures 12.79V across the posts.\"\n    src=\"/assets/img/blog/car-hacking/12_79V_multimeter.jpg\"\n    width={ 511 }\n    height={ 908 }\n  />\n</OneColumn>\n\nIt was a pain in the butt; but I tested the electrical system for [parasitic draw](https://us.autologic.com/news/testing-parasitic-draw-via-fuse-voltage-drop). I opened up the fuse compartments (there are actually two) on our 2010 Camry.\n\nOne is conveniently located under the hood (near the driver's side), and the other is unbelievably stupid-silly to get to— just behind the \"kick-panel\" trim (that plastic guard just under the steering wheel).\n\nI wish someone had told me to really, truly <i>exhaust every possible option</i> before wasting your time hunting for parasitic draw.\n\nTo find the source of a parasitic drain on your battery, you essentially need to probe across every fuse until you find a circuit drawing power. From there, you'd get a ballpark of where to keep looking.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"The fuse compartment under the hood of the Camry. Seriously, imagine holding a multimeter probe to each of those tiny, exposed pads on each of those little fuses... no, thanks. Never again.\"\n    src=\"/assets/img/blog/car-hacking/camry_fuses.jpg\"\n    width={ 872 }\n    height={ 493 }\n  />\n</OneColumn>\n\nAdditionally, to test for parasitic draw correctly, you should really have a charged battery. If you have a charged battery, then you can test voltage drop over time.\n\nIf the voltage drops quickly over the course of few hours (or drops below 12V) then you might have a reason to suspect parasitic draw. I definitely recommend watching this [video by HumbleMechanic](https://www.youtube.com/watch?v=lRcj1fQcWwU) covering parasitic draw and how to test for it.\n\n## Car Repair Lessons Learned\n\nAbout a month later now, and time to reflect. At the end of it all, I think it could have been that the new battery just hadn't reached a full charged.\n\nIt _had_ sat for a week in a cold garage. You can't blame me— I'm WFH and we're still in a pandemic.\n\nMy best guess is that the small charge it received in the post-swap jaunt to the grocery store (one week prior) wasn't enough to keep it alive. I'm also convinced that one of the cheap USB dongles I bought at a gas station was jacked up (pun unintended).\n\nFingers crossed it was a glitch and the new battery will last at least another 3 years. At any rate, we now have an emergency charger for future Fish Fry Fridays.\n\n[^1]: How to Read US Battery Date Codes. US Battery. April 4th, 2021. [https://www.usbattery.com/wp-content/uploads/2018/10/2015_US-Battery-Date-Codes-2-1.pdf](https://www.usbattery.com/wp-content/uploads/2018/10/2015_US-Battery-Date-Codes-2-1.pdf).\n[^2]: The Average Life of Car Batteries and 7 Tips to Extend Your Car Battery Life. Nationwide Blog. April 4th, 2021. [https://blog.nationwide.com/extend-car-battery-life/#:~:text=On%20average%2C%20car%20batteries%20last,will%20last%20is%20the%20weather](https://blog.nationwide.com/extend-car-battery-life/#:~:text=On%20average%2C%20car%20batteries%20last,will%20last%20is%20the%20weather).\n[^3]: What is Core? NAPA. April 9th, 2021. [https://www.napaonline.com/en/what-is-a-core](https://www.napaonline.com/en/what-is-a-core).\n[^4]: How to Clean Battery Terminals with Stuff You Already Have. Firestone Blog. April 4th, 2021. [https://blog.firestonecompleteautocare.com/batteries/how-to-clean-battery-terminals/](https://blog.firestonecompleteautocare.com/batteries/how-to-clean-battery-terminals/).\n</ProseWrapper>","content_type":"blog"},{"id":6,"tags":["Linux","Windows"],"title":"Regolith Linux","author":"Daniel Tompkins","description":"When did you first use a computer? I remember sitting at the corner desk in my childhood bedroom playing Descent II. It was probably the first video game I had ever played. The keyboard controlled the...","slug":"regolith","likes":0,"created_at":"2021-02-04T08:00:00-05:00","updated_at":"2021-02-04T08:00:00-05:00","featured_image":"http://backend:8000/app/backend/uploads/uploads/blog/regolith/regolith_screen.jpg","image_alt":"Screenshot of desktop windows arranged with i3 (window manager) and the Regolith distro","content":"<ProseWrapper>\n## Windows 95\n\nWhen did you first use a computer? I remember sitting at the corner desk in my childhood bedroom playing [Descent II](https://en.wikipedia.org/wiki/Descent_II). It was probably the first video game I had ever played.\n\nThe keyboard controlled the yaw, roll, and pitch of a spacecraft as you navigated through a labyrinth of sci-fi tunnels and airlocks. You had to fend off flying robots with lasers and missiles.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/DescentII_DOS.jpg\"\n    alt=\"The cover of Descent II, one of the first video games I'd ever played. You navigated a spaceship through a maze of airlocks, shooting missiles and lasers at flying robots.\"\n    width={ 316 }\n    height={ 316 }\n  />\n</OneColumn>\n\nThis was the early 2000's&mdash; before Spotify, when people still owned their own music. My dad swapped digital music collections on hard-drives with his co-workers and friends. I discovered Nirvana, [Portishead](https://www.youtube.com/watch?v=UeVYVq37KQE), and Static-X in the overwhelming (10GB+) depths of folders.\n\n## Windows 98\n\nGrowing up, I shared a room with one of my younger sisters. We had the old Windows 95 _Compaq_ PC in our room because my mom bought a new computer for work. Her's was running Windows 98 and had dial-up Internet.\n\nEven though it was off-limits at first, I still managed to get online&mdash; quite frequently, actually, once I was introduced to _Neopets_ and _Runescape_ by my friends.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/runescape_logo.png\"\n    alt=\"The O.G. Runescape Logo\"\n    width={ 448 }\n    height={ 147 }\n    visible={ false }\n  />\n</OneColumn>\n\n## Windows XP\n\nIn high school, we replaced the old Windows 95 _Compaq_ PC in our bedroom with a _Hewlett Packard_. It had a whopping 2GB of RAM. Our local library had a collection of PC games that were suddenly made accessible with this newfound computing power.\n\nOur library had some cool PC games, and I ended up buying a 50-ft Ethernet cable that I draped through the kitchen and up the stairs to download mods for _The Elder Scrolls IV: Oblivion_&mdash; and to update _MySpace_.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/oblivion-logo.png\"\n    alt=\"The Elder Scrolls: Oblivion, Logo\"\n    width={ 461 }\n    height={ 287 }\n    visible={ false }\n  />\n</OneColumn>\n\n## Windows 7\n\nWhen my application to pursue a degree in architecture was accepted, I was gifted an incredible Alienware laptop. It was a Windows 7 machine with maxed-out specs&mdash; an i7 processor, 24GB of RAM, and a full TB of storage!\n\nThis machine made for quick work while modeling or rendering in [Rhino3D](https://www.rhino3d.com/) and [V-Ray](https://www.chaosgroup.com/)&mdash; and could run any video game at max settings. It had an HDMI-in to use as a display, as well as all the RGB LEDs you could ask for.\n\n## Windows 10 + WSL\n\nMost Windows 7 devices offered a free upgrade to Windows 10 when Microsoft was advertising its flagship release. I resisted for a while, but eventually made the plunge. After a little debugging, the hardware was cooperating with its new OS.\n\nThe sharp lines, flat icons, and keyboard shortcuts for snapping and exposing windows were all very appealing. However, it was around this time that I was also introduced to the Raspberry Pi&mdash; and, consequently, the Unix terminal.\n\nA friend of mine, who's daily carry was a MacBook Air, showed me how to navigate the terminal with Tmux and Vim. He also showed me the basics of Web development. We started working on a [project](/killing-a-startup) together, and I installed the [Windows Subsystem on Linux](https://docs.microsoft.com/en-us/windows/wsl/about) (WSL) to use the same commands and follow a similar environment setup.\n\n## Ubuntu\n\nAfter a couple of years, I was getting very comfortable in the Ubuntu terminal. I was using CSS, HTML, JS, and Python at school and at work. At the time, I was commuting to Chicago on the train, and the Alienware was big, heavy, and had poor battery life.\n\nIn a stroke of luck, my sister gifted me her Dell XPS13 when the keyboard stopped working. I replaced the keyboard module for $35, upgraded the hard-drive (128GB &rarr; 256GB), and&mdash; more recently&mdash; replaced the battery. This laptop is still my daily carry.\n\nAfter much encouragement from my friends in tech, I decided to dual-boot Ubuntu. A full Linux distro takes interfaces with the laptop's hardware in a way that WSL cannot (at least, not at the time of writing).\n\nI was loving Ubuntu 18.04; but since the little laptop wasn't quite powerful enough to run all the software that I'd been using on Windows, I really had no reason to keep Windows. So, I quickly went from dual-boot to straight Linux.\n\nWSL had been serving me faithfully, but I was tired of struggling with networking and hardware issues. Even after upgrading to the latest WSL2 build as a Windows Insider, I was still frustrated with the hoops and hurdles of getting a working Docker setup or accessing the GPU for machine learning.\n\n### i3wm\n\nMore recently, I had been frequenting the [r/unixporn](https://reddit.com/r/unixporn) subreddit. I had done some simple customization: downloaded GTK themes, gnome-tweaks, and given the terminal a face-lift with color and vim-plugins.\n\nI started to investigate [i3wm](https://i3wm.org/) and [Polybar](https://github.com/polybar/polybar), in pursuit of a seamless terminal and to banish those distracting titlebars from my screen. Eventually, I settled on a set of config files that I was pretty proud of:\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/i3_screen.jpg\"\n    alt=\"Windows arranged with i3 (window manager) and a custom polybar.\"\n    width={ 1920 }\n    height={ 1080 }\n  />\n</OneColumn>\n\nResources and dotfiles for setting up your Ubuntu environment with Tmux, Vim, polybar and the i3 window tiling manager are available in my [Knowledge Base](/kb).\n\n### Regolith\n\nMy system was running so wonderfully... I had a polybar to envy, I was beginning to commit my i3 shortcuts to memory&mdash; and then something broke. When you're working in the terminal, small mistakes can be catastrophic.\n\nThis time, I couldn't pin-point what I'd done wrong; but I decided to take this opportunity to backup my files (while I still could!) and test out [Regolith Linux](https://regolith-linux.org/)&mdash; a preconfigured Ubuntu+i3wm Linux distro that I'd been eyeballing with great interest.\n\nI'm so glad that I did! The Regolith build installs from a USB just like a typical Ubuntu image. However, Regolith. I was disappointed that all of the time and effort I'd spent setting up volume and network UI blocks for my system's statusbar went down the drain; but, Regolith does it for you&mdash; and does it well:\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/regolith_screen.jpg\"\n    alt=\"This polybar setup is the default provided by the Regolith distro. Not a bad RICE for defaults!\"\n    width={ 1920 }\n    height={ 1080 }\n  />\n</OneColumn>\n\n## Conclusion\n\nI took my sweet time exploring Ubuntu before cutting ties with Windows; but I wish I'd listened to my friend's advice and made the switch years ago! I still have WSL2 on a Windows 10 laptop at work (for 3D modeling and rendering); but I've even installed the Regolith desktop on that machine using [VcXsrv](https://medium.com/@dhanar.santika/installing-wsl-with-gui-using-vcxsrv-6f307e96fac0)!\n\nIt was a little tricky, and Regolith doesn't make it obvious, but you can manually start the desktop GUI by starting xlaunch.exe, moving your regolith config files to the appropriate /root folders, exporting the correct $DISPLAY variable, and then running:\n\n<Pre>\n```bash\nsudo i3-gnome-flashback-session\n```\n</Pre>\n\nIf you're an experienced programmer, I encourage you to checkout Regolith; or, if you're like me, take it slow and start by diving into WSL. Good luck and happy coding!\n\n### update &mdash; 07/17/2020\n\nIf you don't want to leave the gnome shell&mdash; but want all the convenience and efficiency of i3&mdash; checkout [Pop Shell](https://github.com/pop-os/shell). I haven't used it yet... However, from what I've gathered, it lets you keep some classic Gnome features (like the application bar and window-exposer) while giving you the beautiful tiled screen that i3 provides.\n\n### update &mdash; 02/04/2020\n\nI ended up writing a full [post about getting WSL2 installed with Regolith Linux.](/wsl2)\n</ProseWrapper>","content_type":"blog"},{"id":8,"tags":["DIY","fabrication"],"title":"Microfactory 02","author":"Daniel Tompkins","description":"During my undergrad in architecture, one of the things that most excited me was the opportunity to work in a fabrication shop. At the time, my school had a modest metal shop and a slightly more expansive wood shop. They also provided students with two 3-axis CNTMotion CNC mills— each with a 5x10' bed. I've used these machines professionally as well, and (while they cost as much as a new Porsche) they're really well-built tools.","slug":"microfactory-2","likes":0,"created_at":"2020-10-14T19:30:00-04:00","updated_at":"2020-10-14T19:30:00-04:00","featured_image":"http://backend:8000/app/backend/uploads/uploads/blog/microfactory-2/powerwash.gif","image_alt":"Animated GIF of the bench being pressure-washed in the yard.","content":"<ProseWrapper>\n## A DIY Home Shop\n\nDuring my undergrad in architecture, one of the things that most excited me was the opportunity to work in a fabrication shop. At the time, my school had a modest metal shop and a slightly more expansive wood shop.\n\nThey also provided students with two 3-axis <em>CNTMotion</em> CNC mills— each with a 5x10' bed. I've used these machines professionally as well, and (while they cost as much as a new Porsche) they're really well-built tools.\n\nTowards the end of my time there, a few 6-axis robots were also hanging around in the shop annex:\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/microfactory-2/kuka-kr-200.jpeg\"\n    alt=\"Re-purposed factory robot, nicknamed Dionysus, with a mounted bandsaw.\"\n    caption={ <span>The re-purposed factory robot, <em>Dionysus</em>&mdash; a 6-axis, bandsaw-wielding <em>Kuka</em> KR-200. Image sourced from the Robot Construction Laboratory (RCL). Check out the resources for RCL's <a target='_blank' href='https://www.rcl-aap.com/open-source-factory'>Open Source Factory</a>.</span> }\n    width=\"500\"\n    height=\"500\"\n  />\n</OneColumn>\n\nIn the first Microfactory post, I described my scant experiences with fabrication— usually in the garage with my dad and some power-tools. So, having more professional means and devices made the school's shop feel like a cathedral for invention, and I spent a great deal of time getting to know the different machines, mechanisms, and methods.\n\nSince we moved into our new (and first) home, I'd naturally been drawn to the idea of using the garage and the basement for a home shop.\n\n## Every Shop Needs a Workbench\n\nThere was a Sears Grand that went out of business in my hometown in northern Illinois. I think the \"grand\" stores were Sears' last-ditch effort to combat Walmart... I don't know.\n\nAnyways, it went out of business. During the liquidation sale, my dad was kind enough to buy me a decent collection of tools— lots of Craftsman tool-bags, wrenches, hammers, pliers, etc. I've gradually accumulated a few more tools over the years— mainly from garage and estate sales. I also have an ever-growing collection of scrap electronics— power supplies, motors, LEDs, Arduinos, Raspberry Pis...\n\nNothing's that big, but it's definitely a lot. And it's taking up a lot of room. The biggest problem that I've encountered is the lack of a work surface. The occasional house centipede coming to visit me from the dark corner of the basement can make soldering on the floor distracting.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/microfactory-2/house-centipede.jpeg\"\n    alt='House-centipede with speech bubble, saying: \"Bonjour\"'\n    width=\"1000\"\n    height=\"664\"\n    visible={ false }\n  />\n</OneColumn>\n\n## Bottom line, it was high time for a workbench.\n\nWhen my girlfriend's dad heard that we were interested in making one, he suggested we save on material costs and setup his father's bench. His dad worked as a manager along an assembly-line at the Budd Company in Philadelphia. By the looks and contents of the bench, he was also quite handy as a machinist.\n\nTogether, we planned out a weekend to drive out to Philly and help Natalie's dad clean off the bench. His parents have both passed away now, so it seemed like a wonderful idea to salvage the bench and carry on the spirit of one tinkerer to the next.\nPressure-Washing 🤘\n\nOil is often applied as a lubricant— and as a medium to carry away heat— when machining or drilling metal. Unfortunately, we found that it can also coagulate into a sticky kind of jelly when it's left to the elements, or pools up.\n\nNatalie's grandpa left all kinds of unusual metal stock and tools in, on, and around the workbench. Uncovering it and cleaning it out felt like exploring the tomb of some metal-working pharaoh.\n\nIn a relatively short period of time— maybe 40-to-60 years— there must have been some drastic changes in manufacturing. As we went through the drawers and shelves, the older tools— as well as the hardware and stock pieces— all felt extraordinarily foreign, time-worn and remarkable.\n\nAfter an hour or so of peeling nuts and bolts out of sticky corners and dusting metal shrapnel into the trash, we finally got to the point where we could actually move the bench out to the yard. Natalie's dad had an idea— to use his power-washer to blast off all the gooey oil— and it ended up being a good one.\nAnimated GIF of the bench being pressure-washed in the yard.\n\n<OneColumn>\n  <ImageWrapper\n    src='/assets/img/blog/microfactory-2/powerwash.gif'\n    alt='Animated GIF of the bench being pressure-washed in the yard.'\n    caption='We blasted off the surface layer of congealed oil with a Ryobi 1800PSI pressure-washer.'\n    width=\"360\"\n    height=\"202\"\n  />\n</OneColumn>\n\nSome of the folks in [/r/Workbenches](https://www.reddit.com/r/Workbenches/comments/j529iz/my_girlfriends_grandpa_was_a_machinist_and_had/?utm_source=share&utm_medium=web2x&context=3) were disappointed that we were cutting away the patina. It is sad to see it go, but it was definitely a quick-and-easy way to get the bench clean— and I'm sure it'll get dirty again soon.\n\n## Workbench Installation\n\nThat one cleanish spot on the workbench surface is from an incredible cast-iron vise (which Natalie's dad graciously gifted as well). The rest cleaned up nice. We used a scrub brush with some brake cleaner on a set of steel-angle shelves that looked as though grandpa had cut, drilled and bolted together himself. Underneath the table are a set of steel drawers as well, so plenty of storage options.\n\nThe legs are made up of a layered, folded steel. It's a unique design, and very sturdy. The top is made up of (3) 2x12s sandwiched together and carriage-bolted down at the top of the legs. I also attached a 2x12 to the piloted holes on the bottom rungs. Natalie's dad figured the legs were purchased from a kit, and he found a second set to take home for his partner Resolute Desk.\n\nWhen we finally had all the parts moved into our basement, I cut some 2x4s to fit the floor-to-joist height and malleted them tight against the wall. Once those were frictioned into place, I made sure they were plumb and used a couple splice plates at the top to tie them into the joists. After shifting the workbench against the wall, I did some additional leveling with shims and scraps.\n\n<TwoColumn>\n  <ImageWrapper\n    alt=\"Close-up of a 2x4 stud splice plate tying ino the floor joist\"\n    src=\"/assets/img/blog/microfactory-2/stud-splice-plate.jpg\"\n    height=\"768\"\n    width=\"432\"\n  />\n  <ImageWrapper\n    alt=\"Detail shot of the junction box above the workbench with a 4-plug outlet getting installed.\"\n    src=\"/assets/img/blog/microfactory-2/workbench-electrical.jpg\"\n    height=\"768\"\n    width=\"432\"\n  />\n</TwoColumn>\n\nI measured some 2-by-4's, cut them a hair long, malleted them to the wall. Then, I screwed in a splice-plate from the stud to the floor joists. There was also a conveniently located junction box where I put in a 4-plug outlet.\n\nNext, I moved the shelves onto the work surface and piloted some additional holes in the steel-angle frame. I put some cabinet screws through the shelf frame and the bench's wooden backsplash. This anchored everything against the wall— and prevented any chance of the shelves tipping forward. Once everything was in place, it certainly felt solid as a rock.\n\nI returned the vise to its former resting place, and found a new use for some under-cabinet LEDs that had adorned the kitchen at our previous apartment. The height of the lights provides a nice, even wash across the work surface.\n\nLucky for me, there happened to be a junction box right above the top shelf. I bought a pair of outlets and a cover-plate, and rewired the box for a total of 4 local plugs.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"The finished workbench, solidly installed in the corner of the basement.\"\n    src=\"/assets/img/blog/microfactory-2/workbench-ready.jpg\"\n    height=\"432\"\n    width=\"768\"\n  />\n</OneColumn>\n\n## Closing Thoughts\n\nSo it's not quite a microfactory yet. My imagined robots and CNC mills aren't autonomously spitting out production pieces. Although, I do feel like this was a tremendous step. Hopefully having a nice workspace will provide some momentum for more projects. I'm looking at this old CRT for something... I also have some stepper motors and their drivers that I've been meaning to wire up and test. Anyways, that's it for now. Thanks.\n</ProseWrapper>","content_type":"blog"},{"id":4,"tags":["code","DIY","electronics"],"title":"Hot Tub Phone Repair","author":"Daniel Tompkins","description":"You shouldn't be allowed to have nice things when you forget your phone in your swimsuit pocket— not once, but <i>twice</i>! The first time was a Motorola Razr. I was swimming at my grandma's condo and came out of the pool with a dripping flip phone...","slug":"hot-tub","likes":0,"created_at":"2019-10-15T04:45:00-04:00","updated_at":"2019-10-15T04:45:00-04:00","featured_image":"http://backend:8000/app/backend/uploads/uploads/blog/hot-tub/pope.jpg","image_alt":"Pope flicking holy water from an aspergillum","content":"<ProseWrapper>\n## The Splashening\n\nYou shouldn't be allowed to have nice things when you forget your phone in your swimsuit pocket&mdash; not once, but _twice!_ The first time was a Motorola Razr. I was swimming at my grandma's condo and came out of the pool with a dripping flip phone.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/hot-tub/razr.png\"\n    alt=\"Motorola Razr phone meme.\"\n    width={ 500 }\n    height={ 510 }\n  />\n</OneColumn>\n\n## Cell Phones Nostalgia\n\nA couple of my friends' parents worked at Motorola, so somehow I got my hands on a lot of unique devices at an early age. One of my all-time favorites was the Motorola \"MOTOROI\" XT720, which featured Android 2.0 and a 720MHz mobile processor.\n\nI ended up [rooting](https://www.xda-developers.com/reasons-for-root-android/) this phone&mdash; and it's still running! Here's a [review](https://phys.org/news/2010-01-motorola-motoroi-korea-android-smart.html) from 2010, when it was released:\n\n> huge 3.7 inch, high-definition WVGA (480x854) display, making it easy to view full page websites, videos, games, or photos.\n\n_Okay_. This post is _Hot Tub Phone Repair_, not _Hot Tub Time Machine_. So I'll stop pondering the evolution of mobile technology and get to the point! I was on a business trip on the west coast when I <u>completely drowned my Galaxy S7 in the hotel's hot tub.</u>\n\nThis might have been my longest lasting phone&mdash; 3 years and not a scratch! But it didn't matter. That expensive OtterBox and \"water resistant\" label couldn't save this cellphone from getting blasted by a Jacuzzi jet for 50 minutes. It was bricked.🧱 🧱 🧱\n\nLuckily one of my co-workers had the foresight to remove the MicroSD card. My first thought was to shake the water out at at his face like the pope waving an aspergillum on Easter.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/hot-tub/pope.jpg\"\n    alt=\"Pope flicking holy water from an aspergillum.\"\n    width={ 600 }\n    height={ 500 }\n  />\n</OneColumn>\n\nSpoiler alert: I didn't fix the phone. 😞️ That's a misleading title... I _did_, however, manage to recover my photos from a corrupt SD card!\n\nWhen I first put the SD card into my PC, I was met with a disappointing message from Windows:\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/hot-tub/fucking-windows.jpg\"\n    alt=\"Windows error: you sat in a hot tub.\"\n    width={ 374 }\n    height={ 172 }\n  />\n</OneColumn>\n\n## Adapter Desperation...\n\nMost people are aware of the fact that formatting removes all the device's data. So, obviously this is _not_ what I was hoping for, but... Thank Poseidon! I tried another MicroSD adapter, and I was able to access files on the card.\n\nI didn't really care about my apps, but I hadn't backed up my photos or videos for a year. I hate Google Photos and all that \"cloud\" bullshit, but now it was really biting me in the ass... If there's one thing you need to take away from this article, it's backup your photos.\n\nEven though I could see all my photos, almost all of them were corrupt! Reading the files directly from the card revealed horizontal strips and chunks of the image over a pixelated (green?) color. I tried to copy the images to my PC, but everything was trapped on the card.\n\n## Recovery Research\n\nA quick Google search led me to [ddrescue](https://www.gnu.org/software/ddrescue/). While this seems like an incredible recovery tool, it was unable to build a usable image from the SD card... 🤔️\n\nThe images were readable from the card, but weren't displaying correctly (or at all). I couldn't copy them onto my local machine... So, finally, I thought&mdash; perhaps I could recover the broken images by compiling them into a video?\n\nIn the past, I'd used [ffmpeg](https://www.ffmpeg.org/) to convert individual stills to a video file. After another quick search, I discovered that ffmpeg not only has built-in error detection on the input frames; but it will also automatically discard irrecoverably corrupt frames.\n\nA post on [StackOverflow](https://stackoverflow.com/questions/45983605/ffmpeg-jpg-frame-capture-how-to-discard-corrupted-frames) gave me what I needed. The user had the \"-err_detect aggressive\" flag on an rtsp stream in an attempt to clean the incoming live footage.\n\n### FFMpeg Saves the Day!\n\nEureka! A simple ffmpeg command using the same error detection flag within the image directory managed to recover every photo into a video file!\n\n<Pre>\n```bash\nffmpeg -err_detect aggressive -fflags discardcorrupt -framerate 1 -pattern_type glob -i '*.jpg' -c:v libx264 -preset:v slow OUTPUT_VIDEO_NAME.avi\n```\n</Pre>\n\nAfter that, I opened the video in Adobe Premiere and did a simple frame export to retrieve all the individual images! 😍️ Okay, I'll admit, this was a pretty unique situation...\n\nAside from that awful feeling of being without a device for a week, the last thing you want is to lose years of photos and memories. So, if any of you enjoy warm, bubbly tubs with your mobile devices, perhaps you can learn something from my experience. Of course, I hope you can all avoid this disaster with the occasional backup!\n</ProseWrapper>","content_type":"blog"},{"id":7,"tags":["code","design"],"title":"Abstractions II","author":"Daniel Tompkins","description":"Abstractions is a kickass Web developement conference started in Pittsburgh. This was only the second <em>Abstractions</em> ever!","slug":"abstract","likes":0,"created_at":"2019-10-08T05:00:00-04:00","updated_at":"2019-10-08T05:00:00-04:00","featured_image":"http://backend:8000/app/backend/uploads/uploads/blog/abstract/abstractions.gif","image_alt":"Gif of Abstractions conference swag, conference map, and Centipede highscore.","content":"<ProseWrapper>\n## Maps and Schedules\n\nThe schedule tool on [abstractions.io](https://abstractions.io/) wasn't bad, but I found it a little hard to use. The biggest issue was the map, which did not contain a legend.\n\nI used this [schedule picker](https://abstractions.thinkco.dev/schedules) (quickly thrown together by Think Co.) and made this improved map 👇. This was also thrown together, but felt a little easier to read.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/abstract/abstract-map.jpg\"\n    alt=\"Map of the Pittsburgh Convention center with a legend for finding Abstractions conference rooms.\"\n    width=\"682\"\n    height=\"544\"\n  />\n</OneColumn>\n\nFor what it's worth, a little confusion on the layout of the rooms was NBD considering the small crew at [Code & Supply](https://codeandsupply.co/) that was responsible for managing this incredible conference! I really enjoyed Abstractions II!\n\n## Settling In...\n\nThe C&S people got a lot of flak for the NFC (near-field communication) wristbands, but they were hardly an inconvenience. The conference center is so beautiful, and was such fun to explore. I also snuck into the Arcade for a couple minutes and played some pinball and [Centipede](https://www.youtube.com/watch?v=V7XEmf02zEM). Somehow the high score on there was like 400k!\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/abstract/centipede-arcade-flyer.jpg\"\n    alt=\"Flyer for the 1980 arcade game, Centipede\"\n    width=\"682\"\n    height=\"776\"\n  />\n</OneColumn>\n\nHaving never played some of these OG arcades, I was really amazed at the brightness and sharpness of the pixels on those old CRT monitors. Update. I finally made it on the scoreboard, but was still miles behind \"DBH\". Holy shit. How do people get that good at videogames??\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/abstract/centipede-high-score.jpg\"\n    alt='Not nearly as high as \"DBH\", but not bad for a couple hours practice...'\n    width=\"682\"\n    height=\"560\"\n  />\n</OneColumn>\n\nThey had Galaga, Ms.Pac-Man, Pac-Man, Donkey Kong, half a dozen pinball machines, and a really dramatic media art installation with a projector and a kinect (almost missed it!). There was also a \"silly hat\" making conference (that's always open), and another room next-door that was exclusively for playing board games.\n\n## Besides Games... LOOT!\n\nI went to a lot of incredible talks, and I'm definitely looking forward to the next conference. There was tons of conference loot. If you like stickers, pins, koozies, and other freebies you walked out a king. It wasn't a massive conference, but there was still a ton to do and see.\n\nAbstractions conference loot galore! Stickers, pins, and more! Follow on Twitter for more.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/abstract/loot.png\"\n    alt='Abstractions conference loot galore! Stickers, pins, and more!'\n    width=\"523\"\n    height=\"582\"\n  />\n</OneColumn>\n\n## Closing Thoughts— Abstractions III??\n\nHopefully the money and hype that this year's conference generated can help go towards even bigger-name guests at Abstractions III! That's not to say that this year's guests weren't phenomenal. The day-two keynote by Simone Giertz about her journey from amateur maker to YouTube-star was inspiring and practical.\n\nAdditionally, two of my co-workers, Remy Porter and Jordan Parsons, gave some wonderful talks. Remy showed off his improv and synth-building skills, and Jordan talked about his career in media art, digital fabrication, and design. The C&S crew did a great job of mixing local flavor with some big names in software and digital design.\n\nIf you'd like to see more of the talks, checkout Code & Supply's recordings of the talks on their YouTube channel. Sorry it took me a month and a half to do a more in-depth recap of the conference; I hope to see you there next time.\n</ProseWrapper>","content_type":"blog"},{"id":5,"tags":["blogging"],"title":"What the Blog?","author":"Daniel Tompkins","description":"Blogs?? That's right. You haven't time-traveled. We're 19 years past the turn of the millenium. People are giving up their writing to <i>Medium</i>, leaving <i>Facebook</i> (not MySpace), and <i>YTMND</i> is disappearing...","slug":"blogs","likes":0,"created_at":"2019-07-02T17:57:00-04:00","updated_at":"2019-07-02T17:57:00-04:00","featured_image":"http://backend:8000/app/backend/uploads/uploads/blog/blogs/blogs.gif","image_alt":"Gif of screenshots from featured blogs","content":"<ProseWrapper>\nBlogs?? That's right. You haven't time-traveled. We're 19 years past the turn of the millennium. People are giving up their writing to [Medium](https://yanngirard.typepad.com/yanns_blog/2015/10/why-you-shouldnt-blog-on-medium-.html), they're leaving [Facebook](https://www.theverge.com/2019/3/6/18253274/facebook-users-decline-15-million-people-united-states-privacy-scandals) (not MySpace), and _YTMND_ is [disappearing](https://mashable.com/article/ytmnd-youre-the-man-now-dog-shuts-down/). It's not all bad...\n\nThere are still a handful of incredible authors, creators, artists, designers, makers, writers&mdash; bloggers who deserve a shoutout. Most of these are independent projects&mdash; people who own their platform. One post at a time, they're keeping the Internet from melting into an ad-stickered bathroom&mdash; filled with liked, starred, SEO'd rubbish. 👍\n\n## Sofiya Semenova\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/blogs/sofiya.jpg\"\n    alt=\"Screenshot of Sofiya Semenova's blog.\"\n    width=\"683\"\n    height=\"331\"\n  />\n</OneColumn>\n\nI can't remember when I first stumbled upon Sofiya's [blog](https://sofiya.io/blog/). I love how she pairs each post with a \"listening to\" link, which redirects to a song on YouTube. Like an O.G. _MySpace_ page, it gives the blog a fantastic added layer of intimacy. The songs are practically a soundtrack to reading the blog, and I can likewise imagine Sofiya in the zone&mdash; coding and writing to [CRAY](https://www.youtube.com/watch?v=j9mSIgdAGb4) or whatever her weekly jam is.\n\nEven though this is mostly a personal blog, she breaks down all of her projects into readily digestible content for the immediate enjoyment of any demographic. The design is wonderful&mdash; pleasant, interactive, responsive, yet minimal. There's a good variety of art, code, writing, and design projects; but everything is well organized to suit your favorite niche.\n\nFrom a quick inspect, it looks like Sofiya has built her website with [Jekyll](https://jekyllrb.com/). It also fails gracefully&mdash; with a creative [404 page](https://sofiya.io/asdf) that I truly appreciate. If you're looking for some new and interesting content by an inspiring artist and developer, definitely give her site a visit.\n\n## N-O-D-E\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/blogs/node.jpg\"\n    alt=\"Screenshot from n-o-d-e.net\"\n    width=\"693\"\n    height=\"336\"\n  />\n</OneColumn>\n\n[NODE](https://n-o-d-e.net) has been blogging/vlogging for a while. I took a look at Wayback Machine's [stored version](https://web.archive.org/web/20141202211033/http://n-o-d-e.net/) of the site from December 2014, and was pleasantly surprised at what I found.\n\nFive years ago, the homepage just about matches the current version&mdash; a wonderfully minimal list of links to videos, projects, and musing; but it used to be more emulative of an early terminal. The text glows as each character appears&mdash; one after the other, as though parsing through some code.\n\nDespite a new logo&mdash; a kind of flag for the digital nation-state of NODE&mdash; the new n-o-d-e.net has stuck to its roots. The list of hacks, DIY projects, and tech podcasts are thoughtful and well-designed. It's is an insanely useful resource to a community of people who care about decentralized tech.\n\nIn the spirit of Stewart Brand's [Whole Earth Catalog](https://en.wikipedia.org/wiki/Whole_Earth_Catalog), the new [NODE Zine vol. 1](https://n-o-d-e.net/zine/) (digital copy available via [dat](dat://d5f52282d8277c323abcd838e7b1e62113af6dfa70f3c7316ec004911881ec41)) successfully aggregates and documents tools for cultivating decentralized culture, including: off-grid comms, DIY wireless infrastructure, 3D printing and tutorials, walk-throughs of native NODE projects, dweb software and websites, and much more.\n\n\"The digital version of NODE VOL 01 is free, and can be downloaded on the Dat P2P network:\n\n<Pre>\n```plaintext\ndat://d5f52282d8277c323abcd838e7b1e62113af6dfa70f3c7316ec004911881ec41\n```\n</Pre>\n\n(If you've never used Dat before, you can install the command line tool from [https://datproject.org](https://datproject.org), or the easier GUI desktop app is available at [https://github.com/dat-land/dat-desktop/releases](https://github.com/dat-land/dat-desktop/releases). Alternatively, you can use Beaker Browser [https://beakerbrowser.com](https://beakerbrowser.com)).\n\n## K-Squared Ramblings\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/blogs/k-squared.jpg\"\n    alt=\"Screenshot from www.hyperborea.org\"\n    width=\"795\"\n    height=\"385\"\n  />\n</OneColumn>\n\n[K-Squared Ramblings](https://www.hyperborea.org/journal/category/tech/) is a blog by\n\n> \"A California couple into sci-fi, the Internet, and the strangeness of the world.\"\n\nKelson's blog, Hyperborea, uses WordPress. If you don't know how to code, this is one of the easiest and most popular platforms to [start your blog](https://drewdevault.com/make-a-blog). Although&mdash; you should learn to code! Kelson, who posts frequently on K<sup>2</sup>R, picked a nice theme&mdash; not too cluttered, with easy navigation.\n\nThe biggest reason I like K<sup>2</sup>R is that it's really a blog on blogging. There are a ton of extremely useful tips and walkthroughs from the author's own experiences&mdash; critical thinking on social media and Internet culture, tutorials on using webhooks and automating online tasks, as well as tools for aggregating and curating information online.\n\nIf those topics don't persuade you, Kelson also has some great posts and pics for amateur astronomers. I definitely recommend adding his [RSS](https://hyperborea.org/journal/feed) to your daily reader for some new and interesting musings on the social impacts of new tech, privacy, and decentralized culture.\n\n## Kevin Davis\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/blogs/kevv.jpg\"\n    alt=\"Screenshot from kevv.net\"\n    width=\"797\"\n    height=\"386\"\n  />\n</OneColumn>\n\nA new blog! Kevin Davis only has one post, but I'm excited to stop by again soon to see if [kevv.net](https://kevv.net) has any new additions. The one and only article, _You (probably) don't need ReCAPTCHA_, is insanely thorough.\n\nI was looking for a simple yet effective way to prevent spam in my comments and \"subscribe\" forms&mdash; without using Google's [reCAPTCHA](https://www.google.com/recaptcha/intro/v3.html). I love Kevin's deep-dive into the various CAPTCHA (completely automated public Turing tests) devices and methods.\n\nFrom common to curious, Kevin documents the world of [CAPTCHA](https://en.wikipedia.org/wiki/CAPTCHA). Give it a read when you've gotten your fifth @domstats.su subscriber, or feel like you'd rather have more human subscribers than bots.\n\n<hr/>\n\n### Hunting for Blogs\n\nI've been on the blog hunt. It started for this post, but now I realize that I should have been doing this a long time ago. You should too! I know Medium might feel easy and accessible, but that's because it's in the networks _you hardly ever leave.\n\nThere are a ton of other blogs that I want to list here, but I've been holding on to this post for too long&mdash; so that's it. I just want to leave you with this: get outside your networks&mdash; try harder to discover new places on the Web outside of Facebook and Google. You won't be disappointed.\n\nIf you liked this list, or want to see the rest of my picks for _What the Blog?_, checkout my [bookmarks dump](/bookmarks)&mdash; look under 'Blogs (Independent)' and 'Blogs (Journals)'. Additionally, I've found _GitHub_ actually has some lengthy lists for finding some exceptional blogs. Checkout these links:\n\n- [pgilad/awesome-blogs](https://github.com/pgilad/awesome-blogs)\n- [jkup/awesome-personal-blogs](https://github.com/jkup/awesome-personal-blogs)\n- [kilimchoi/individuals](https://github.com/kilimchoi/engineering-blogs#individualsgroup-contributors-1)\n- [learn-anything/blogs](https://github.com/learn-anything/blogs)\n</ProseWrapper>","content_type":"blog"},{"id":10,"tags":["code","business"],"title":"Killing a Startup","author":"Daniel Tompkins","description":"Together with Sam Piecz, I co-founded a web application for visualizing personal financial data and test-building portfolios. Since 2016, I worked as a designer and— eventually— as the go-to Javascript (JS) coder, for...","slug":"killing-a-startup","likes":0,"created_at":"2019-06-09T12:13:00-04:00","updated_at":"2019-06-09T12:13:00-04:00","featured_image":"http://backend:8000/app/backend/uploads/uploads/blog/killing-a-startup/correlateprohomepage.jpg","image_alt":"Screenshot of the original CorrelatePro homepage (no longer active).","content":"<ProseWrapper>\n## Making Friends Who Can Code\n\nTogether with [Sam Piecz](http://www.samuelpiecz.com/), I co-founded a web application for visualizing personal financial data and test-building portfolios. Since 2016, I worked as a designer and&mdash; eventually&mdash; as the go-to Javascript (JS) coder, for _CorrelatePro_.\n\nSam, who'd grown up on the Raspberry Pi, knew Linux and the command-line interface (CLI) like the back of his hand. He showed me how to navigate the terminal; how to use Vim, Tmux and Github; and got me setup with basic devops: in our case, a virtual environment and [Docker](https://www.docker.com/). Any technical work I do on a computer today is because of Sam.\n\nSam and I met in the Boy Scouts&mdash; eventually we both went on to earn the rank of Eagle. When we were younger, Sam and I went to punk, metal, and electronic shows. We started skating together, went to some weird suburban parties, and got into some light-weight trouble.\n\nSam started (and has since sold) an electronic cigarette \"e-liquid\" company&mdash; _Heating Up Vapor_. I designed the labels for his bottles, and had started working on some custom packaging. As we got older, however, almost every time we went to hang out, we were really just sitting on opposite sides of the room coding on our laptops.\n\n## Learning Slow\n\nSam got me started with basic CSS and HTML. He got me a job doing remote work in search engine optimization (SEO). In undergrad, I was getting a degree in architecture. I enrolled in (and dropped out of) a Python course. Sam kept teaching me and encouraging me.\n\nAt grad school, I took a course in data visualization. I didn't know any JavaScript, but they were teaching us to learn [D3](https://d3js.org)&mdash; a JS library for \"data-driven documents\".\n\nI barely passed, but continued to practice&mdash; eventually implementing a few basic visualizations in our application. I recycled some code, a force-directed graph, and improved upon it for adding stocks/cryptos/sectors to a mock portfolio. You could visualize the correlation between those assets (based on distance/density).\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/killing-a-startup/forcedirectedgraph.jpg\"\n    alt=\"A force-directed graph clustered nodes (each representing a different ticker or sector) by finding correlations in price increases or decreases over time.\"\n    width={ 997 }\n    height={ 853 }\n  />\n</OneColumn>\n\n## We Actually Built Something\n\nBefore we took down CorrelatePro, I'd also implemented a candlestick graph with [TechanJS](https://techanjs.org). We had a free plan with a few financial data APIs. Sam setup some internal APIs to move that data (realtime prices, tickers, and historical costs) to the frontend. I took in the data, filtered it and formatted it, and made those dates, times, prices and quantities legible. We had news, a public dashboard for viewing other users' portfolios, and sentiment analysis based on Tweets.\n\nOver time we saw a couple boosts in page-views and click-throughs as Sam continued to submit new pages to Google's Search Console. Working remotely, we used Trello to keep track of tasks and communicated with Slack. We posted to Hacker News and Reddit, built a company Facebook page, and put some effort toward an email marketing campaign. We were both struggling to contribute with school&mdash; and lost a third co-founder early on.\n\nAfter about three years, we still weren't getting enough feedback to iterate. The few users we did have, mostly friends and family, weren't entirely sure how to use it; and the money we'd sunk into server costs was starting to add up&mdash; even though all our libraries and APIs were free. We went through YCombinator's _Startup School_, and applied several times for YC funding to no avail.\n\n## ⚰ RIP ⚰\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/killing-a-startup/correlateprohomepage.jpg\"\n    alt=\"Screenshot of the original CorrelatePro homepage (no longer active).\"\n    width={ 935 }\n    height={ 593 }\n  />\n</OneColumn>\n\nAll the videos and podcasts we'd shared&mdash; interviews with founders and venture capitalists (VCs)&mdash; told us we should have quit a long time ago. However, SEO takes time. Startups take time. They take dedication, and we weren't giving up.\n\nThere were weeks, even months (studying for finals), when we made little or no progress; but we always came back. We'd get burnt out, but we'd pick it up again and keep trying.\n\nWhen Sam took down the server, I was terribly upset. It had consumed our time and our attention for years, and it felt awful... At the same time, it was liberating. We'd both been so fixated on fixing this thing without knowing if anyone would want it&mdash; even if it wasn't broken.\n\n## Learning Lessons\n\nI don't want to tell you to give up, but I do want to say that&mdash; if you are a struggling entrepreneur&mdash; know when to move on. It might not be obvious, and it definitely won't be easy, but if you're ever going to succeed it's certainly necessary.\n\nSam and I learned everything we did about finance while working on CorrelatePro. We wanted to make investing as simple and straight-forward as possible&mdash; for ourselves, and for everyone else who sees investments as opportunities to rise up financially.\n\nWhile we lost something dear to us, we learned a great deal. It was an invaluable experience that will give us some incredible insights when we move onto the next project. We did fail, but we're not giving up.\n</ProseWrapper>","content_type":"blog"}]","status":200,"tags":["/page"],"url":"http://backend:8000/api/articles"},"revalidate":31536000}