"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4!kv-i6$n0qi1' \
             '(bbgh%&h%n2h*9!2+c4q_=rbf69n^1(x$%j0z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
ALLOWED_HOSTS_BASE = [
    '0.0.0.0',
    '127.0.0.1',
    'localhost',
    'backend',
    'frontend',
    'loosed.local',
]

# Taggit
TAGGIT_CASE_INSENSITIVE = True

# Swagger
ENDPOINT_DOMAIN = "https://l-o-o-s-e-d.net"
if DEBUG:
    ENDPOINT_DOMAIN = "https://loosed.local"
SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'basic': {
            'type': 'basic'
        }
    },
    'DEFAULT_API_URL': ENDPOINT_DOMAIN,
}
# ReDoc
REDOC_SETTINGS = {
    'LAZY_RENDERING': True,
}

# Without port specified
ALLOWED_HOSTS_HTTP = [f"http://{host}" for host in ALLOWED_HOSTS_BASE]
ALLOWED_HOSTS_HTTPS = [f"https://{host}" for host in ALLOWED_HOSTS_BASE]
ALLOWED_HOSTS += ALLOWED_HOSTS_HTTP
ALLOWED_HOSTS += ALLOWED_HOSTS_HTTPS
# Frontend (port 3000)
ALLOWED_HOSTS_FRONTEND = [f"{host}:3000" for host in ALLOWED_HOSTS_HTTP]
ALLOWED_HOSTS_FRONTEND += [f"{host}:3000" for host in ALLOWED_HOSTS_HTTPS]
ALLOWED_HOSTS += ALLOWED_HOSTS_FRONTEND
# Backend (port 8000)
ALLOWED_HOSTS_BACKEND = [f"{host}:8000" for host in ALLOWED_HOSTS_HTTP]
ALLOWED_HOSTS_BACKEND += [f"{host}:8000" for host in ALLOWED_HOSTS_HTTPS]
ALLOWED_HOSTS += ALLOWED_HOSTS_BACKEND
# Then add them
ALLOWED_HOSTS += ALLOWED_HOSTS_BASE

# CSRF
# Exclude domains without protocols in CSRF setting
CSRF_TRUSTED_ORIGINS = []
CSRF_TRUSTED_ORIGINS += ALLOWED_HOSTS_HTTP
CSRF_TRUSTED_ORIGINS += ALLOWED_HOSTS_HTTPS
CSRF_TRUSTED_ORIGINS += ALLOWED_HOSTS_FRONTEND
CSRF_TRUSTED_ORIGINS += ALLOWED_HOSTS_BACKEND

CSRF_COOKIE_SECURE = True
CSRF_COOKIE_SAMESITE = 'Strict'
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = 'Strict'

# Application definition

PROJECT_PATH = os.path.realpath(os.path.dirname(__file__))

INSTALLED_APPS = [
    'articles',
    'comments',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.messages',
    'django.contrib.sessions',
    'django.contrib.sitemaps',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'drf_yasg',
    'easy_thumbnails',
    'rest_framework',
    'taggit',
    'tinymce',
    'webmention',
    'widget_tweaks',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'webmention.middleware.webmention_middleware',
]

# CORS
CORS_ALLOWED_ORIGINS = CSRF_TRUSTED_ORIGINS
CORS_ORIGIN_WHITELIST = CSRF_TRUSTED_ORIGINS + ALLOWED_HOSTS_BASE
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^https://\w+\.loosed\.local$",
]

SITE_ID = 1

ROOT_URLCONF = 'backend.urls'
ROOT_DIR = os.path.dirname(os.path.dirname(__file__))

MEDIA_ROOT = PROJECT_PATH
MEDIA_URL = os.path.join(PROJECT_PATH, 'uploads/')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(PROJECT_PATH, 'templates/'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'HOST': 'db',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'password'
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Web Administration
ADMINS = [
    ('Daniel W Tompkins', 'dan@l-o-o-s-e-d.net'),
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/
# ==========================
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'America/New_York'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
# ===========================
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(PROJECT_PATH, 'static/')

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field
# ===========================
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# TinyMCE Configuration
# ===========================
TINYMCE_DEFAULT_CONFIG = {
    "height": "500px",
    "menubar": "file edit view insert format tools table help",
    # Plugins
    "plugins": "advlist autolink lists link image charmap print preview anchor searchreplace visualblocks code "
    "fullscreen insertdatetime media table paste code help wordcount spellchecker",
    # Use browser-based spellchecker
    "gecko_spellcheck": True,
    "browser_spellcheck": True,
    "fontsize_formats": "8px 10px 12px 14px 16px 18px 24px 28px 32px 36px 40px 48px 56px 60px 72px 100px",
    "toolbar": "undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft "
    "aligncenter alignright alignjustify | outdent indent |  numlist bullist checklist | forecolor "
    "backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | "
    "fullscreen  preview save print | insertfile image media pageembed template link anchor codesample | "
    "a11ycheck ltr rtl | showcomments addcomment code",
    "custom_undo_redo_levels": 10,
    # To force a specific language instead of the Django current language.
    "language": "en_US",
    # Custom dark UI
    "skin": "oxide-dark",
    "content_css": "dark",
}
TINYMCE_SPELLCHECKER = True
TINYMCE_COMPRESSOR = False
