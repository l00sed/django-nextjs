[{"model": "articles.article", "pk": 1, "fields": {"title": "Equipment", "author": "Daniel Tompkins", "description": "Check out my gear and let me know in the comments what you're using!", "slug": "equipment", "likes": 0, "created_at": "2023-06-19T11:12:00Z", "updated_at": "2023-06-19T11:12:00Z", "featured_image": "uploads/page/equipment/hello_world_scrot.jpg", "image_alt": "featured image", "content": "<ProseWrapper>\n## Technologists and their Stuff\n\nWhen I was a kid, I played _Pong_ a few times on my dad's Commodore 64 and an old Sony CRT. I wasn't nearly as obsessed with electronics and software then, but my current self would be thrilled to revisit the 8-bit computer and the static-y curved glass of that old display.\n\nToday, our personal computers are vastly more diverse and advanced. With smartphones, most people carry a powerful computer in their pockets. If I had oodles of cash, I could buy a video card that has more VRAM than my first computer's hard disk storage!\n\nWhat's the tech that keeps you running day-to-day? What's your dream setup?\n\n## My Gear\n\n### Displays\n- **Work**<br/>\n  Philips 27\" 276E8VJSB, 2160p\n- **Personal**<br/>\n  Dell 24\" S2421HGF, 1080p\n\n### Laptop\n- **Work**<br/>\n  MacBook Pro M1, 32GB RAM 1TB SSD<br/>\n  MacOS, Ventura\n- **Personal**<br/>\n  Dell XPS13 9343, 4GB RAM 250GB SSD<br/>\n  Linux, Ubuntu\n\n### SBCs\n- **Raspberry Pi 3**<br/>\n  2GB, Runs [OctoPi](https://octoprint.org/download/) to control my 3D printer\n- **Raspberry Pi 4**<br/>\n  4GB, This is my little testing computer. Currently sending code to an Arduino for motor control.\n- **Raspberry Pi 4**<br/>\n  8GB, Home media server to connect to Hulu, Netflix, etc. (with the Rii K18 [wireless keyboard/trackpad](https://www.amazon.com/Rii-Wireless-Keyboard-Rechargable-Raspberry/dp/B077VYRMC1/ref=sr_1_9?keywords=Keyboard%2BWith%2BTouchpad&qid=1680708151&sr=8-9&th=1))\n- **Raspberry Pi Zero W**<br/>\n  1GB, Running my [Vim clutch](/vim-clutch)\n\n### Audio\n- **Headphones**<br/>\n  Sony MDR-XB700\n\n### 3D Printer\n- **Creality Ender 3**<br/>\n  Upgraded Bowden extruder with an [aluminum version](https://www.amazon.com/CHPOWER-Extruder-Upgraded-Replacement-Extruders/dp/B079JZ374W/ref=sr_1_4?keywords=ender+3+aluminum+extruder&qid=1680708657&sprefix=ender+3+aluminum%2Caps%2C333&sr=8-4) of the original part.\n</ProseWrapper>", "content_type": "page"}}, {"model": "articles.article", "pk": 2, "fields": {"title": "Bookmarks Dump", "author": "Daniel Tompkins", "description": "Exactly what the title says! I'll try to keep this page going with an updated dump of my bookmarks. You can export yours too‚Äî the tutorial's screenshots are outdated, but it still gets you to the right place. I used a couple simple Javascript functions to pull in the downloaded JSON file from Firefox, parse through it, and then styled the list with some basic CSS.", "slug": "bookmarks", "likes": 0, "created_at": "2020-05-24T11:41:00Z", "updated_at": "2020-05-24T11:41:00Z", "featured_image": "uploads/page/bookmarks/bookmarks.jpg", "image_alt": "Simplified UI window graphic with golden bookmarks ribbon symbol in the center", "content": "<ProseWrapper>\n## Download your bookmarks\n\nDo you organize bookmarks in Firefox? [Export your bookmarks](https://www.cloudwards.net/how-to-backup-firefox-bookmarks/#:~:text=Open%20Firefox%20and%20press%20Ctrl,open%20the%20bookmark%20library%20window.&text=In%20the%20bookmarks%20library%20menu,select%20your%20preferred%20JSON%20file.) to a `.json` file for safe-keeping!\n\nI'll try to keep this page going with an updated dump of my bookmarks. I used some Javascript to load the downloaded JSON file (from Firefox), parse through it, and then styled the list with some basic CSS. Pretty cool!\n\nBrowse through troves of collected resources on the decentralized Web; links to new media art and artists; tons of exciting DIY projects; academic writing on technopolitics, privacy, and surveillance‚Äî along with all sorts of other fun goodies. Go buck-wild. ‚ô•\n\n<hr/>\n\n<Bookmarks />\n</ProseWrapper>", "content_type": "page"}}, {"model": "articles.article", "pk": 3, "fields": {"title": "Reading List", "author": "Daniel Tompkins", "description": "If you're interested in a decentralized Internet, if you wonder how technology infiltrates politics (for better or worse), or if you're simply itching for a good read‚Äî take a look at one of the titles below. You'll find a mix of the pleasurable and the scholarly; but undoubtably something interesting.", "slug": "reading", "likes": 0, "created_at": "2019-06-01T16:56:00Z", "updated_at": "2019-06-01T16:56:00Z", "featured_image": "uploads/page/reading/reading_list.jpg", "image_alt": "The ancient library at Alexandria, Midjourney AI.", "content": "<ProseWrapper>\nIf you're interested in a decentralized Internet, if you wonder how technology infiltrates politics (for better or worse), or if you're simply itching for a good read‚Äî take a look at one of the titles below. You'll find a mix of the pleasurable and the scholarly; but undoubtably something interesting. For my own sake I split the list up into \"Reading, To Read, and Read\". If you see anything on the list that you recognize, let me know what you thought! If you have a recommendation, drop a line in the comments! Also take a look at my recent [Bookmarks Dump](/bookmarks) for additional reading, tutorials, entertainment, and other content.\n\n## Reading\n\n<ReadingList\n  data=\"reading\"\n/>\n\n## To Read\n\n<ReadingList\n  data=\"toRead\"\n/>\n\n## Finished\n\n<ReadingList\n  data=\"finished\"\n/>\n\n## Never Finished ü§∑\n\n<ReadingList\n  data=\"neverFinished\"\n/>\n</ProseWrapper>", "content_type": "page"}}, {"model": "articles.article", "pk": 4, "fields": {"title": "Hot Tub Phone Repair", "author": "Daniel Tompkins", "description": "You shouldn't be allowed to have nice things when you forget your phone in your swimsuit pocket‚Äî not once, but <i>twice</i>! The first time was a Motorola Razr. I was swimming at my grandma's condo and came out of the pool with a dripping flip phone...", "slug": "hot-tub", "likes": 0, "created_at": "2019-10-15T08:45:00Z", "updated_at": "2019-10-15T08:45:00Z", "featured_image": "uploads/blog/hot-tub/pope.jpg", "image_alt": "Pope flicking holy water from an aspergillum", "content": "<ProseWrapper>\n## The Splashening\n\nYou shouldn't be allowed to have nice things when you forget your phone in your swimsuit pocket&mdash; not once, but _twice!_ The first time was a Motorola Razr. I was swimming at my grandma's condo and came out of the pool with a dripping flip phone.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/hot-tub/razr.png\"\n    alt=\"Motorola Razr phone meme.\"\n    width={ 500 }\n    height={ 510 }\n  />\n</OneColumn>\n\n## Cell Phones Nostalgia\n\nA couple of my friends' parents worked at Motorola, so somehow I got my hands on a lot of unique devices at an early age. One of my all-time favorites was the Motorola \"MOTOROI\" XT720, which featured Android 2.0 and a 720MHz mobile processor.\n\nI ended up [rooting](https://www.xda-developers.com/reasons-for-root-android/) this phone&mdash; and it's still running! Here's a [review](https://phys.org/news/2010-01-motorola-motoroi-korea-android-smart.html) from 2010, when it was released:\n\n> huge 3.7 inch, high-definition WVGA (480x854) display, making it easy to view full page websites, videos, games, or photos.\n\n_Okay_. This post is _Hot Tub Phone Repair_, not _Hot Tub Time Machine_. So I'll stop pondering the evolution of mobile technology and get to the point! I was on a business trip on the west coast when I <u>completely drowned my Galaxy S7 in the hotel's hot tub.</u>\n\nThis might have been my longest lasting phone&mdash; 3 years and not a scratch! But it didn't matter. That expensive OtterBox and \"water resistant\" label couldn't save this cellphone from getting blasted by a Jacuzzi jet for 50 minutes. It was bricked.üß± üß± üß±\n\nLuckily one of my co-workers had the foresight to remove the MicroSD card. My first thought was to shake the water out at at his face like the pope waving an aspergillum on Easter.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/hot-tub/pope.jpg\"\n    alt=\"Pope flicking holy water from an aspergillum.\"\n    width={ 600 }\n    height={ 500 }\n  />\n</OneColumn>\n\nSpoiler alert: I didn't fix the phone. üòûÔ∏è That's a misleading title... I _did_, however, manage to recover my photos from a corrupt SD card!\n\nWhen I first put the SD card into my PC, I was met with a disappointing message from Windows:\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/hot-tub/fucking-windows.jpg\"\n    alt=\"Windows error: you sat in a hot tub.\"\n    width={ 374 }\n    height={ 172 }\n  />\n</OneColumn>\n\n## Adapter Desperation...\n\nMost people are aware of the fact that formatting removes all the device's data. So, obviously this is _not_ what I was hoping for, but... Thank Poseidon! I tried another MicroSD adapter, and I was able to access files on the card.\n\nI didn't really care about my apps, but I hadn't backed up my photos or videos for a year. I hate Google Photos and all that \"cloud\" bullshit, but now it was really biting me in the ass... If there's one thing you need to take away from this article, it's backup your photos.\n\nEven though I could see all my photos, almost all of them were corrupt! Reading the files directly from the card revealed horizontal strips and chunks of the image over a pixelated (green?) color. I tried to copy the images to my PC, but everything was trapped on the card.\n\n## Recovery Research\n\nA quick Google search led me to [ddrescue](https://www.gnu.org/software/ddrescue/). While this seems like an incredible recovery tool, it was unable to build a usable image from the SD card... ü§îÔ∏è\n\nThe images were readable from the card, but weren't displaying correctly (or at all). I couldn't copy them onto my local machine... So, finally, I thought&mdash; perhaps I could recover the broken images by compiling them into a video?\n\nIn the past, I'd used [ffmpeg](https://www.ffmpeg.org/) to convert individual stills to a video file. After another quick search, I discovered that ffmpeg not only has built-in error detection on the input frames; but it will also automatically discard irrecoverably corrupt frames.\n\nA post on [StackOverflow](https://stackoverflow.com/questions/45983605/ffmpeg-jpg-frame-capture-how-to-discard-corrupted-frames) gave me what I needed. The user had the \"-err_detect aggressive\" flag on an rtsp stream in an attempt to clean the incoming live footage.\n\n### FFMpeg Saves the Day!\n\nEureka! A simple ffmpeg command using the same error detection flag within the image directory managed to recover every photo into a video file!\n\n<Pre>\n```bash\nffmpeg -err_detect aggressive -fflags discardcorrupt -framerate 1 -pattern_type glob -i '*.jpg' -c:v libx264 -preset:v slow OUTPUT_VIDEO_NAME.avi\n```\n</Pre>\n\nAfter that, I opened the video in Adobe Premiere and did a simple frame export to retrieve all the individual images! üòçÔ∏è Okay, I'll admit, this was a pretty unique situation...\n\nAside from that awful feeling of being without a device for a week, the last thing you want is to lose years of photos and memories. So, if any of you enjoy warm, bubbly tubs with your mobile devices, perhaps you can learn something from my experience. Of course, I hope you can all avoid this disaster with the occasional backup!\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 5, "fields": {"title": "What the Blog?", "author": "Daniel Tompkins", "description": "Blogs?? That's right. You haven't time-traveled. We're 19 years past the turn of the millenium. People are giving up their writing to <i>Medium</i>, leaving <i>Facebook</i> (not MySpace), and <i>YTMND</i> is disappearing...", "slug": "blogs", "likes": 0, "created_at": "2019-07-02T21:57:00Z", "updated_at": "2019-07-02T21:57:00Z", "featured_image": "uploads/blog/blogs/blogs.gif", "image_alt": "Gif of screenshots from featured blogs", "content": "<ProseWrapper>\nBlogs?? That's right. You haven't time-traveled. We're 19 years past the turn of the millennium. People are giving up their writing to [Medium](https://yanngirard.typepad.com/yanns_blog/2015/10/why-you-shouldnt-blog-on-medium-.html), they're leaving [Facebook](https://www.theverge.com/2019/3/6/18253274/facebook-users-decline-15-million-people-united-states-privacy-scandals) (not MySpace), and _YTMND_ is [disappearing](https://mashable.com/article/ytmnd-youre-the-man-now-dog-shuts-down/). It's not all bad...\n\nThere are still a handful of incredible authors, creators, artists, designers, makers, writers&mdash; bloggers who deserve a shoutout. Most of these are independent projects&mdash; people who own their platform. One post at a time, they're keeping the Internet from melting into an ad-stickered bathroom&mdash; filled with liked, starred, SEO'd rubbish. üëç\n\n## Sofiya Semenova\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/blogs/sofiya.jpg\"\n    alt=\"Screenshot of Sofiya Semenova's blog.\"\n    width=\"683\"\n    height=\"331\"\n  />\n</OneColumn>\n\nI can't remember when I first stumbled upon Sofiya's [blog](https://sofiya.io/blog/). I love how she pairs each post with a \"listening to\" link, which redirects to a song on YouTube. Like an O.G. _MySpace_ page, it gives the blog a fantastic added layer of intimacy. The songs are practically a soundtrack to reading the blog, and I can likewise imagine Sofiya in the zone&mdash; coding and writing to [CRAY](https://www.youtube.com/watch?v=j9mSIgdAGb4) or whatever her weekly jam is.\n\nEven though this is mostly a personal blog, she breaks down all of her projects into readily digestible content for the immediate enjoyment of any demographic. The design is wonderful&mdash; pleasant, interactive, responsive, yet minimal. There's a good variety of art, code, writing, and design projects; but everything is well organized to suit your favorite niche.\n\nFrom a quick inspect, it looks like Sofiya has built her website with [Jekyll](https://jekyllrb.com/). It also fails gracefully&mdash; with a creative [404 page](https://sofiya.io/asdf) that I truly appreciate. If you're looking for some new and interesting content by an inspiring artist and developer, definitely give her site a visit.\n\n## N-O-D-E\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/blogs/node.jpg\"\n    alt=\"Screenshot from n-o-d-e.net\"\n    width=\"693\"\n    height=\"336\"\n  />\n</OneColumn>\n\n[NODE](https://n-o-d-e.net) has been blogging/vlogging for a while. I took a look at Wayback Machine's [stored version](https://web.archive.org/web/20141202211033/http://n-o-d-e.net/) of the site from December 2014, and was pleasantly surprised at what I found.\n\nFive years ago, the homepage just about matches the current version&mdash; a wonderfully minimal list of links to videos, projects, and musing; but it used to be more emulative of an early terminal. The text glows as each character appears&mdash; one after the other, as though parsing through some code.\n\nDespite a new logo&mdash; a kind of flag for the digital nation-state of NODE&mdash; the new n-o-d-e.net has stuck to its roots. The list of hacks, DIY projects, and tech podcasts are thoughtful and well-designed. It's is an insanely useful resource to a community of people who care about decentralized tech.\n\nIn the spirit of Stewart Brand's [Whole Earth Catalog](https://en.wikipedia.org/wiki/Whole_Earth_Catalog), the new [NODE Zine vol. 1](https://n-o-d-e.net/zine/) (digital copy available via [dat](dat://d5f52282d8277c323abcd838e7b1e62113af6dfa70f3c7316ec004911881ec41)) successfully aggregates and documents tools for cultivating decentralized culture, including: off-grid comms, DIY wireless infrastructure, 3D printing and tutorials, walk-throughs of native NODE projects, dweb software and websites, and much more.\n\n\"The digital version of NODE VOL 01 is free, and can be downloaded on the Dat P2P network:\n\n<Pre>\n```plaintext\ndat://d5f52282d8277c323abcd838e7b1e62113af6dfa70f3c7316ec004911881ec41\n```\n</Pre>\n\n(If you've never used Dat before, you can install the command line tool from [https://datproject.org](https://datproject.org), or the easier GUI desktop app is available at [https://github.com/dat-land/dat-desktop/releases](https://github.com/dat-land/dat-desktop/releases). Alternatively, you can use Beaker Browser [https://beakerbrowser.com](https://beakerbrowser.com)).\n\n## K-Squared Ramblings\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/blogs/k-squared.jpg\"\n    alt=\"Screenshot from www.hyperborea.org\"\n    width=\"795\"\n    height=\"385\"\n  />\n</OneColumn>\n\n[K-Squared Ramblings](https://www.hyperborea.org/journal/category/tech/) is a blog by\n\n> \"A California couple into sci-fi, the Internet, and the strangeness of the world.\"\n\nKelson's blog, Hyperborea, uses WordPress. If you don't know how to code, this is one of the easiest and most popular platforms to [start your blog](https://drewdevault.com/make-a-blog). Although&mdash; you should learn to code! Kelson, who posts frequently on K<sup>2</sup>R, picked a nice theme&mdash; not too cluttered, with easy navigation.\n\nThe biggest reason I like K<sup>2</sup>R is that it's really a blog on blogging. There are a ton of extremely useful tips and walkthroughs from the author's own experiences&mdash; critical thinking on social media and Internet culture, tutorials on using webhooks and automating online tasks, as well as tools for aggregating and curating information online.\n\nIf those topics don't persuade you, Kelson also has some great posts and pics for amateur astronomers. I definitely recommend adding his [RSS](https://hyperborea.org/journal/feed) to your daily reader for some new and interesting musings on the social impacts of new tech, privacy, and decentralized culture.\n\n## Kevin Davis\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/blogs/kevv.jpg\"\n    alt=\"Screenshot from kevv.net\"\n    width=\"797\"\n    height=\"386\"\n  />\n</OneColumn>\n\nA new blog! Kevin Davis only has one post, but I'm excited to stop by again soon to see if [kevv.net](https://kevv.net) has any new additions. The one and only article, _You (probably) don't need ReCAPTCHA_, is insanely thorough.\n\nI was looking for a simple yet effective way to prevent spam in my comments and \"subscribe\" forms&mdash; without using Google's [reCAPTCHA](https://www.google.com/recaptcha/intro/v3.html). I love Kevin's deep-dive into the various CAPTCHA (completely automated public Turing tests) devices and methods.\n\nFrom common to curious, Kevin documents the world of [CAPTCHA](https://en.wikipedia.org/wiki/CAPTCHA). Give it a read when you've gotten your fifth @domstats.su subscriber, or feel like you'd rather have more human subscribers than bots.\n\n<hr/>\n\n### Hunting for Blogs\n\nI've been on the blog hunt. It started for this post, but now I realize that I should have been doing this a long time ago. You should too! I know Medium might feel easy and accessible, but that's because it's in the networks _you hardly ever leave.\n\nThere are a ton of other blogs that I want to list here, but I've been holding on to this post for too long&mdash; so that's it. I just want to leave you with this: get outside your networks&mdash; try harder to discover new places on the Web outside of Facebook and Google. You won't be disappointed.\n\nIf you liked this list, or want to see the rest of my picks for _What the Blog?_, checkout my [bookmarks dump](/bookmarks)&mdash; look under 'Blogs (Independent)' and 'Blogs (Journals)'. Additionally, I've found _GitHub_ actually has some lengthy lists for finding some exceptional blogs. Checkout these links:\n\n- [pgilad/awesome-blogs](https://github.com/pgilad/awesome-blogs)\n- [jkup/awesome-personal-blogs](https://github.com/jkup/awesome-personal-blogs)\n- [kilimchoi/individuals](https://github.com/kilimchoi/engineering-blogs#individualsgroup-contributors-1)\n- [learn-anything/blogs](https://github.com/learn-anything/blogs)\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 6, "fields": {"title": "Regolith Linux", "author": "Daniel Tompkins", "description": "When did you first use a computer? I remember sitting at the corner desk in my childhood bedroom playing Descent II. It was probably the first video game I had ever played. The keyboard controlled the...", "slug": "regolith", "likes": 0, "created_at": "2021-02-04T13:00:00Z", "updated_at": "2021-02-04T13:00:00Z", "featured_image": "uploads/blog/regolith/regolith_screen.jpg", "image_alt": "Screenshot of desktop windows arranged with i3 (window manager) and the Regolith distro", "content": "<ProseWrapper>\n## Windows 95\n\nWhen did you first use a computer? I remember sitting at the corner desk in my childhood bedroom playing [Descent II](https://en.wikipedia.org/wiki/Descent_II). It was probably the first video game I had ever played.\n\nThe keyboard controlled the yaw, roll, and pitch of a spacecraft as you navigated through a labyrinth of sci-fi tunnels and airlocks. You had to fend off flying robots with lasers and missiles.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/DescentII_DOS.jpg\"\n    alt=\"The cover of Descent II, one of the first video games I'd ever played. You navigated a spaceship through a maze of airlocks, shooting missiles and lasers at flying robots.\"\n    width={ 316 }\n    height={ 316 }\n  />\n</OneColumn>\n\nThis was the early 2000's&mdash; before Spotify, when people still owned their own music. My dad swapped digital music collections on hard-drives with his co-workers and friends. I discovered Nirvana, [Portishead](https://www.youtube.com/watch?v=UeVYVq37KQE), and Static-X in the overwhelming (10GB+) depths of folders.\n\n## Windows 98\n\nGrowing up, I shared a room with one of my younger sisters. We had the old Windows 95 _Compaq_ PC in our room because my mom bought a new computer for work. Her's was running Windows 98 and had dial-up Internet.\n\nEven though it was off-limits at first, I still managed to get online&mdash; quite frequently, actually, once I was introduced to _Neopets_ and _Runescape_ by my friends.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/runescape_logo.png\"\n    alt=\"The O.G. Runescape Logo\"\n    width={ 448 }\n    height={ 147 }\n    visible={ false }\n  />\n</OneColumn>\n\n## Windows XP\n\nIn high school, we replaced the old Windows 95 _Compaq_ PC in our bedroom with a _Hewlett Packard_. It had a whopping 2GB of RAM. Our local library had a collection of PC games that were suddenly made accessible with this newfound computing power.\n\nOur library had some cool PC games, and I ended up buying a 50-ft Ethernet cable that I draped through the kitchen and up the stairs to download mods for _The Elder Scrolls IV: Oblivion_&mdash; and to update _MySpace_.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/oblivion-logo.png\"\n    alt=\"The Elder Scrolls: Oblivion, Logo\"\n    width={ 461 }\n    height={ 287 }\n    visible={ false }\n  />\n</OneColumn>\n\n## Windows 7\n\nWhen my application to pursue a degree in architecture was accepted, I was gifted an incredible Alienware laptop. It was a Windows 7 machine with maxed-out specs&mdash; an i7 processor, 24GB of RAM, and a full TB of storage!\n\nThis machine made for quick work while modeling or rendering in [Rhino3D](https://www.rhino3d.com/) and [V-Ray](https://www.chaosgroup.com/)&mdash; and could run any video game at max settings. It had an HDMI-in to use as a display, as well as all the RGB LEDs you could ask for.\n\n## Windows 10 + WSL\n\nMost Windows 7 devices offered a free upgrade to Windows 10 when Microsoft was advertising its flagship release. I resisted for a while, but eventually made the plunge. After a little debugging, the hardware was cooperating with its new OS.\n\nThe sharp lines, flat icons, and keyboard shortcuts for snapping and exposing windows were all very appealing. However, it was around this time that I was also introduced to the Raspberry Pi&mdash; and, consequently, the Unix terminal.\n\nA friend of mine, who's daily carry was a MacBook Air, showed me how to navigate the terminal with Tmux and Vim. He also showed me the basics of Web development. We started working on a [project](/killing-a-startup) together, and I installed the [Windows Subsystem on Linux](https://docs.microsoft.com/en-us/windows/wsl/about) (WSL) to use the same commands and follow a similar environment setup.\n\n## Ubuntu\n\nAfter a couple of years, I was getting very comfortable in the Ubuntu terminal. I was using CSS, HTML, JS, and Python at school and at work. At the time, I was commuting to Chicago on the train, and the Alienware was big, heavy, and had poor battery life.\n\nIn a stroke of luck, my sister gifted me her Dell XPS13 when the keyboard stopped working. I replaced the keyboard module for $35, upgraded the hard-drive (128GB &rarr; 256GB), and&mdash; more recently&mdash; replaced the battery. This laptop is still my daily carry.\n\nAfter much encouragement from my friends in tech, I decided to dual-boot Ubuntu. A full Linux distro takes interfaces with the laptop's hardware in a way that WSL cannot (at least, not at the time of writing).\n\nI was loving Ubuntu 18.04; but since the little laptop wasn't quite powerful enough to run all the software that I'd been using on Windows, I really had no reason to keep Windows. So, I quickly went from dual-boot to straight Linux.\n\nWSL had been serving me faithfully, but I was tired of struggling with networking and hardware issues. Even after upgrading to the latest WSL2 build as a Windows Insider, I was still frustrated with the hoops and hurdles of getting a working Docker setup or accessing the GPU for machine learning.\n\n### i3wm\n\nMore recently, I had been frequenting the [r/unixporn](https://reddit.com/r/unixporn) subreddit. I had done some simple customization: downloaded GTK themes, gnome-tweaks, and given the terminal a face-lift with color and vim-plugins.\n\nI started to investigate [i3wm](https://i3wm.org/) and [Polybar](https://github.com/polybar/polybar), in pursuit of a seamless terminal and to banish those distracting titlebars from my screen. Eventually, I settled on a set of config files that I was pretty proud of:\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/i3_screen.jpg\"\n    alt=\"Windows arranged with i3 (window manager) and a custom polybar.\"\n    width={ 1920 }\n    height={ 1080 }\n  />\n</OneColumn>\n\nResources and dotfiles for setting up your Ubuntu environment with Tmux, Vim, polybar and the i3 window tiling manager are available in my [Knowledge Base](/kb).\n\n### Regolith\n\nMy system was running so wonderfully... I had a polybar to envy, I was beginning to commit my i3 shortcuts to memory&mdash; and then something broke. When you're working in the terminal, small mistakes can be catastrophic.\n\nThis time, I couldn't pin-point what I'd done wrong; but I decided to take this opportunity to backup my files (while I still could!) and test out [Regolith Linux](https://regolith-linux.org/)&mdash; a preconfigured Ubuntu+i3wm Linux distro that I'd been eyeballing with great interest.\n\nI'm so glad that I did! The Regolith build installs from a USB just like a typical Ubuntu image. However, Regolith. I was disappointed that all of the time and effort I'd spent setting up volume and network UI blocks for my system's statusbar went down the drain; but, Regolith does it for you&mdash; and does it well:\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/regolith/regolith_screen.jpg\"\n    alt=\"This polybar setup is the default provided by the Regolith distro. Not a bad RICE for defaults!\"\n    width={ 1920 }\n    height={ 1080 }\n  />\n</OneColumn>\n\n## Conclusion\n\nI took my sweet time exploring Ubuntu before cutting ties with Windows; but I wish I'd listened to my friend's advice and made the switch years ago! I still have WSL2 on a Windows 10 laptop at work (for 3D modeling and rendering); but I've even installed the Regolith desktop on that machine using [VcXsrv](https://medium.com/@dhanar.santika/installing-wsl-with-gui-using-vcxsrv-6f307e96fac0)!\n\nIt was a little tricky, and Regolith doesn't make it obvious, but you can manually start the desktop GUI by starting xlaunch.exe, moving your regolith config files to the appropriate /root folders, exporting the correct $DISPLAY variable, and then running:\n\n<Pre>\n```bash\nsudo i3-gnome-flashback-session\n```\n</Pre>\n\nIf you're an experienced programmer, I encourage you to checkout Regolith; or, if you're like me, take it slow and start by diving into WSL. Good luck and happy coding!\n\n### update &mdash; 07/17/2020\n\nIf you don't want to leave the gnome shell&mdash; but want all the convenience and efficiency of i3&mdash; checkout [Pop Shell](https://github.com/pop-os/shell). I haven't used it yet... However, from what I've gathered, it lets you keep some classic Gnome features (like the application bar and window-exposer) while giving you the beautiful tiled screen that i3 provides.\n\n### update &mdash; 02/04/2020\n\nI ended up writing a full [post about getting WSL2 installed with Regolith Linux.](/wsl2)\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 7, "fields": {"title": "WSL2", "author": "Daniel Tompkins", "description": "In 2001, Microsoft's former CEO&mdash; Steve Ballmer&mdash; was quoted by the online tech news publication, <em>The Register</em>, saying: <em>Linux is a</em>", "slug": "wsl2", "likes": 0, "created_at": "2020-11-21T23:30:00Z", "updated_at": "2020-11-21T23:30:00Z", "featured_image": "uploads/blog/wsl2/regolith_screenshot.jpg", "image_alt": "Screenshot of the \"Regolith\" Linux distro running graphically through the X windowing system on WSL2 on Windows 10.", "content": "<ProseWrapper>\n## Microsoft üíî Linux\n\nIn 2001, Microsoft's former CEO‚Äî Steve Ballmer‚Äî was [quoted](https://www.theregister.com/2001/06/02/ballmer_linux_is_a_cancer/) by the online tech news publication, The Register, saying:\n\n> Linux is a cancer that attaches itself in an intellectual property sense to everything it touches\n\nFast-forward 15 years into the future‚Äî at Microsoft's developer conference, _Build 2016_‚Äî and Gates' tech behemoth reveals a sudden volte-face. The current CEO, Satya Nadella, announces Windows Subsystem for Linux. With WSL, Microsoft is taking some of the most popular Linux distributions and making them available within Windows through the Microsoft Store.\n\nAccording to a [W<sup>3</sup>Techs survey](https://w3techs.com/technologies/overview/operating_system), Unix operating systems (the under-pinning OS of Linux, as well as MacOS) make up 71% of the Web, the remaining 29% being Windows. Additionally, every Android phone, tablet and smart TV runs on a modified version of the Linux kernel. So, I guess if you can't beat 'em, join 'em?\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Bar graph with two data points, Unix (71%) and Windows (29%). These are the percentages of wabsites using these operating systems (based on the October 2020 survey.\"\n    caption=\"Stats taken from W<sup>3</sup>Techs\"\n    src=\"/assets/img/blog/wsl2/w3techs_webservers.jpg\"\n    width={ 457 }\n    height={ 212 }\n  />\n</OneColumn>\n\nWhether or not its because of Microsoft's good graces or some ulterior motive, I know having an easily accessible Unix-type environment available on Windows has been a godsend for me and for so many other developers.\n\n## What's so great about WSL?\n\nBefore WSL, developers running Windows had two options: 1) a virtual machine (VM), or 2) dual-booting. Running a virtual machine uses up more resources than WSL. It can also be difficult to integrate hardware and files between the host machine and the VM. Dual-booting allows for a full-fledged install on a separate disk partition; but it requires a restart any time you want to switch between OS's.\n\nWindows Subsystem on Linux doesn't integrate with the host's hardware perfectly‚Äî for example, NVIDIA is still working on [CUDA drivers](https://developer.nvidia.com/cuda/wsl) that will take advantage of GPU resources from within WSL. However, for Linux developers who are frequently running CAD software or Adobe Suite (which are [difficult-to-impossible](https://appdb.winehq.org/objectManager.php?iId=17&sClass=application) to install on Linux), WSL can be a fantastic partner.\n\n## WSL1 vs WSL2\n\nMore recently, Microsoft announced WSL2‚Äî an update that allows for a more complete Linux kernel to run on a Windows machine. This made it much easier to install a variety of software that had been difficult to run on the previous, WSL1. WSL2 is very similar to running a virtual machine (in fact it uses Microsoft's hyperV virtual machines).\n\nHowever, using WSL2 (as opposed to installing a Linux distro through VirtualBox, or another VM manager) provides some minor performance benefits since Microsoft has optimized it to integrate with Windows' services. If you want, I recommend reading Microsoft's own WSL1-vs-WSL2 [feature comparison](https://docs.microsoft.com/en-us/windows/wsl/compare-versions) docs.\n\n## Alright, so how do I install WSL2?\n\nMicrosoft has clean, straight-forward [installation documentation](https://docs.microsoft.com/en-us/windows/wsl/install-win10) for WSL and WSL2. You can refer to that tutorial if you get stuck, or just follow the steps outlined below. Before starting, make sure you update your Windows 10 installation with the most recent build.\n\nI'll also be going one-step further, and showing you how to run a Linux GUI using WSL2 and VcXsrv (display forwarding). If you're more of a visual-learner, I've also included an installation speedrun [video](https://www.youtube.com/embed/gtXIzVM5wZE) that follows the same steps outlined below (_edit: I forgot step 11 in the video, and it's a critical one! Make sure you do that!_).\n\n### 1. Enable WSL Feature\n\nFirst you need to enable the Windows Subsystem on Linux feature by right-clicking on Powershell from the start menu and clicking \"Run as Administrator\".\n\nThen, paste the following command and hit \"Enter\"‚Äî don't close the Powershell!\n\n<Pre>\n```powershell\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\n```\n</Pre>\n\n### 2. Enable WSL2 Virtual Machine Feature\n\nAfter the last command is finished, paste the following command in the same Administrator-level shell, and hit \"Enter\" to enable the WSL2 VM. Again, keep this shell open.\n\n<Pre>\n```powershell\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n```\n</Pre>\n\n### 3. Download and Install the WSL2 Linux Kernel Update\n\nClick [here](https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi) to download the Microsoft executable for installing the WSL2 Linux Kernel update. Once it's finished downloading, double-click the executable and follow the installation steps. This part's pretty straightforward\n\n### 4. Set WSL2 as Default Version\n\nCopy and paste the following command in Powershell to set WSL2 to be the default version:\n\n<Pre>\n```powershell\nwsl --set-default-version 2\n```\n</Pre>\n\n### 5. Install Ubuntu 20.04 from the Microsoft Store\n\nClick the start menu and open the Microsoft Store. Search for \"Ubuntu 20.04\" and install this Linux distro. If you want to use another distro, that's fine; but Ubuntu 20.04 is compatible with the Regolith Linux desktop GUI we'll be installing in just a bit.\n\n### 6. Ubuntu 20.04 Initial Setup\n\nOnce Ubuntu is done installing, click \"Launch\" to initiate first-time installation setup. You'll be prompted to put in a username and password.\n\n### 7. Make sure You're Using WSL2\n\nAt this point, it might be a good idea to double-check that WSL is using version 2 by default. Open a command prompt (or use Powershell if it's still open) to paste in the following command:\n\n<Pre>\n```powershell\nwsl --list --verbose\n```\n</Pre>\n\n### 8. Download and Install VcXsrv\n\nVcXsrv is an X Server that we'll use to view the GUI from WSL2.\n\nThere are a few other display-forwarding servers available (like [Xming](https://sourceforge.net/projects/xming/)), but I've found VcXsrv works the best. Download the executable [here](https://sourceforge.net/projects/vcxsrv/) and click through the installation steps.\n\n### 9. Install Regolith Desktop\n\nI have [Regolith Desktop](/regolith) installed on one of my PCs, and it's fantastic. It's preconfigured to use the i3 window manager which I find incredibly efficient for its tiling and hotkey features.\n\nA _loosed_ reader, Rodrigo, asked me use Regolith for the tutorial; but if you want to install a different GUI you can! To install Regolith Desktop, open your fresh Ubuntu install, and paste in the following lines:\n\n<Pre>\n```bash\nsudo add-apt-repository ppa:regolith-linux/release\n```\n</Pre>\n\n<Pre>\n```bash\nsudo apt install regolith-desktop i3xrocks-net-traffic i3xrocks-cpu-usage i3xrocks-time\n```\n</Pre>\n\nIt's a lot of packages, so it'll take some time.\n\n### 10. Change the \"Mod\" Key\n\nRegolith, or rather i3-wm, uses the Super (Windows) key as the hotkey prefix by default. Since you're running this GUI within Windows, you'll run into a lot of overlap between Windows' and i3-wm's preconfigured shortcuts.\n\nFor this reason, I recommend swapping the Super key for the Alt key. To change the Mod key mapping use the Vim or Nano text editors to open the configuration file located at:\n\n<Pre>\n```bash\nvim /etc/regolith/i3/config\n```\n</Pre>\n\nOn lines 42 and 43, you should find the Mod key assignment. Switch \"Mod1\" and \"Mod4\" and you'll be good to go! Your edited lines should look like this:\n\n<Pre>\n```bash\nset_from_resource $mod i3-wm.mod Mod1\n```\n</Pre>\n\n<Pre>\n```bash\nset_from_resource $alt i3-wm.alt Mod4\n```\n</Pre>\n\nIf you're using Vim, hit \"Escape\" and type \":wq\", then hit \"Enter\" to write and quit the file. You can check out the [official Regolith tutorial](https://regolith-linux.org/docs/getting-started/configuration/#keybindings) on making these changes if you get stuck.\n\n### 11. Export DISPLAY parameter\n\nAnother critical edit (that I forgot to put in the video‚Äî oops üôÉ) is to export the DISPLAY variable. Since WSL2 is a VM, it has it's own IP address (which can change at each startup). As a result, you'll need to add a couple lines to your bash profile for VcXsrv to connect to WSL2.\n\nTo open your \".bashrc\" with Vim:\n\n<Pre>\n```bash\nvim ~/.bashrc\n```\n</Pre>\n\nPress and hold Shift then press \"G\" to jump to the bottom of the file. On two new lines, paste in the following code:\n\n<Pre>\n```bash\nexport DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0\nexport LIBGL_ALWAYS_INDIRECT=1\n```\n</Pre>\n\n### 12. Open and Configure VcXsrv\n\nClick the start menu and type in \"Xlaunch\" then hit \"Enter\" to run VcXsrv. Click the \"One window without titlebar\" option (you can explore the others later, if you want) and click next. Leave it on \"Start no client\" and click next. Then, in the \"Additional parameters\" input, add \"-ac\" and click next. I recommend clicking \"Save configuration\" for ease of use.\n\nAt this point, you should have a black screen waiting to accept a display input.\n\n### 13. Run Regolith Desktop\n\nThe last thing to do is run the magic line:\n\n<Pre>\n```bash\ni3-gnome-flashback-session\n```\n</Pre>\n\nYou should then see a graphical Regolith Desktop appear in the VcXsrv window! Huzzah! Feel free to play around with your new graphical WSL2 setup. To see an overview of the available shortcuts, use \"Alt+Shift+?\" to bring up the help menu. You can find more help in Regolith's official documentation.\n\n<Note title=\"update: 11/21/2020\">\nThis tutorial was made using Regolith Desktop v1.4, but they've since updated to v1.5. Reddit user [\\_waywardone\\_](https://www.reddit.com/r/bashonubuntuonwindows/comments/hrwutx/regolith_linux_i3ubuntu_on_wsl2_waudio/gcv2p89?utm_source=share&utm_medium=web2x&context=3) was having issues with the final `i3-gnome-flashback-session` command.\n\nIf you're getting \"command not found\", try running the new init script provided in v1.5:\n\n<Pre>\n```bash\nregolith-session-init\n```\n</Pre>\n\nThis new init will start the regolith desktop and i3-wm just like the old script; but it doesn't seem to start the `compton` background service automatically anymore. So, until I figure out a better solution, run:\n\n<Pre>\n```bash\ncompton\n```\n</Pre>\n\n...just after Regolith appears in your VcXsrv window and i3 loads. You can thank _\\_waywardone\\__ for helping me catch the change!\n</Note>\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Regolith Desktop with Windows 10 Taskbar and i3 tiling running on WSL2.\"\n    caption=\"Regolith desktop environment with Windows 10 taskbar and the i3 tiling window manger running on WSL2.\"\n    src=\"/assets/img/blog/wsl2/regolith_screenshot.jpg\"\n    width={ 960 }\n    height={ 540 }\n  />\n</OneColumn>\n\n## Wrapping Up\n\nHopefully you finished this tutorial with a working Regolith Desktop GUI running off WSL2. If you run into any issue, or have questions, feel free to leave a comment. If you'd like to know how to forward audio from WSL2 (a feature not yet available by default), let me know and I'll put together another tutorial.\n\nUntil next time, happy coding!\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 8, "fields": {"title": "Abstractions II", "author": "Daniel Tompkins", "description": "Abstractions is a kickass Web developement conference started in Pittsburgh. This was only the second <em>Abstractions</em> ever!", "slug": "abstract", "likes": 0, "created_at": "2019-10-08T09:00:00Z", "updated_at": "2019-10-08T09:00:00Z", "featured_image": "uploads/blog/abstract/abstractions.gif", "image_alt": "Gif of Abstractions conference swag, conference map, and Centipede highscore.", "content": "<ProseWrapper>\n## Maps and Schedules\n\nThe schedule tool on [abstractions.io](https://abstractions.io/) wasn't bad, but I found it a little hard to use. The biggest issue was the map, which did not contain a legend.\n\nI used this [schedule picker](https://abstractions.thinkco.dev/schedules) (quickly thrown together by Think Co.) and made this improved map üëá. This was also thrown together, but felt a little easier to read.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/abstract/abstract-map.jpg\"\n    alt=\"Map of the Pittsburgh Convention center with a legend for finding Abstractions conference rooms.\"\n    width=\"682\"\n    height=\"544\"\n  />\n</OneColumn>\n\nFor what it's worth, a little confusion on the layout of the rooms was NBD considering the small crew at [Code & Supply](https://codeandsupply.co/) that was responsible for managing this incredible conference! I really enjoyed Abstractions II!\n\n## Settling In...\n\nThe C&S people got a lot of flak for the NFC (near-field communication) wristbands, but they were hardly an inconvenience. The conference center is so beautiful, and was such fun to explore. I also snuck into the Arcade for a couple minutes and played some pinball and [Centipede](https://www.youtube.com/watch?v=V7XEmf02zEM). Somehow the high score on there was like 400k!\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/abstract/centipede-arcade-flyer.jpg\"\n    alt=\"Flyer for the 1980 arcade game, Centipede\"\n    width=\"682\"\n    height=\"776\"\n  />\n</OneColumn>\n\nHaving never played some of these OG arcades, I was really amazed at the brightness and sharpness of the pixels on those old CRT monitors. Update. I finally made it on the scoreboard, but was still miles behind \"DBH\". Holy shit. How do people get that good at videogames??\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/abstract/centipede-high-score.jpg\"\n    alt='Not nearly as high as \"DBH\", but not bad for a couple hours practice...'\n    width=\"682\"\n    height=\"560\"\n  />\n</OneColumn>\n\nThey had Galaga, Ms.Pac-Man, Pac-Man, Donkey Kong, half a dozen pinball machines, and a really dramatic media art installation with a projector and a kinect (almost missed it!). There was also a \"silly hat\" making conference (that's always open), and another room next-door that was exclusively for playing board games.\n\n## Besides Games... LOOT!\n\nI went to a lot of incredible talks, and I'm definitely looking forward to the next conference. There was tons of conference loot. If you like stickers, pins, koozies, and other freebies you walked out a king. It wasn't a massive conference, but there was still a ton to do and see.\n\nAbstractions conference loot galore! Stickers, pins, and more! Follow on Twitter for more.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/abstract/loot.png\"\n    alt='Abstractions conference loot galore! Stickers, pins, and more!'\n    width=\"523\"\n    height=\"582\"\n  />\n</OneColumn>\n\n## Closing Thoughts‚Äî Abstractions III??\n\nHopefully the money and hype that this year's conference generated can help go towards even bigger-name guests at Abstractions III! That's not to say that this year's guests weren't phenomenal. The day-two keynote by Simone Giertz about her journey from amateur maker to YouTube-star was inspiring and practical.\n\nAdditionally, two of my co-workers, Remy Porter and Jordan Parsons, gave some wonderful talks. Remy showed off his improv and synth-building skills, and Jordan talked about his career in media art, digital fabrication, and design. The C&S crew did a great job of mixing local flavor with some big names in software and digital design.\n\nIf you'd like to see more of the talks, checkout Code & Supply's recordings of the talks on their YouTube channel. Sorry it took me a month and a half to do a more in-depth recap of the conference; I hope to see you there next time.\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 9, "fields": {"title": "The Hug of Death", "author": "Daniel Tompkins", "description": "When people are actually reading your blog, it might crash! I got 8000+ unique visitors to [Signs of Life](/signs-of-life) over the span of a couple days when I shared it on Hacker News.", "slug": "hug-of-death", "likes": 0, "created_at": "2020-08-27T14:30:00Z", "updated_at": "2020-08-27T14:30:00Z", "featured_image": "uploads/blog/hug-of-death/isthismeme.jpg", "image_alt": "Meme of anime character asking if something is something which it is not. Loosed blog: people reading it: is this justification for spending way too much time working on a personal website?", "content": "<ProseWrapper>\n## If a server crashes in the woods, does it make a sound?\n\nThis blog recently received some high traffic on the [Signs of Life](/signs-of-life) post after I shared the project on [Hacker News](https://news.ycombinator.com/item?id=23465837). After everything was said and done, my analytics reported something like 8000+ unique visitors over a couple of days.\n\n[Urban Dictionary](https://www.urbandictionary.com/define.php?term=hug%20of%20death) defines the hug of death as:\n\n> An accidental DDoS-like effect caused when a website suddenly gains popularity (usually via reddit), causing a huge amount of traffic.\n\nThere are a few other names for this network phenomenon. Generically, or in network science, it's known as a \"flash crowd\". In the 90's and early 2000s, it was often referred to as \"slashdotting\", or the [Slashdot effect](https://en.wikipedia.org/wiki/Slashdot_effect)‚Äî after slashdot.org, a once-popular tech news forum.\n\nIn the same etymological vein, other early social sites‚Äî forums and aggregators‚Äî took on the \"hug of death\" verbage. New and small bloggers were \"Farked\", \"Drudged\", and \"BoingBoing'd\"‚Äî their sites crushed to death by the thousands of concurrent requests pouring in from these high-traffic nodes.\n\n<OneColumn>\n  <ImageWrapper\n    width=\"700\"\n    height=\"420\"\n    src=\"/assets/img/blog/hug-of-death/isthismeme.jpg\"\n  />\n</OneColumn>\n\nMost people trying to access my project were likely getting 503 Service Unavailable as an error response. Apparently the number of requests was beyond what my [DigitalOcean](https://digitalocean.com/) server was capable of handling.\n\nI'm on the second cheapest DigitalOcean \"Droplet\" plan, which provides a server with 2GB RAM and 1 virtual CPU. That's already $10/month for something that doesn't necessarily give me any ROI, so I wouldn't be thrilled to upgrade to a higher plan.\n\nWhat other options do I have using FOSS to combat the hug of death?\n\n## Content Optimization\n\nThe decision to use LAMP (Linux, Apache, MySQL, PHP) for loosed was nothing less than arbitrary. So, I think it's high-time to evaluate this decision and find out more about how different servers handle traffic.\n\nThere are a few key methods to cutting down response time (that I know of):\n\n* Compressing, bundling and caching static assets,\n* minifying css and javascript (or negating to use client-side JS altogether),\n* distributing static content and caches through a content-delivery network (CDN),\n* upgrading a server's RAM or CPU,\n* using secondary servers, or load-balancers, to distribute requests\n\nThese options are all well and good. I minify JS. I compress, lazyload and cache images. I do my best to use fewer third-party scripts (I could do a lot better). For someone who's hosting a site without ads or revenue, though, I'm not really prepared to pay for a CDN provider (maybe a free one?), additional server resources, or additional servers...\n\nMy website isn't a complete mess, but there must be a course of action to prevent further server overload without paying an additional $20-50/month.\n\n## Basic Security\n\nFirst, I'll share a little list of \"Anti-overload techniques\" from [Wikipedia](https://en.wikipedia.org/wiki/Web_server)...\n\n<blockquote>\n  <span>To partially overcome above average load limits and to prevent overload, most popular web sites use common techniques like:</span>\n  <br/>\n  <br/>\n  <span>Managing network traffic, by using:</span>\n  <br/>\n  <ul>\n    <li>Firewalls to block unwanted traffic coming from bad IP sources or having bad patterns</li>\n    <li>HTTP traffic managers to drop, redirect or rewrite requests having bad HTTP patterns</li>\n    <li>Bandwidth management and traffic shaping, in order to smooth down peaks in network usage</li>\n  </ul>\n</blockquote>\n\nIn the past, I've had some issues with Tor-gateway bots submitting subscription requests. When you subscribe to my blog, you receive a confirmation email‚Äî which I pay for!\n\nLuckily, the [Mailgun](https://mailgun.com/) plan I'm on has a minimum number of sent emails per month before I'm charged; so I was able to blacklist the offending IPs and fix the issue before it really hurt.\n\nNot all traffic coming through a Tor gateway is harmful, and I encourage people to use tools to protect your anonymity online. However, if you run a website that's receiving spam traffic from IPs leading back to a Tor gateway, I recommend having a look at [dan.me.uk](https://www.dan.me.uk/tornodes).\n\nThis is a website run by \"Dan\" (not me) and has many useful tools dedicated to preventing malicious traffic from infamously offending IPs.\n\nAnother (more difficult) option is to analyze requests in realtime and sever connections that appear to deviate from the mean. This, of course, can consume additional server resources and requires some thought to prevent cutting off actual, honest patrons.\n\nIf you don't have the practical knowledge to implement something like that, but you're running an Apache server (like me), there's [mod_qos](http://mod-qos.sourceforge.net/). It's a \"Quality of Service\" Apache mod which essentially does what I just described. Not sure how it might affect benevolent load testing...\n\n## Caching\n\nMore advice from our Wikipedia lesson:\n\n<blockquote>\n  <ul>\n    <li>Deploying web cache techniques</li>\n    <li>Using different domain names or IP addresses to serve different (static and dynamic) content by separate web servers, e.g.:</li>\n    <ul>\n      <li>images.example.com</li>\n      <li>example.com</li>\n    </ul>\n  </ul>\n</blockquote>\n\nRight now I have the most basic caching possible‚Äî just a header spec for images, css, js, and fonts in my .htaccess file:\n\n<Pre>\n```xml:.htaccess showLineNumbers\n<filesMatch \".(css|webm|jpg|jpeg|png|gif|js|ico|svg|woff|woff2|ttf|otf|js)$\">\n  Header set Cache-Control \"max-age=31536000, public\"\n</filesMatch>\n```\n</Pre>\n\nUsing a CDN for a most of these assets might help me a lot. Instead of requesting a dozen _.gif_ files from my server, it would free up bandwidth and potentially cut down round-trip time by using a server closer to the client.\n\nOn the other hand, if DigitalOcean is up‚Äî but Cloudflare's services are down, it could be just as bad. However, my current setup clearly has room for improvement in this department.\n\n## Load-Balancing and Hardware\n\n<blockquote>\n  <ul>\n    <li>Using different domain names or computers to separate big files from small and medium-sized files; the idea is to be able to fully cache small and medium-sized files and to efficiently serve big or huge (over 10 ‚Äì 1000 MB) files by using different settings</li>\n    <li>Using many internet servers (programs) per computer, each one bound to its own network card and IP address</li>\n    <li>Using many internet servers (computers) that are grouped together behind a load balancer so that they act or are seen as one big web server</li>\n    <li>Adding more hardware resources (i.e. RAM, disks) to each computer</li>\n  </ul>\n</blockquote>\n\nI have a pretty wimpy server. I'm curious as to whether or not a container cluster of mirrored servers / distributed services would perform better than a single server. If each container has a unique subaddress would that free up requests? Would the amount of RAM and processing it takes make up the difference?\n\nMy technical knowledge with Docker swarms and Kubernetes clusters is pretty infantile; but I think you're still bottlenecked by whichever container is managing the requests among the remainder. So if you're running on a single VPS it's not worth it. I'll do some extra research on this to be sure I'm not missing out; or if you know better, please leave a comment.\n\nAs for additional hardware resources, the goal of this deep-dive is to make improvements while keeping costs at a minimum. The next section is really where I'm hoping to find some answers.\n\n## Server Software\n\n<blockquote>\n  <ul>\n    <li>Tuning OS parameters for hardware capabilities and usage</li>\n    <li>Using more efficient computer programs for web servers, etc.</li>\n    <li>Using other workarounds, especially if dynamic content is involved\"</li>\n  </ul>\n</blockquote>\n\nSo, pretending we didn't see that last vague and unhelpful tip... let's take a look at some popular Web servers and how they handle requests.\n\n### Apache2\n\nIn development since 1995, _Apache2_ is the old man in the family of Web servers. Development of the original HTTP Web server, [HTTPd](https://en.wikipedia.org/wiki/CERN_httpd), had begun only 5 years earlier by Tim Berners-Lee at CERN and was later taken up by the WorldWideWeb Consortium (w3c).\n\nPerhaps as a result of its age and maturity, _Apache2_ is a stable and secure Web server option‚Äî and is the most widely used server software (followed closely by _Nginx_, as of today).\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/hug-of-death/web-server-stats.jpg\"\n    width=\"654\"\n    height=\"844\"\n    caption='Statistics taken from <a href=\"https://w3techs.com/technologies/overview/web_server\" target=\"_blank\" rel=\"noopener nofollow noreferrer\">W<sup>3</sup>Techs</a> | Aug 24, 2020'\n  />\n</OneColumn>\n\nIt's interesting to note another statistic from W<sup>3</sup>Techs (below) which shows that _Node.js_ is used by more _high traffic_ sites‚Äî followed by Nginx, then Apache.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/hug-of-death/web-server-traffic-stats.jpg\"\n    width=\"588\"\n    height=\"599\"\n  />\n</OneColumn>\n\nHmmm... So more websites are using _Apache_‚Äî but, more **high traffic sites** are using _Node_. What's up with that? Are developers just too stubborn to switch to _Node_? Are high-traffic sites using _Node_ because it's actually better at handling high-traffic, or is this a chicken-and-egg situation...?\n\nTo be frank, I don't have a software engineering degree. Most of my programming and sysadmin knowledge comes from [Team Treehouse](https://teamtreehouse.com/), learning from friends and from my own hobby projects; but I'm going to go ahead and try to shed some light on this. Why not.\n\nOne thing I found is the [Apache Benchmark](https://httpd.apache.org/docs/2.4/programs/ab.html) (ab) tool which is useful for load-testing. There's a good write-up by Pete Freitag on his [blog](https://www.petefreitag.com/item/689.cfm).\n\nThe basic usage is as follows:\n\n<Pre>\n```bash\nab -n 100 -c 10 http://www.yahoo.com/\n```\n</Pre>\n\nWhere the \"-n\" argument is the number of requests and \"-c\" is the number of concurrent requests. This can be tweaked with other flags to produce the most accurate results, which will look something like this (hopefully, less abysmal):\n\n<Pre>\n```plaintext showLineNumbers\nConcurrency Level:      1000\nTime taken for tests:   69.959 seconds\nComplete requests:      1000\nFailed requests:        0\nTotal transferred:      30738000 bytes\nHTML transferred:       30557000 bytes\nRequests per second:    14.29 [#/sec] (mean)\nTime per request:       69959.429 [ms] (mean)\nTime per request:       69.959 [ms] (mean, across all concurrent requests)\nTransfer rate:          429.07 [Kbytes/sec] received\n```\n</Pre>\n\nThe other main tweak I've found for Apache is configuring the [multi-processing module](https://httpd.apache.org/docs/2.4/mpm.html) (MPM). Apache provides three main MPMs: prefork, worker, and event.\n\nI found that DigitalOcean defaults to \"prefork\" with it's LAMP-stack base server image. After reviewing a lot of information and suggestions online, this seems like a poor choice. I ended up using this [StackExchange thread](https://askubuntu.com/questions/378734/how-to-configure-apache-to-run-php-as-fastcgi-on-ubuntu-12-04-via-terminal) to switch to mpm_event (with php-fpm).\n\nOnce I made the switch, I went in to fuss around with the config file‚Äî which, for me, was at:\n\n<Pre>\n```bash\n/etc/apache2/mods-enabled/mpm_event.conf\n```\n</Pre>\n\nI was hard-pressed to find some dumbed-down documentation for setting these config values; but I used the Apache Benchmark tool as I was adjusting them to get the best RPS score.\n\nSo, not great, but at least that's some improvement! I managed to speed it up to ~100 RPS at 5000 requests with 20 concurrent requests.\n\n### Nginx and Node\n\nAnother factor that could be significantly skewing the above-mentioned Web server stats is the fact that Node uses HTTP by default and is often paired with a reverse proxy in order to securely serve HTTPS. I see a lot of Node devs using _Nginx_ for this purpose. However, there are pure JavaScript alternatives like [Redbird](https://github.com/OptimalBits/redbird).\n\n<HorizontalScroller\n  caption='The table above shows some results from an <a href=\"https://www.nginx.com/blog/testing-the-performance-of-nginx-and-nginx-plus-web-servers/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\">official Nginx performance test</a>. It shows the requests per second (RPS) on an NGINX server with up to 100KB per request.'\n>\n<TableWrapper width=\"1000\">\n| CPUs | 0 KB      | 1 KB      | 10 KB   | 100 KB |\n| :--- | :---      | :---      | :---    | :---   |\n| 1    | 145,551   | 74,091    | 54,684  | 33,125 |\n| 2    | 249,293   | 131,466   | 102,069 | 62,554 |\n| 4    | 543,061   | 261,269   | 207,848 | 88,691 |\n| 8    | 1,048,421 | 524,745   | 392,151 | 91,640 |\n| 16   | 2,001,846 | 972,382   | 663,921 | 91,623 |\n| 32   | 3,019,182 | 1,316,362 | 774,567 | 91,640 |\n| 36   | 3,298,511 | 1,309,358 | 764,744 | 91,655 |\n</TableWrapper>\n</HorizontalScroller>\n\nOut of the box, Nginx produces some incredible RPS speeds. Another lesson this demonstrates is that the best solution to preventing server overload is always **keeping your requests to a minimum**. The falloff from 0KB-100KB is an astronomical 110,000+ requests.\n\nI'm sure anyone reading this must be loving the hypocrisy since this page alone has something like 40+ requests, equaling about 500KB of data. Do I really need comments on every page? Extraneous _.svg_'s and _.gif_'s... ? No. But I must have some kind of compulsion disorder, because I really can't stop myself.\n\nIf you're looking for a similar tool to Apache Benchmark, I found a post on [yld.io/blog](yld.io/blog) that walks through using [wrk2](https://github.com/giltene/wrk2)‚Äî another load-testing application written in C.\n\n## Conclusion\n\nThis is honestly a whole new world to me as someone who's started off mainly doing front-end and other surface-level programming. I'm stoked to be learning about the different tools for load-testing and ways to avoid having the server shit the bed. If you think I'm way out of my league and I have no idea what I'm talking about, you win the prize.\n\nThis was all I could come up with right now, but I'll definitely be doing more research and (slowly) trying to figure out how to keep my posts soaked in rich media. Let me know if you have any tips or experience that's useful to people dipping their toes in sysadmin and devops!\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 10, "fields": {"title": "warTOR", "author": "Daniel Tompkins", "description": "Oddly, I don't remember when or how I got my hands on the Toshiba FlashAir card. These WiFi-enabled SD cards are made to transfer photos from a digital camera to a", "slug": "wartor", "likes": 0, "created_at": "2020-05-06T14:16:00Z", "updated_at": "2020-05-06T14:16:00Z", "featured_image": "uploads/blog/wartor/wartor-screenshots.jpg", "image_alt": "Screenshots of the warTOR app on a mobile device, all running from the Toshiba FlashAir WiFi SD card.", "content": "<ProseWrapper>\nOddly enough, I don't remember when or how I first got my hands on the [Toshiba <em>FlashAir</em>](https://www.toshiba-memory.com/products/toshiba-wireless-sd-cards-flashair-w-04/) card. These WiFi-enabled SD cards are made to transfer photos from a digital camera to a computer.\n\n<OneColumn>\n<ImageWrapper\n  caption=\"The Toshiba-made <em>FlashAir</em>, WiFi-enabled SD card.\"\n  src=\"/assets/img/blog/wartor/flashair.png\"\n  width=\"424\"\n  height=\"274\"\n/>\n</OneColumn>\n\nImagining that someone would use a 4MBps wireless connection to transfer photos when the hardware transfer is closer to 70MBps seems ridiculous.\n\nHowever, it could come in handy if you're in a situation where you don't have access to an SD card reader, or want to easily preview photos on a phone or tablet.\n\n## Digging into the FlashAir\n\nWhat's far more interesting about these Toshiba cards is the fact that they are essentially programmed to act as a [wireless access point (WAP)](https://en.wikipedia.org/wiki/Wireless_access_point). You can setup a custom SSID and password‚Äî connecting directly to the card over 2.4GHz.\n\nAfter peeking at the filesystem, I realized that the main photo gallery application hosted on the card is essentially a static website‚Äî served as basic HTML, CSS and JavaScript.\n\n<OneColumn>\n<ImageWrapper\n  src=\"/assets/img/blog/wartor/flashair-filesystem.png\"\n  width=\"583\"\n  height=\"180\"\n  caption=\"Screen-grab of the FlashAir filesystem shows the basic components of a web server‚Äî HTML, JavaScript, CSS and other Web assets.\"\n/>\n</OneColumn>\n\nMy excitement with this bit of tech was the possibility of building a totally discrete microserver that would be capable of hosting a few pages and services.\n\n## Project Inspiration\n\nMy fourth-year undergraduate architecture studio, entitled Dark Rooms, was taught by [Mona Mahall](https://m-a-u-s-e-r.net/). The studio was split into three exhibitions: _Pyramid, Server and Backstage_. These exhibitions were meant to explore the \"spaces between visibility and invisibility\".\n\nIn the second exhibition, _Server_, we were asked to consider the design of an anti-human space‚Äî a dark, cold, electronic archive built exclusively for machines. In my preliminary research, I was particularly interested in artists like [Adam Bartholl](https://arambartholl.com/dead-drops/).\n\nHis project, a USB \"[dead drop](http://deaddrops.com/)\", drew inspiration from an information-sharing tactic used by spies. A predetermined secret location‚Äî such as a hollowed-out rock, brick, log or other object‚Äî would be used to discreetly stash an important item.\n\n<OneColumn>\n<ImageWrapper\n  src=\"/assets/img/blog/wartor/USB-dead-drop.png\"\n  caption=\"Adam Bartholl's <em>Dead Drop</em> USB stick, embedded in the mortar of a brick wall.\"\n  width=\"1024\"\n  height=\"768\"\n/>\n</OneColumn>\n\nOnce the item‚Äî perhaps a slip of paper or a key‚Äî is \"dropped\", a second party could then retrieve it without interacting directly with the other person or being detected in the exchange.\n\n## Wireless Anonymous Repository\n\nWhile a USB is already a much more \"invisible\" way of storing and exchanging information, I wanted to take this concept a step further. Using the _FlashAir_ cards, I proposed a new wireless dead drop that could be just as affordable and simple as the USB, but with a myriad of superior qualities.\n\nWriting directly to the card requires an SD card slot; however, the wireless functionality can be powered without a desktop or laptop. A typical SD card takes 2.4-3.6V at about 30mA. I found that by using an SD-to-USB adapter, one could power the wireless module from a standard 5V USB outlet.\n\n<OneColumn>\n<ImageWrapper\n  src=\"/assets/img/blog/wartor/wartor-AC.png\"\n  alt=\"The FlashAir SD card (which I code-named, warTOR) powered up inside an AC electrical housing.\"\n  caption=\"The FlashAir SD card is powered up by a 120VAC-to-5VDC converter <em>bug</em> inside a false outlet box\"\n  height=\"1219\"\n  width=\"1015\"\n/>\n</OneColumn>\n\nDepending on the location of the dead drop, this could be concealed within a false junction box that would be plugged in over the top of a standard 2-outlet 120V AC. If‚Äî in the spirit of the original USB dead drop‚Äî you wanted to embed the card in a brick wall, then the device could be powered from a USB powerbank.\n\n<OneColumn>\n<ImageWrapper\n  src=\"/assets/img/blog/wartor/wartor-outlet.png\"\n  caption=\"The outlet sits out noticeably from from the wall; but it can be easily placed over an existing outlet while completely hiding the contained SD card server.\"\n  alt=\"The outlet shown from the front, showing how the WiFi SD card is completely hidden\"\n  width=\"548\"\n  height=\"743\"\n/>\n</OneColumn>\n\nI named the project warTOR for \"wireless anonymous repo\" + [TOR](https://en.wikipedia.org/wiki/Tor_(anonymity_network)). Though it's not connected to the Tor network in any way, I thought this title captured the spirit of anonymity (plus I wanted to use some Pok√©mon sprites). If someone would like to try it, the Toshiba cards can be setup as a wireless bridge... from a Tor gateway?\n\n## Future Plans\n\nSomething else that I'd like to try is powering the card via a small solar cell, but I haven't gotten there yet... The greatest benefit of the wireless dead drop is that one could log into the WAP from their cellphone, upload or download a file, and no one could discern that any sort of exchange was happening. However, I'm also working on a clientside chat application that could be hosted on the cards.\n\nWith this implemented, then two people could sit down in a caf√© and send messages back and forth over the private network; or, someone could login to the network and type out a message for the other person to see at a later date.\n\n<OneColumn>\n<ImageWrapper\n  src=\"/assets/img/blog/wartor/wartor-screenshots.jpg\"\n  width=\"1844\"\n  height=\"750\"\n  alt=\"Screenshots of the warTOR server on a mobile device, with upload/download instructions and chat\"\n  caption=\"Screenshots from the warTOR server on a mobile device. I used Toshiba's provided documentation to setup file upload/download, and started building a chat service that anyone in the vicinity can use to <em>drop</em> and read messages.\"\n/>\n</OneColumn>\n\nHere are some screenshots from the application üëÜ. I'll be doing a follow-up post with a GitHub link to the _FlashAir_ CONFIG file that I'm using on my card. I'll also upload the source code for the original _warTOR_ server with instructions on how you can deploy your own _warTOR_ in the wild!\n\nHope you enjoyed this project. If you'd like, please subscribe for updates (livestreams, new posts) or follow me on Twitter or leave a note below! Thanks for reading _loosed_.\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 11, "fields": {"title": "Microfactory 02", "author": "Daniel Tompkins", "description": "During my undergrad in architecture, one of the things that most excited me was the opportunity to work in a fabrication shop. At the time, my school had a modest metal shop and a slightly more expansive wood shop. They also provided students with two 3-axis CNTMotion CNC mills‚Äî each with a 5x10' bed. I've used these machines professionally as well, and (while they cost as much as a new Porsche) they're really well-built tools.", "slug": "microfactory-2", "likes": 0, "created_at": "2020-10-14T23:30:00Z", "updated_at": "2020-10-14T23:30:00Z", "featured_image": "uploads/blog/microfactory-2/powerwash.gif", "image_alt": "Animated GIF of the bench being pressure-washed in the yard.", "content": "<ProseWrapper>\n## A DIY Home Shop\n\nDuring my undergrad in architecture, one of the things that most excited me was the opportunity to work in a fabrication shop. At the time, my school had a modest metal shop and a slightly more expansive wood shop.\n\nThey also provided students with two 3-axis <em>CNTMotion</em> CNC mills‚Äî each with a 5x10' bed. I've used these machines professionally as well, and (while they cost as much as a new Porsche) they're really well-built tools.\n\nTowards the end of my time there, a few 6-axis robots were also hanging around in the shop annex:\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/microfactory-2/kuka-kr-200.jpeg\"\n    alt=\"Re-purposed factory robot, nicknamed Dionysus, with a mounted bandsaw.\"\n    caption=\"<span>The re-purposed factory robot, <em>Dionysus</em>&mdash; a 6-axis, bandsaw-wielding <em>Kuka</em> KR-200. Image sourced from the Robot Construction Laboratory (RCL). Check out the resources for RCL's <a target='_blank' href='https://www.rcl-aap.com/open-source-factory'>Open Source Factory</a>.</span>\"\n    width=\"500\"\n    height=\"500\"\n  />\n</OneColumn>\n\nIn the first Microfactory post, I described my scant experiences with fabrication‚Äî usually in the garage with my dad and some power-tools. So, having more professional means and devices made the school's shop feel like a cathedral for invention, and I spent a great deal of time getting to know the different machines, mechanisms, and methods.\n\nSince we moved into our new (and first) home, I'd naturally been drawn to the idea of using the garage and the basement for a home shop.\n\n## Every Shop Needs a Workbench\n\nThere was a Sears Grand that went out of business in my hometown in northern Illinois. I think the \"grand\" stores were Sears' last-ditch effort to combat Walmart... I don't know.\n\nAnyways, it went out of business. During the liquidation sale, my dad was kind enough to buy me a decent collection of tools‚Äî lots of Craftsman tool-bags, wrenches, hammers, pliers, etc. I've gradually accumulated a few more tools over the years‚Äî mainly from garage and estate sales. I also have an ever-growing collection of scrap electronics‚Äî power supplies, motors, LEDs, Arduinos, Raspberry Pis...\n\nNothing's that big, but it's definitely a lot. And it's taking up a lot of room. The biggest problem that I've encountered is the lack of a work surface. The occasional house centipede coming to visit me from the dark corner of the basement can make soldering on the floor distracting.\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/microfactory-2/house-centipede.jpeg\"\n    alt='House-centipede with speech bubble, saying: \"Bonjour\"'\n    width=\"1000\"\n    height=\"664\"\n    visible={ false }\n  />\n</OneColumn>\n\n## Bottom line, it was high time for a workbench.\n\nWhen my girlfriend's dad heard that we were interested in making one, he suggested we save on material costs and setup his father's bench. His dad worked as a manager along an assembly-line at the Budd Company in Philadelphia. By the looks and contents of the bench, he was also quite handy as a machinist.\n\nTogether, we planned out a weekend to drive out to Philly and help Natalie's dad clean off the bench. His parents have both passed away now, so it seemed like a wonderful idea to salvage the bench and carry on the spirit of one tinkerer to the next.\nPressure-Washing ü§ò\n\nOil is often applied as a lubricant‚Äî and as a medium to carry away heat‚Äî when machining or drilling metal. Unfortunately, we found that it can also coagulate into a sticky kind of jelly when it's left to the elements, or pools up.\n\nNatalie's grandpa left all kinds of unusual metal stock and tools in, on, and around the workbench. Uncovering it and cleaning it out felt like exploring the tomb of some metal-working pharaoh.\n\nIn a relatively short period of time‚Äî maybe 40-to-60 years‚Äî there must have been some drastic changes in manufacturing. As we went through the drawers and shelves, the older tools‚Äî as well as the hardware and stock pieces‚Äî all felt extraordinarily foreign, time-worn and remarkable.\n\nAfter an hour or so of peeling nuts and bolts out of sticky corners and dusting metal shrapnel into the trash, we finally got to the point where we could actually move the bench out to the yard. Natalie's dad had an idea‚Äî to use his power-washer to blast off all the gooey oil‚Äî and it ended up being a good one.\nAnimated GIF of the bench being pressure-washed in the yard.\n\n<OneColumn>\n  <ImageWrapper\n    src='/assets/img/blog/microfactory-2/powerwash.gif'\n    alt='Animated GIF of the bench being pressure-washed in the yard.'\n    caption='We blasted off the surface layer of congealed oil with a Ryobi 1800PSI pressure-washer.'\n    width=\"360\"\n    height=\"202\"\n  />\n</OneColumn>\n\nSome of the folks in [/r/Workbenches](https://www.reddit.com/r/Workbenches/comments/j529iz/my_girlfriends_grandpa_was_a_machinist_and_had/?utm_source=share&utm_medium=web2x&context=3) were disappointed that we were cutting away the patina. It is sad to see it go, but it was definitely a quick-and-easy way to get the bench clean‚Äî and I'm sure it'll get dirty again soon.\n\n## Workbench Installation\n\nThat one cleanish spot on the workbench surface is from an incredible cast-iron vise (which Natalie's dad graciously gifted as well). The rest cleaned up nice. We used a scrub brush with some brake cleaner on a set of steel-angle shelves that looked as though grandpa had cut, drilled and bolted together himself. Underneath the table are a set of steel drawers as well, so plenty of storage options.\n\nThe legs are made up of a layered, folded steel. It's a unique design, and very sturdy. The top is made up of (3) 2x12s sandwiched together and carriage-bolted down at the top of the legs. I also attached a 2x12 to the piloted holes on the bottom rungs. Natalie's dad figured the legs were purchased from a kit, and he found a second set to take home for his partner Resolute Desk.\n\nWhen we finally had all the parts moved into our basement, I cut some 2x4s to fit the floor-to-joist height and malleted them tight against the wall. Once those were frictioned into place, I made sure they were plumb and used a couple splice plates at the top to tie them into the joists. After shifting the workbench against the wall, I did some additional leveling with shims and scraps.\n\n<TwoColumn>\n  <ImageWrapper\n    alt=\"Close-up of a 2x4 stud splice plate tying ino the floor joist\"\n    src=\"/assets/img/blog/microfactory-2/stud-splice-plate.jpg\"\n    height=\"768\"\n    width=\"432\"\n  />\n  <ImageWrapper\n    alt=\"Detail shot of the junction box above the workbench with a 4-plug outlet getting installed.\"\n    src=\"/assets/img/blog/microfactory-2/workbench-electrical.jpg\"\n    height=\"768\"\n    width=\"432\"\n  />\n</TwoColumn>\n\nI measured some 2-by-4's, cut them a hair long, malleted them to the wall. Then, I screwed in a splice-plate from the stud to the floor joists. There was also a conveniently located junction box where I put in a 4-plug outlet.\n\nNext, I moved the shelves onto the work surface and piloted some additional holes in the steel-angle frame. I put some cabinet screws through the shelf frame and the bench's wooden backsplash. This anchored everything against the wall‚Äî and prevented any chance of the shelves tipping forward. Once everything was in place, it certainly felt solid as a rock.\n\nI returned the vise to its former resting place, and found a new use for some under-cabinet LEDs that had adorned the kitchen at our previous apartment. The height of the lights provides a nice, even wash across the work surface.\n\nLucky for me, there happened to be a junction box right above the top shelf. I bought a pair of outlets and a cover-plate, and rewired the box for a total of 4 local plugs.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"The finished workbench, solidly installed in the corner of the basement.\"\n    src=\"/assets/img/blog/microfactory-2/workbench-ready.jpg\"\n    height=\"432\"\n    width=\"768\"\n  />\n</OneColumn>\n\n## Closing Thoughts\n\nSo it's not quite a microfactory yet. My imagined robots and CNC mills aren't autonomously spitting out production pieces. Although, I do feel like this was a tremendous step. Hopefully having a nice workspace will provide some momentum for more projects. I'm looking at this old CRT for something... I also have some stepper motors and their drivers that I've been meaning to wire up and test. Anyways, that's it for now. Thanks.\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 12, "fields": {"title": "Cars and Fish", "author": "Daniel Tompkins", "description": "Far too many of us have been in the same gut-wrenching situation. You're late. The doors slam as you rush into your car. Then you turn the key, and ... <i>nothing</i>. If you're less unlucky, you might still hear a click‚Äî or see the flash of a dash icon...", "slug": "car-hacking", "likes": 0, "created_at": "2021-04-19T00:22:00Z", "updated_at": "2021-04-19T00:22:00Z", "featured_image": "uploads/blog/car-hacking/post_corrosion.jpg", "image_alt": "Example of lead-acid battery post corrosion", "content": "<ProseWrapper>\n## 03/12 Fish Fry Kerfuffle\n\nIf you're familiar with the Christian observation of Lent‚Äî meat is forbidden on Fridays. As a result, a lot of churches host Friday-night fish fry dinners, and I had been leaving to pick up my battered cod dinner.\n\nSomeone showed me an interact [fish fry map](https://codeforpittsburgh.github.io/fishfrymap/) that'd been coded by _Code for Pittsburgh_. Side note: Code for Pittsburgh looks like a really cool gang of like-minded coders, and they've built some neat stuff together.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Screenshot from the official 2021 Pittsburgh Lenten Fish Fry Map from Code for Pittsburgh\"\n    src=\"/assets/img/blog/car-hacking/fish_fry_map.jpg\"\n    width={ 737 }\n    height={ 686 }\n  />\n</OneColumn>\n\nUsing the map, I picked out a church in nearby Shadyside. We pre-ordered two fried fish sandwiches for pickup at 5:45pm. Naturally, I was late, rushing to the car at 5:50pm, I rolled (it's low) into the front seat and slammed the doors. I could see the tartar sauce in my mind's eye ...\n\nThen I turned the key ... _nothing_. Far too many of us have been in the same gut-wrenching situation. If you're less unlucky, you might still hear a click‚Äî or see the flash of a dash icon.\n\nThe stakes were still pretty low. I've been working remotely since September 2020. So, I'm blessed that I wasn't relying on the car to get to my job. In the grand scheme of things (WFH, pandemic, in the garage, on a Friday), this was probably the best-case scenario for a dead battery.\n\n### Jump-Starting a Dead Battery\n\nMy neighbor happened to be pulling into the driveway next door. So, in desperation, I hurriedly asked if I could get a jump. If you're like me and always forget the connection steps, enjoy this beautiful illustration by yours truly:\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Diagram showing connection steps for jumper cables. First connect to the dead battery's positive post (1), then the running battery's positive post (2) with the red/white cable. Next, connect the negative post (3) of the running car's battery. Lastly, connect to the metal frame (4) or other exposed ground on the dead car.\"\n    src=\"/assets/img/blog/car-hacking/battery_jump.svg\"\n    width={ 740 }\n    height={ 428 }\n    visible={ false }\n  />\n</OneColumn>\n\nApparently, you can also go from the running car's frame (#3), and connect (#4) to the dead battery's negative post. However, the above order is what I've most commonly seen (you're welcome future, stranded self).\n\nWe hooked up the cables. To my understanding, the alternator spins faster when you rev the engine‚Äî and, consequently, outputs a higher amperage. So, holding the pedal at about 2000 RPM might be productive‚Äî especially for bigger engines.\n\nThis should put out between 14V and 15V from an idling vehicle. If you measure less than 13V across the battery's posts while the car is running, then it's more likely you have an issue with your alternator (which charges the battery).\n\nWe must have let his car rev for at least 5 minutes without a click, blink or whisper from our Camry. In a last ditch, I tried biting into the battery's terminals using the jumper cable's copper alligator-teeth‚Äî still nothing. I thanked my neighbor for trying, but it seemed toasted‚Äî kaput.\n\nAlas, it was not our destiny to taste the buttery, fishy flavor that night.\n\n## 03/13 Camry Debugging\n\nTo recap:\nFish Friday. Yet no tangy-sweet tartar sauce.\n\nMy fianc√©e and I actually attempted (after some rapid deliberation) to bicycle across Pittsburgh's East End to the church.\n\nUnfortunately, the hills of Pittsburgh are unforgiving to flat-land Illinoisers like myself. We also realized, after about a half-mile of biking, that the kitchen would definitely be closed by the time we would arrive.\n\nI called the church, and they kindly said they'd comp the dinners we'd ordered for the next Friday. Without any pressing appointments or plans for the weekend, I made it priority one to get the car running‚Äî and to get those battered cods in one week's time.\n\n### Under the Hood\n\nSaturday was an unseasonably beautiful day for March in Pittsburgh; so, I opened the garage door and ducked under the hood of the Camry. The first thing that stood out was the corrosion all over the battery's posts. It was heckin crusty and gross. üëá\n\nThat white (or bluish-green) powdery stuff is apparently either lead sulfate or anhydrous copper sulfate. As this corrosion builds up, so does the battery's resistance. No good.\n\nI dug through the mantle of powder with the multimeter probes to find that the battery was reporting a mere 1.79V. That's close to 10% of the battery's full capacity.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Example of lead-acid battery post corrosion\"\n    src=\"/assets/img/blog/car-hacking/post_corrosion.jpg\"\n    width={ 960 }\n    height={ 540 }\n  />\n</OneColumn>\n\nThat nasty business is lead sulfate or anhydrous copper sulfate. Hydrating anhydrous copper sulfate gives it the green or blue tinge. This [NOCO blog post](https://no.co/blog/ultimate-guide-to-clean-and-remove-car-battery-corrosion) was a great resource for understanding battery maintenance and safety‚Äî plus I really liked the graphics.\n\nSince the jump didn't work and the battery was reading an incredibly low voltage, my conclusion was that it needed to be replaced.\n\nIt's super easy to get the battery out. Doing this job on a Camry, a **10mm socket** (I recommend a little box-end too for the terminal clamps) is probably the only tool you really need.\n\nI recommend loosening the nut on each battery terminal clamp before the bolt tying this bracket to the frame. I made the mistake of taking off the bracket first and it was a pain to break the corroded nuts loose on the terminals with the battery loosy-goosy.\n\nOnce you get the front bolt out, there's a hooked tension-rod on the back that will need to drop down. Then you can pretty easily remove the bracket entirely. If you do it this way, you might be able to avoid dealing with the tensioning bolt at he other end of the bracket (see the image below).\n\n<TwoColumn>\n  <ImageWrapper\n    alt=\"Corroded battery still installed in Camry's engine bay. Red circle showing post-clamp tightening nut and the main bolt for the battery-retaining clamp bracket.\"\n    src=\"/assets/img/blog/car-hacking/battery_bolts.jpg\"\n    width={ 338 }\n    height={ 600 }\n  />\n  <ImageWrapper\n    alt=\"Corroded Toyota 2010 Camry battery sitting on the garage floor next to crescent wrenches and battery clamping bracket for mounting in car.\"\n    src=\"/assets/img/blog/car-hacking/took_that_shit_out.jpg\"\n    width={ 540 }\n    height={ 960 }\n  />\n</TwoColumn>\n\nReally only 2 nuts and 1 bolt to get the battery out. Both the terminal clamp nuts and the bolt tying the battery bracket to the front of the car frame use a 10mm socket.\n\nWith the battery finally out, I looked around the outside to find a long string of letters and numbers that had been heat-stamped into the plastic:\n\n> The first letter refers to the month it was manufactured: A-L refers to January ‚Äì December. The number refers to the year in which the battery was made. For example: 2 would be 2012, 3 would be 2013, 4 would be 2014, etc. The last letter refers to the plant in which the battery was made.[^1]\n\nMy Toyota-manufactured battery had the number \"8\". Since the average lifespan of a normal car battery is between 2-5 years, it was most likely manufactured in 2018.[^2] R.I.P. battery, I promise to take better care of the next one.\n\n### Costco Membership\n\nThere are a couple stores (AutoZone, Advance Auto Parts, O' Reilly Auto Parts, Firestone, etc.) that will apparently test your battery for free. If you have a spare, it might be good to clean up the dead battery and take it over to them. You could find out if your battery is definitely shot or if the problem might lie elsewhere.\n\nI was eager to get this fixed, so I went ahead and decided to purchase a new battery. Like any product, there are good and bad manufacturers. It can be helpful to read reviews and make sure you're getting your money's worth.\n\nThe only two things that are really important in purchasing a new battery are the battery \"group\" and the cold-cranking amps (CCA). The 2010 Camry uses group 24F, and the CCA needs to meet or exceed 582 (the CCA on the original, Toyota-manufactured battery). A quick cost-comparison among some of the nearby stores yielded these results:\n\n<HorizontalScroller caption=\"Battery comparison. April, 4th 2021.\">\n<TableWrapper width=\"1000\">\n| store                                                                                                                                                                                                   | price + core     | CCA  | warranty                  |\n| :---                                                                                                                                                                                                    | :---             | :--- | :---                      |\n| [Advance Auto Parts](https://shop.advanceautoparts.com/p/diehard-gold-battery-group-size-24f-750-cca-24f-6/2130001-P?navigationPath=L1*14920%7CL2*15000)                                                | $169.99 + $22.00 | 750  | 3-year free replacement   |\n| [AutoZone](https://www.autozone.com/batteries-starting-and-charging/battery/duralast-gold-battery-24f-dlg-group-size-24f-750-cca/832327_0_0)                                                            | $169.99 + $18.00 | 750  | 3-year warranty           |\n| [Costco](https://www.costco.com/automotive-batteries.html)                                                                                                                                              | $89.99 + $15.00  | 700  | 3-year limited warranty   |\n| [Home Depot](https://www.homedepot.com/p/Exide-SPRINTER-MAX-12-volts-Lead-Acid-6-Cell-24F-Group-Size-750-Cold-Cranking-Amps-BCI-Auto-Battery-SX24F/308488599?)                                          | $99.00 + $15.00  | 750  | 30-month free replacement |\n| [O' Reilly Auto Parts](https://www.oreillyauto.com/detail/c/tested-tough-max/marine---boat/battery---automotive/9e0b1d7dae44/motorcraft-tested-tough-max-battery-group-size-24f-24r/mot2/bxt24fa?pos=4) | $134.99 + $18.00 | 700  | 3-year free replacement   |\n| [Walmart](https://www.walmart.com/ip/EverStart-Maxx-Lead-Acid-Automotive-Battery-Group-Size-24F/28275657)                                                                                               | $98.76 + ?       | 750  | 3-year free replacement   |\n</TableWrapper>\n</HorizontalScroller>\n\nThe cheapest options by far were Costco, Walmart, and Home Depot. The \"core\" charge was a new concept to me (someone who has done little to no car repair); but it's important to note:\n\n> Certain types of auto parts can be recycled or, more specifically, remanufactured for future sale. These parts have a core price that is used as a form of deposit on the portion of the part that can be remanufactured and that is designed to encourage return of the old part. The \"core,\" simply put, is your old part. Returning cores can save you money on replacement parts.[^3]\n\n<Note title=\"TL;DR\">\nMake sure you recycle your old battery instead of tossing it out the window, because it could save you $20 on the new one.\n</Note>\n\nWalmart didn't seem to advertise their core charge; regardless, I somehow convinced myself that the $60 Costco membership might be worth the $10 of savings for a Costco battery...\n\nA generous friend gave me a ride to a nearby warehouse. This was my first time within 100 feet of a Costco, and <i>that</i> deserves its own story... but I'll stay on topic.\n\nThe sales rep recommended the ($120) \"Gold Star Executive\" membership and described the reasons why that was the way to go. There was visible disappointment when I revealed that I had knowledge of the $60 option.\n\nAfter some very uncomfortable back-and-forth, I signed my soul away and got my picture printed on the plastic admission to the capitalist warehouse of wonders (in bulk).\nWe got back and plopped in the new battery. I hooked the tension rod back behind and tightened down the front of the bracket to the frame. There were a few articles online that recommended a mixture of baking soda and water for cleaning up the corrosion.\n\nI soaked the terminal clamps, then brushed off the remaining corrosion with a stiff-wired brush. The same articles recommended using dielectric grease to prevent corrosion on the battery posts. I didn't have that readily available; but apparently [petroleum jelly](https://blog.firestonecompleteautocare.com/batteries/how-to-clean-battery-terminals/) can be used as a substitute.[^4]\n\nThe negative post gave a satisfying *pop* when I touched it back together‚Äî that's just an eager arc of electricity from completing the circuit to all the car's electronics. This time, when I turned the key, I could heard the familiar *chunk-chunk* of the starter before the engine revved to life. Success!\n\n## 3/19 Charge Your New Battery\n\nOne week later, I was swimming in confidence and excitement. I had completed another successful home auto repair that had undoubtedly saved me hundreds of dollars in genuine Toyota parts, labor and B.S.\n\nWe were once again ready for delicious, holy fried fish. It was already paid for during the prior week's battery debacle. I rolled into the front seat, turned the key... and once again, the familiar fading dash lights of a dead battery.\n\n<OneColumn>\n  <ImageWrapper\n    alt='Inconceivable! (animated gif from \"The Princess Bride\")'\n    src=\"/assets/img/blog/car-hacking/inconceivable.gif\"\n    width={ 245 }\n    height={ 200 }\n    visible={ false }\n  />\n</OneColumn>\n\nThis time, we had the time and fortitude to battle the hills of Pittsburgh. We biked to the church and got our fish sandwiches. It was worth the trip, but it was still a bittersweet meal knowing that our battery woes were to be continued...\n\nThe next day, I had my neighbor help me jump the car again. Thanks be to Zeus‚Äî god of electricity, it started. I swear, Nick, I won't ask you for another jump start for the rest of my life.\n\nFor real. As soon as we got it started, I drove to the nearest (actually, not the even the nearest) Walmart and bought a 120V plug-in charger.\n\nWe kept the car running for another hour or so, just to make sure the battery was getting topped-off.\n\n### Testing for Parasitic Draw\n\nOver the course of the next week, I took measurements across the battery posts. If the issue had been a parasitic drain‚Äî some short along the circuit that was pulling charge off the battery; then I might have had a real problem.\n\nMeasuring across the terminals while the car was running showed over 14V, confirming that the alternator was doing its job. After shut-off, the battery measured 12.79V (good). Over the course of a day, the battery dropped to about 12.5V. This seemed concerning at first, but then the voltage settled at about 12.47V and held.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Just a few minutes after shutting off the car, the battery measures 12.79V across the posts.\"\n    src=\"/assets/img/blog/car-hacking/12_79V_multimeter.jpg\"\n    width={ 511 }\n    height={ 908 }\n  />\n</OneColumn>\n\nIt was a pain in the butt; but I tested the electrical system for [parasitic draw](https://us.autologic.com/news/testing-parasitic-draw-via-fuse-voltage-drop). I opened up the fuse compartments (there are actually two) on our 2010 Camry.\n\nOne is conveniently located under the hood (near the driver's side), and the other is unbelievably stupid-silly to get to‚Äî just behind the \"kick-panel\" trim (that plastic guard just under the steering wheel).\n\nI wish someone had told me to really, truly <i>exhaust every possible option</i> before wasting your time hunting for parasitic draw.\n\nTo find the source of a parasitic drain on your battery, you essentially need to probe across every fuse until you find a circuit drawing power. From there, you'd get a ballpark of where to keep looking.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"The fuse compartment under the hood of the Camry. Seriously, imagine holding a multimeter probe to each of those tiny, exposed pads on each of those little fuses... no, thanks. Never again.\"\n    src=\"/assets/img/blog/car-hacking/camry_fuses.jpg\"\n    width={ 872 }\n    height={ 493 }\n  />\n</OneColumn>\n\nAdditionally, to test for parasitic draw correctly, you should really have a charged battery. If you have a charged battery, then you can test voltage drop over time.\n\nIf the voltage drops quickly over the course of few hours (or drops below 12V) then you might have a reason to suspect parasitic draw. I definitely recommend watching this [video by HumbleMechanic](https://www.youtube.com/watch?v=lRcj1fQcWwU) covering parasitic draw and how to test for it.\n\n## Car Repair Lessons Learned\n\nAbout a month later now, and time to reflect. At the end of it all, I think it could have been that the new battery just hadn't reached a full charged.\n\nIt _had_ sat for a week in a cold garage. You can't blame me‚Äî I'm WFH and we're still in a pandemic.\n\nMy best guess is that the small charge it received in the post-swap jaunt to the grocery store (one week prior) wasn't enough to keep it alive. I'm also convinced that one of the cheap USB dongles I bought at a gas station was jacked up (pun unintended).\n\nFingers crossed it was a glitch and the new battery will last at least another 3 years. At any rate, we now have an emergency charger for future Fish Fry Fridays.\n\n[^1]: How to Read US Battery Date Codes. US Battery. April 4th, 2021. [https://www.usbattery.com/wp-content/uploads/2018/10/2015_US-Battery-Date-Codes-2-1.pdf](https://www.usbattery.com/wp-content/uploads/2018/10/2015_US-Battery-Date-Codes-2-1.pdf).\n[^2]: The Average Life of Car Batteries and 7 Tips to Extend Your Car Battery Life. Nationwide Blog. April 4th, 2021. [https://blog.nationwide.com/extend-car-battery-life/#:~:text=On%20average%2C%20car%20batteries%20last,will%20last%20is%20the%20weather](https://blog.nationwide.com/extend-car-battery-life/#:~:text=On%20average%2C%20car%20batteries%20last,will%20last%20is%20the%20weather).\n[^3]: What is Core? NAPA. April 9th, 2021. [https://www.napaonline.com/en/what-is-a-core](https://www.napaonline.com/en/what-is-a-core).\n[^4]: How to Clean Battery Terminals with Stuff You Already Have. Firestone Blog. April 4th, 2021. [https://blog.firestonecompleteautocare.com/batteries/how-to-clean-battery-terminals/](https://blog.firestonecompleteautocare.com/batteries/how-to-clean-battery-terminals/).\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 13, "fields": {"title": "Killing a Startup", "author": "Daniel Tompkins", "description": "Together with Sam Piecz, I co-founded a web application for visualizing personal financial data and test-building portfolios. Since 2016, I worked as a designer and‚Äî eventually‚Äî as the go-to Javascript (JS) coder, for...", "slug": "killing-a-startup", "likes": 0, "created_at": "2019-06-09T16:13:00Z", "updated_at": "2019-06-09T16:13:00Z", "featured_image": "uploads/blog/killing-a-startup/correlateprohomepage.jpg", "image_alt": "Screenshot of the original CorrelatePro homepage (no longer active).", "content": "<ProseWrapper>\n## Making Friends Who Can Code\n\nTogether with [Sam Piecz](http://www.samuelpiecz.com/), I co-founded a web application for visualizing personal financial data and test-building portfolios. Since 2016, I worked as a designer and&mdash; eventually&mdash; as the go-to Javascript (JS) coder, for _CorrelatePro_.\n\nSam, who'd grown up on the Raspberry Pi, knew Linux and the command-line interface (CLI) like the back of his hand. He showed me how to navigate the terminal; how to use Vim, Tmux and Github; and got me setup with basic devops: in our case, a virtual environment and [Docker](https://www.docker.com/). Any technical work I do on a computer today is because of Sam.\n\nSam and I met in the Boy Scouts&mdash; eventually we both went on to earn the rank of Eagle. When we were younger, Sam and I went to punk, metal, and electronic shows. We started skating together, went to some weird suburban parties, and got into some light-weight trouble.\n\nSam started (and has since sold) an electronic cigarette \"e-liquid\" company&mdash; _Heating Up Vapor_. I designed the labels for his bottles, and had started working on some custom packaging. As we got older, however, almost every time we went to hang out, we were really just sitting on opposite sides of the room coding on our laptops.\n\n## Learning Slow\n\nSam got me started with basic CSS and HTML. He got me a job doing remote work in search engine optimization (SEO). In undergrad, I was getting a degree in architecture. I enrolled in (and dropped out of) a Python course. Sam kept teaching me and encouraging me.\n\nAt grad school, I took a course in data visualization. I didn't know any JavaScript, but they were teaching us to learn [D3](https://d3js.org)&mdash; a JS library for \"data-driven documents\".\n\nI barely passed, but continued to practice&mdash; eventually implementing a few basic visualizations in our application. I recycled some code, a force-directed graph, and improved upon it for adding stocks/cryptos/sectors to a mock portfolio. You could visualize the correlation between those assets (based on distance/density).\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/killing-a-startup/forcedirectedgraph.jpg\"\n    alt=\"A force-directed graph clustered nodes (each representing a different ticker or sector) by finding correlations in price increases or decreases over time.\"\n    width={ 997 }\n    height={ 853 }\n  />\n</OneColumn>\n\n## We Actually Built Something\n\nBefore we took down CorrelatePro, I'd also implemented a candlestick graph with [TechanJS](https://techanjs.org). We had a free plan with a few financial data APIs. Sam setup some internal APIs to move that data (realtime prices, tickers, and historical costs) to the frontend. I took in the data, filtered it and formatted it, and made those dates, times, prices and quantities legible. We had news, a public dashboard for viewing other users' portfolios, and sentiment analysis based on Tweets.\n\nOver time we saw a couple boosts in page-views and click-throughs as Sam continued to submit new pages to Google's Search Console. Working remotely, we used Trello to keep track of tasks and communicated with Slack. We posted to Hacker News and Reddit, built a company Facebook page, and put some effort toward an email marketing campaign. We were both struggling to contribute with school&mdash; and lost a third co-founder early on.\n\nAfter about three years, we still weren't getting enough feedback to iterate. The few users we did have, mostly friends and family, weren't entirely sure how to use it; and the money we'd sunk into server costs was starting to add up&mdash; even though all our libraries and APIs were free. We went through YCombinator's _Startup School_, and applied several times for YC funding to no avail.\n\n## ‚ö∞ RIP ‚ö∞\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/killing-a-startup/correlateprohomepage.jpg\"\n    alt=\"Screenshot of the original CorrelatePro homepage (no longer active).\"\n    width={ 935 }\n    height={ 593 }\n  />\n</OneColumn>\n\nAll the videos and podcasts we'd shared&mdash; interviews with founders and venture capitalists (VCs)&mdash; told us we should have quit a long time ago. However, SEO takes time. Startups take time. They take dedication, and we weren't giving up.\n\nThere were weeks, even months (studying for finals), when we made little or no progress; but we always came back. We'd get burnt out, but we'd pick it up again and keep trying.\n\nWhen Sam took down the server, I was terribly upset. It had consumed our time and our attention for years, and it felt awful... At the same time, it was liberating. We'd both been so fixated on fixing this thing without knowing if anyone would want it&mdash; even if it wasn't broken.\n\n## Learning Lessons\n\nI don't want to tell you to give up, but I do want to say that&mdash; if you are a struggling entrepreneur&mdash; know when to move on. It might not be obvious, and it definitely won't be easy, but if you're ever going to succeed it's certainly necessary.\n\nSam and I learned everything we did about finance while working on CorrelatePro. We wanted to make investing as simple and straight-forward as possible&mdash; for ourselves, and for everyone else who sees investments as opportunities to rise up financially.\n\nWhile we lost something dear to us, we learned a great deal. It was an invaluable experience that will give us some incredible insights when we move onto the next project. We did fail, but we're not giving up.\n</ProseWrapper>", "content_type": "blog"}}, {"model": "articles.article", "pk": 14, "fields": {"title": "Vim Clutch", "author": "Daniel Tompkins", "description": "Hacking together a <i>Vim Clutch</i> from the foot-pedal control of a dictation machine. Learn how to make a Raspberry Pi 0 be recognized across operating systems as a plug-and-play <i>Human-Interface Device</i> (HID), or keyboard. See me struggle with Python and solder some really tiny leads.", "slug": "vim-clutch", "likes": 0, "created_at": "2021-05-21T23:28:00Z", "updated_at": "2021-05-21T23:28:00Z", "featured_image": "uploads/blog/vim-clutch/pedal_clicks.gif", "image_alt": "Gif of me clicking the middle and right switches on a black foot-pedal with 3 switches total", "content": "<ProseWrapper>\n## Goodwill Strikes Again\n\nA symptom of heavy [Vim](https://www.vim.org) usage is that your brain begins to re-partition old memories for keyboard shortcuts‚Äî trashing old brain files for small boosts in finger dexterity.\n\nIt was this mass of tangled brains in my own dome that compelled me to purchase a weighty foot-pedal at Goodwill. The model I got is actually a combination of three, springy switches. Sold for the reasonable price of $3.\n\n<TwoColumn>\n  <ImageWrapper\n    alt=\"Picture of pedal assembly on it's face with the bottom up. Getting ready to unscrew the clamshell housing with a screwdriver.\"\n    src=\"/assets/img/blog/vim-clutch/screwdriver.jpg\"\n    width={ 500 }\n    height={ 889 }\n  />\n  <ImageWrapper\n    alt='The foot pedal has a wide, center pedal (with an embossed \"PLAY\"). Two, thinner pedals on either side read \"REW\" and \"FWD\", respectively. All 3 switches are really clicky.'\n    src=\"/assets/img/blog/vim-clutch/pedal_clicks.gif\"\n    width={ 300 }\n    height={ 334 }\n  />\n</TwoColumn>\n\n\nIt's a surprisingly hefty contraption. The base is a thick stock of foam that helps keep it from sliding across the floor. It's a clamshell design, sandwiched together by a screw at each of the four corners.\n\nTraditionally, I've coded with my fingers, and my feet remain flat on the floor. The thought of throwing another appendage into the mix had, however, actually crossed my mind (if you can believe it).\n\nThe serendipity of discovering the pedal among the other assortment of donated goods gave the idea shape.ü¶Ü\n\n## What the heck is a Vim Clutch?\n\nSometimes it feels like we're living in the future. A sci-fi fantasy where you can buy electric cars with digital coins and speculate on blockchains founded on memes.\n\nUnsurprisingly, I'm not the only one under the _Vimperious_ curse... (yes, that was a Vim + Harry Potter pun) In fact, there have been a good many other model Vim Clutches:\n\n<HorizontalScroller className=\"full__width\">\n  <Card\n    element={{\n      id: \"0\",\n      slug: \"https://github.com/alevchuk/vim-clutch\",\n      image_alt: \"The O.G. Vim Clutch by Aleksandr Levchuk, hooked up to a desktop.\",\n      featured_image: \"/assets/img/blog/vim-clutch/og_pedal-thumbnail.jpg\",\n      title: \"The O.G.?\",\n      updated_at: \"Apr 2011\",\n      auto_update_at: \"false\",\n      author: \"Aleksandr Levchuk\",\n      description: \"As far as I can tell, this is the O.G. Vim Clutch. First committed by Aleksandr Levchuk in 2011. Aleksandr uses <i>two</i> USB foot switches&mdash; costing $20. Not exactly thrift prices, but not at all bad. These pedals use an infrared sensor that gets interrupted by a <i>toothpick</i> when the pedal is depressed.<br><br>Aleksandr used one pedal for the \\\"i\\\" key, and the other for \\\"Esc\\\". So, I can imagine some real <i>Fast and Furious</i> vibes in Aleksandr's home office. The GitHub write-up that Aleksandr did is really excellent too&mdash; well-documented, and well worth a read.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"1\",\n      slug: \"https://github.com/foxweb/vim-pedal\",\n      image_alt: \"clutch\",\n      featured_image:\"/assets/img/blog/vim-clutch/aleksey_two-thumbnail.jpg\",\n      title:\"Aleksey #2\",\n      updated_at:\"Jul 2014\",\n      auto_update_at:\"false\",\n      author:\"Aleksey Kurepin\",\n      description:\"There's another great GitHub write-up (<i>Digression:</i> isn't it nice when people use GitHub READMEs like a blog post?) on a pedal by Aleksey Kurepin.Alek #2 called out Alek #1 (Levchuck) as the inspiration for this Vim Clutch project. Aleksey's pedal also uses an optical sensor to detect pedal presses. Aleksey, however, introduces an <i>Arduino Leonardo</i> microboard clone to send \\\"i\\\" on press <i>and</i> send \\\"Esc\\\" on release using the same pedal. Neat.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"2\",\n      slug: \"https://spin.atomicobject.com/2017/04/07/vim-clutch/\",\n      image_alt: \"A shoe about to press down on a unique-looking Vim clutch.\",\n      featured_image: \"/assets/img/blog/vim-clutch/vim_clutch_shoe-thumbnail.jpg\",\n      title: \"Fancy-Shoe Joe\",\n      updated_at: \"Apr 2017\",\n      auto_update_at: \"false\",\n      author: \"Joe Chrysler\",\n      description: \"Another super cool person, Joe Chrysler, wanted to ride the <i>Vim</i>bus 2000. This is a fun piece because Joe talks a little more about the other unique interfaces that he's seen and that have inspired him&mdash; curved, split, mechanical keyboards, giant trackpads, and Echo Dots to name a few.<br><br>Joe paid $25 bucks on Amazon for his \\\"sturdy, if somewhat sketchy\\\" pedal. I like these descriptions Joe, keep 'em coming.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"3\",\n      slug: \"https://twitter.com/peterssonjesper/status/934957115709333505\",\n      image_alt: \"Seemingly an electric piano pedal, but actually... a Vim clutch.\",\n      featured_image: \"/assets/img/blog/vim-clutch/piano_pedal-thumbnail.jpg\",\n      title: \"Piano Player\",\n      updated_at: \"Nov 2017\",\n      auto_update_at: \"false\",\n      author: \"Jesper Petersson\",\n      description: \"Pay special attention to the socks in this one, that's the true source of this programmer's text-editing prowess...<br><br>Jesper didn't seem to have a write-up on his pedal (correct me if I'm wrong, Jesper), just this short Twitter demo. I liked the allegory of the piano pedal, so I put it in the list.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"4\",\n      slug: \"https://www.reddit.com/r/vimporn/comments/gus5ri/vim_clutch_vc1_pedal_by_boss/?utm_source=share&utm_medium=web2x&context=3\",\n      image_alt: \"A modified BOSS guitar pedal. In convincing BOSS-style lettering, it says \\\"Vim Clutch\\\".\",\n      featured_image: \"/assets/img/blog/vim-clutch/boss_pedal-thumbnail.jpg\",\n      title: \"Boss Pedal, VC-1\",\n      updated_at: \"Jun 2020\",\n      auto_update_at: \"false\",\n      author: \"u/sjachim\",\n      description: \"This pedal is hardcore, rock-n-roll. I found it on Reddit, via <i>u/sjachim</i>. This project also has a recent timestamp (which means it's still a super cool, hip thing to do).<br><br>The <i>VC-1</i> model is a converted <i>BOSS</i> guitar pedal. It's one of the most legit-looking custom clutches that I've come across&mdash; especially with the vinyl-sticker lettering. The red pilot light also adds to the badass-ery. I might have to add some LEDs to mine...\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"5\",\n      slug: \"https://yeah.nah.nz/electronics/vim-clutch-2/\",\n      image_alt: \"Close-up of this Vim clutch's wiring showing an Arduino and switch.\",\n      featured_image: \"/assets/img/blog/vim-clutch/vim_clutch_micro-thumbnail.jpg\",\n      title: \"Yeah, nah, aye\",\n      updated_at: \"Sep 2020\",\n      auto_update_at: \"false\",\n      author: \"David Phillips\",\n      description: \"David Phillips, a.k.a. <i>Yeah, nah, aye</i>, is another contemporary pedal hacker. Perhaps the flood of Vim clutches in 2020 is because all the developers were going crazy WFH. I don't know.<br><br>David's \\\"improved\\\" pedal (that's a Vim pun folks) uses an ATMega32u4 Arduino-compatible board. David also calls out Alek #1 as the O.G. Vim clutch hacker&mdash; and <i>does</i> indeed make some unique improvements upon the original project.<br><br>Definitely worth a read.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"6\",\n      slug: \"https://github.com/moretea/kludge\",\n      image_alt: \"Looking into the messy electronic innards of the \\\"Kludge\\\", another unique Vim clutch\",\n      featured_image: \"/assets/img/blog/vim-clutch/kludge-thumbnail.jpg\",\n      title: \"The Kludge\",\n      updated_at: \"Mar 2021\",\n      auto_update_at: \"false\",\n      author: \"Maarten Hoogendoorn\",\n      description: \"Hoogendoorn shared his pedal in the comments on <i>Hacker News</i>. The \\\"kludge\\\" pedal is also a misused piano pedal, similar in shape to one of the previous clutches. Maarten's, however, triples the fun with three switches.<br><br>My favorite part about Maarten's hack is that he also configured it to work as a push-to-talk pedal for calls! Wicked. Another excellent GitHub writeup and a unique way of coding it together.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n  <Card\n    element={{\n      id: \"7\",\n      slug: \"https://github.com/tenderlove/initial-v\",\n      image_alt: \"A Vim clutch made from a salvaged BMW shifter and a 3D-printed enclosure.\",\n      featured_image: \"/assets/img/blog/vim-clutch/clutch-thumbnail.jpg\",\n      title: \"Initial V\",\n      updated_at: \"Mar 2023\",\n      auto_update_at: \"false\",\n      author: \"Aaron Patterson\",\n      description: \"Patterson (a.k.a. <i>tenderlove</i>) broke the mold when designing the <i>Initial V</i> Vim clutch. It's made from an actual BMW shifter and features a 3D-printed enclosure and custom PCB. It certainly feels antithetical to the Vim ethos of keeping our fingers planted firmly on the home-row; but, no one can deny this is a remarkable invention in the Vim clutch hall of fame.\",\n      unbound: \"true\",\n      date_override: \"true\"\n    }}\n  />\n</HorizontalScroller>\n\nLooking at these examples, it's clear that a Vim Clutch can assume many forms. At its core, a Vim Clutch is a pedal that engages or disengages the _INSERT_ mode in the Vim editor. In Vim (Visual-editor IMproved) you can type `i`,`I`,`a`,`A`, or a few other keys to enter _INSERT_ mode, pinning the cursor to specific starting locations.\n\n_INSERT_ mode lets you type normally‚Äî like you would in a Google doc or in Notepad. Pressing the `Esc` button brings you back to _NORMAL_ mode...\n\n<OneColumn>\n  <ImageWrapper\n    src=\"/assets/img/blog/vim-clutch/vim.svg\"\n    alt=\"Vim logo\"\n    width={ 100 }\n    height={ 100 }\n    visible={ false }\n  />\n</OneColumn>\n\nIf you've used Vim, then you know _NORMAL_ mode is anything but \"normal\". You can jump to matched characters, do clever search and replace maneuvers, build macros on-the-fly and much much more from within _NORMAL_ mode.\n\nA proper _Vim Clutch_ would have to take the place of one of the _INSERT_-enabling and disabling key presses. Depressing the pedal would enter _INSERT_ mode, and releasing the pedal returns to _NORMAL_ mode.\n\nInstead of settling into a cubicle'd menagerie of isolated and burnt-out developers, the _Vim Clutch_ puts you in the cockpit with Vim Diesel‚Äî racing stick, staying above 50 words-per-minute to save all the innocent bus riders.\n\nSo that's the \"what\" and the \"why\", but before I give you the \"how\"‚Äî If you've made a dope Vim Clutch, and you're not in the list‚Äî what gives?? Leave a comment, paste in some links or images. I'll put it in with the others.\n\n## Vim-Clutch Hardware\n\nThe Goodwill pedal had about 4-feet of flat, fettuccine-looking cable coming out the back. It terminated in a telephone jack. After a quick Google search, it seemed like the pedal would have been used to control playback on a transcribing machine.\n\nYou'd engage the center pedal for normal playback, step on the left pedal to rewind, or step right to fast-foward while listening to a recording of speech. It would've provided a quick way to navigate (probably a casette) back and forth while simultaneously having both hands free to type out the actual letters and spellings of what was said‚Äî at a keyboard or electric typewriter, I'm guessing. Similar models go for a decent chunk of change on Amazon:\n\n<OneColumn>\n  <ImageWrapper\n    alt='This Dictaphone model was one of several other models that were indistinguishable from the one I snagged at Goodwill. It was a range of about $30-$90, and some of the pedals terminated in a USB connector rather than a telephone jack.'\n    src='/assets/img/blog/vim-clutch/amazon_dictaphone.jpg'\n    width={ 660 }\n    height={ 205 }\n  />\n</OneColumn>\n\nAll the more re-assured by the deal that I got, I decided to hack it apart and see what was happening inside. The previous owner definitely had cats. The insides contained a treasure-trove of hair, whiskers and dust bunnies.\n\nThere were two metal weights affixed to the bottom-half of the clamshell. They keep the pedal from scooting across the floor. Springs at each of the switches set-off the plastic pedals from engaging the switch mechanism. I looked up the string of numbers and letters that are printed on the side of each of the switches (out of curiousity); but no conclusive result about the design or manufacturer. The pedal itself has no distinguishing brand markings.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"I wasn't really sure how I would convert switch presses to keypresses... but this was a good look at the pedal guts. There's a slightly thicker red wire that loops the current into all three switches. Each independent switch completes or closes it's own isolated loop through another wire (going out to the telephone jack). This was good news to me. It meant that each switch can be tracked separately, and the pedal could probably do combination presses.\"\n    src='/assets/img/blog/vim-clutch/pedal_guts.jpg'\n    width={ 500 }\n    height={ 281 }\n  />\n</OneColumn>\n\nThe springs are were also an exciting find. They could probably be swapped out, giving some control over the quality of the pedal's action. After playing with it, I feel like it'd be more comfortable to have a stiffer press. Right now, the weight of my foot is enough to create an accidental key-click.\n\n## A Controller: RPi Zero\n\nWe'll have to add $10 to our budget. I decided to use the Raspberry Pi 0 for the keypress controller‚Äî the thing that'll turn our pedal presses into \"i\" and \"Esc\". That's $13 total‚Ä¶ still worth it. I had a couple of the Pi 0 [SBCs](https://en.wikipedia.org/wiki/Single-board_computer) lying around from projects past, so it was a convenient option.\n\nThe Raspberry Pi 0 was a go-to board for some of my [school projects](/signs-of-life) in the past. I like the Zero model a lot. It's insane to have a programmable device that can use a display, provide WiFi and an SSH connection, GPIO and more for such a low price. Plus it's about the size of a few sticks of gum! Which is more than small enough to fit comfortably within the foot-pedal casing.\n\nSo now it's a project. I think the Pi will come in handy if I ever want to try sending keypresses via Bluetooth. Could you imagine that? The first (AFAIK) _wireless_ Vim Clutch. That would be legit. We'll see. Probably don't have the energy. I don't know, maybe that would be worth it‚Ä¶\n\nBottomline, the Pi 0 gives you a lot of flexibility in an exceptionally tiny form-factor. The physical interfaces of the Pi 0 are diverse and low-profile‚Äî the micro-USB is convenient for simultaneously powering the device and sending data.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"The Raspberry Pi 3 measures about the same as the model 4, on a 85 x 56mm PCB. The Pi 0 (and Zero W, wireless, model), has a 65 x 30mm footprint. I haven't gotten my hands on the smallest Raspberry Pi, the Pico‚Äî which measures only 51 x 20mm and is supposed to cost $4.\"\n    src='/assets/img/blog/vim-clutch/rpi0_schematic.jpg'\n    width={ 616 }\n    height={ 346 }\n  />\n</OneColumn>\n\nIn the past, I'd tried setting up the headless Pi 0 using a single USB for both data and power. The tutorials online seem super straight-forward and fool-proof; but I've still never gotten it to work seamlessly.\n\nThe first Pi Zero I bought as a kit with all the silly dongles and adapters to plug in a mouse, keyboard, and display. I had more resolve to get it working this time, but still got into some muddy waters with setting up the Ethernet gadget for SSH'ing over USB.\n\nA useful, succinct tutorial by [Andrew Mulholland](https://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md) provides the basic documentation for setting it up. There's also a good one from [Adafruit](https://learn.adafruit.com/turning-your-raspberry-pi-zero-into-a-usb-gadget/ethernet-gadget) that provides more context for Mac and Windows users. Most people seem to get it working by following those directions, but it always gets a little sticky for me.\n\n### Raspberry Pi OS Config\n\nOn Linux (Ubuntu 20.04), I would install the [Raspberry Pi Imager](https://www.raspberrypi.org/software/) with aptitude:\n\n<Pre>\n```bash\nsudo apt-get install rpi-imager\n```\n</Pre>\n\nThe RPi Imager has become incredibly easy to use and gives you a nice pre-populated catalog of compatible OS's. I was able to quickly flash \"Raspberry Pi OS Lite\" after selecting it from a menu of recommended options. I used an 8GB micro-SD card (probably overkill for this project).\n\n<OneColumn>\n  <ImageWrapper\n    alt='The Raspberry Pi Imager has releases for multiple platforms. The interface is really simple. Just click \"Raspberry Pi OS\" and select the \"Lite\" image. Then select your SD card and write the image to the card.'\n    src='/assets/img/blog/vim-clutch/RaspberryPiImager.jpg'\n    width={ 741 }\n    height={ 478 }\n  />\n</OneColumn>\n\nAfter flashing the SD card, it'll prompt you to eject it. I just pop it out and back in. You'll probably see two things: `rootfs` and `boot`. The next step is to open boot, then edit `config.txt`.\n\nAt the bottom of `config.txt`, add a new line:\n\n<Pre>\n```bash:config.txt\ndtoverlay=dwc2\n```\n</Pre>\n\nNext, you have to edit the `cmdline.txt` file. As Andrew pointed out in his [gist](https://gist.github.com/gbaman/975e2db164b3ca2b51ae11e45e8fd40a#file-howtootgfast-md), each parameter is separated by a single space (no new lines). In here, you will insert the following after \"rootwait\":\n\n<Pre>\n```bash:cmdline.txt\nmodules-load=dwc2,g_ether\n```\n</Pre>\n\nAfter this, you should be able to plug in the Raspberry Pi 0 with a micro-USB cable (making sure to use the port that isn't the power port) and SSH into `pi@raspberrypi.local` as a USB Ethernet gadget. I managed to get this \"working\" in a hacky sort of way (helped along by this [blog post](https://shallowsky.com/blog/linux/raspberry-pi-ethernet-gadget.html)), but ultimately removed the \"g_ether\" option and configured the Pi to SSH over my local WiFi instead.\n\nMaybe one day I'll get it to work on the first try. [Configuring the Pi to connect to the Wi-Fi network](https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md) is a perfectly acceptable alternative solution. On a running Pi, you would use `sudo raspi-config` to configure Wi-Fi and other important options‚Äî like language and locale.\n\nAlternatively, you can create a file on the micro SD card called `wpa_supplicant.conf`:\n\n<Pre>\n```bash\nsudo vim /etc/wpa_supplicant/wpa_supplicant.conf\n```\n</Pre>\n\nIn this file, include the 2-letter ISO code for your country as well as the SSID and password of your network.\n\n<Pre>\n```bash:wp_supplicant.conf\ncountry=US\nnetwork={\n   ssid=\"Chance the Router\"\n   psk=\"CocoabutterKisses\"\n}\n```\n</Pre>\n\nIf you have other Raspberry Pi computers on the network, I recommend you turn them off or disconnect them temporarily (unless they have a different host name). I had a Pi 4 that was already broadcasting as `raspberrypi.local` and it was another stick in the spokes. I've since set the newly-connected Pi's hostname as `vimclutch.local`.\n\nOne last recommendation (just to make your life easier)‚Äî don't go crazy with the password. I had a whacky password with a double-quote or something stupid, and I'm still convinced it was the culprit after going down yet another debugging rabbit-hole.\n\n## Software\n\nOne last excuse to use the Pi (rather than an Arduino, for example) was that it gave me a chance to try out some of the GPIO Python libraries. The one I ended up importing is [gpiozero](https://gpiozero.readthedocs.io/en/stable/).\n\nThis library provides a ton of convenient features around the \"Button\" object. A gpiozero \"Button\" is instantiated with the GPIO pin number‚Äî for example, `pedal = Button(2)`. It accepts a few other parameters that will dictate the Button's attributes and behavior.\n\nYou can then use methods like: `pedal.is_pressed`, `pedal.is_held`, `pedal.when_released`, and much more. Have a look at the [Button-specific documentation](https://gpiozero.readthedocs.io/en/stable/api_input.html?highlight=Button#gpiozero.Button) for a full list of capabilities.\n\n<OneColumn>\n  <ImageWrapper\n    alt='After setting up a breadboard, I wired up a basic circuit with another switch I had on-hand. Messed around with the gpiozero Python library for a bit (it is awesome). Finally managed to get everything setup so that a button press would print \"Hello World\".'\n    src='/assets/img/blog/vim-clutch/hello_world_scrot.jpg'\n    width={ 927 }\n    height={ 521 }\n  />\n</OneColumn>\n\nSetting a `Button()` lets the script detect that the 5V boolean \"high\" signal \"is_pressed\", or \"is_released\". Now we have to turn that \"high\" or \"low\" into keypresses. The script below opens the Pi as a _human interface device_ (HID) that sends emulated keypresses (as structs) to the computer the Pi is plugged into.\n\n<Pre>\n```py:keypress.py showLineNumbers\ndef press(char):\n  mod,key=hid_codes[char]\n  raw=struct.pack(\"BBBBL\", mod, 0x00, key, 0x00, 0x00000000)\n  with open(\"/dev/hidg0\", \"w\") as fd:\n    fd.write(raw)\n    fd.write(struct.pack(\"Q\" 0))\n    sleep(0.005)\n```\n</Pre>\n\nThe _struct_ library interprets Python bytes as packed binary data. The weird \"BBBBL\" pattern is just dictating 4 unsigned chars (BBBB) followed by one unsigned long (L) integer. The code is bummed a little further than some other examples I've found (mostly using Python's `write_report` function. I ripped it from a rather cool presentation, [One Device to PWN Them All](/assets/files/articles/vim-clutch/upenn_philpolstra_1d2PWNta.pdf).\n\nThe gist of the function above is that we're able to build the unreadable keypress signals (one long string of bytes) by referencing the readable character (i.e., the letter \"o\" or \"i\") in a lookup table. The lookup table packs the bytes for that key and its modifier (i.e., \"Shift\" or \"Ctrl\") into the longer struct. If there's someone smart reading this article, they can please explain this better.\n\nAs far as how those binary bits are actually interpretted as keypresses, I'm not sure how that works‚Ä¶\n\nBefore this script will work, we need the Pi to say, \"hello, I am a keyboard\", whenever it's plugged into another computer via USB. I put a link to the blog post with the relevant script (as well as a few other useful links) in the footer to this project's [GitHub README](https://github.com/l00sed/vim-clutch.git). Here it is below as well:\n\n<Pre>\n```bash:/usr/bin/vimclutch_usb showLineNumbers\n#!/bin/bash\ncd /sys/kernel/config/usb_gadget/\nmkdir -p vimclutch\ncd vimclutch\necho 0x1d6b > idVendor # Linux Foundation\necho 0x0104 > idProduct # Multifunction Composite Gadget\necho 0x0100 > bcdDevice # v1.0.0\necho 0x0200 > bcdUSB # USB2\nmkdir -p strings/0x409\necho \"fedcba9876543210\" > strings/0x409/serialnumber\necho \"l00sed\" > strings/0x409/manufacturer\necho \"VimClutch USB Device\" > strings/0x409/product\nmkdir -p configs/c.1/strings/0x409\necho \"Config 1: ECM network\" > configs/c.1/strings/0x409/configuration\necho 250 > configs/c.1/MaxPower\n\n# Add functions here\nmkdir -p functions/hid.usb0\necho 1 > functions/hid.usb0/protocol\necho 1 > functions/hid.usb0/subclass\necho 8 > functions/hid.usb0/report_length\necho -ne \\\\x05\\\\x01\\\\x09\\\\x06\\\\xa1\\\\x01\\\\x05\\\\x07\\\\x19\\\\xe0\\\\x29\\\\xe7\\\\x15\\\\x00\\\\x25\\\\x01\\\\x75\\\\x01\\\\x95\\\\x08\\\\x81\\\\x02\\\\x95\\\\x01\\\\x75\\\\x08\\\\x81\\\\x03\\\\x95\\\\x05\\\\x75\\\\x01\\\\x05\\\\x08\\\\x19\\\\x01\\\\x29\\\\x05\\\\x91\\\\x02\\\\x95\\\\x01\\\\x75\\\\x03\\\\x91\\\\x03\\\\x95\\\\x06\\\\x75\\\\x08\\\\x15\\\\x00\\\\x25\\\\x65\\\\x05\\\\x07\\\\x19\\\\x00\\\\x29\\\\x65\\\\x81\\\\x00\\\\xc0 > functions/hid.usb0/report_desc\nln -s functions/hid.usb0 configs/c.1/\n# End functions\n\nls /sys/class/udc > UDC\n```\n</Pre>\n\nSave this script to `/usr/bin/vimclutch_usb` on the Raspberry Pi Zero (or give it another name). It also needs to be made executable:\n\n<Pre>\n```bash\nchmod +x /usr/bin/vimclutch_usb\n```\n</Pre>\n\nThen put a line in `/etc/rc.local` (before the `exit 0` line) that will allow the script to be automatically run, setting up the Pi as a USB keyboard:\n\n<Pre  copyButton={ false }>\n```diff:/etc/rc.local\n...\n\n+ /usr/bin/vimclutch_usb\nexit 0\n```\n</Pre>\n\n## Soldering\n\nThe fettuccine cable running out the back of the pedal was removed. I severed the leads from the switches, and soldered them directly to the GPIO pins (2, 3, and 26) of the Pi. I also soldered the thicker red wire to the Pi's 5V out, and closed the other end of the loop to ground. Depressing any of the three switches now closes the circuit with its specific GPIO pin.\n\n<OneColumn>\n  <ImageWrapper\n    alt=\"Soldered the connections directly to the Pi Zero's GPIO pins‚Äî plus two more wires, one to 5V and one to ground. Not very pretty, but I got the job done.\"\n    src='/assets/img/blog/vim-clutch/pi_in_a_pedal.jpg'\n    width={ 600 }\n    height={ 338 }\n  />\n</OneColumn>\n\nTo keep the Pi firmly in place, I drilled some holes through the base of the pedal and mounted the corners of the board to two standoffs. The single USB cable connects to the side of the Pi and exits out the same hole in the back‚Äî protected by a rubber grommet.\n\nI've been using the pedal to code for about a month now, and it really is a lot of fun. It took some getting used to at first, but after a couple days practice it's easy to build up the muscle memory. It also incentivized me to learn about the different ways to enter INSERT mode‚Äî I had no idea about _SHIFT+a_ until I looked it up for this project!\n\nUnfortunately (after a couple weeks of usage) the main center pedal's switch started to get a bit funky‚Ä¶ might just be a bad solder joint; but hopefully the switch isn't faulty. Luckily I could just SSH into the pedal and swap out the keys. I still have the right and left working swimmingly.\n\n<OneColumn>\n  <iframe width=\"498\" height=\"315\" src=\"https://www.youtube.com/embed/9JegZhkDhrw\" title=\"Vim Clutch Demo\" frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\n</OneColumn>\n\n## Conclusion\n\nThis has been an enlightening project. I think it's given me a lot of useful knowledge that I will carry forward in my future projects. Excited to be doing more with electronics and linking physical interactions with digital events and vice versa.\n\nUntil then, thank you so much for taking a minute to share my excitement over this project. Like I said earlier, if you've made a Vim Clutch, or another bonkers HID, please share a link in the comments! Happy coding.\n</ProseWrapper>", "content_type": "blog"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add article", "content_type": 1, "codename": "add_article"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change article", "content_type": 1, "codename": "change_article"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete article", "content_type": 1, "codename": "delete_article"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view article", "content_type": 1, "codename": "view_article"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add subscriber", "content_type": 2, "codename": "add_subscriber"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change subscriber", "content_type": 2, "codename": "change_subscriber"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete subscriber", "content_type": 2, "codename": "delete_subscriber"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view subscriber", "content_type": 2, "codename": "view_subscriber"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add comment", "content_type": 3, "codename": "add_comment"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change comment", "content_type": 3, "codename": "change_comment"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete comment", "content_type": 3, "codename": "delete_comment"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view comment", "content_type": 3, "codename": "view_comment"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add log entry", "content_type": 4, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change log entry", "content_type": 4, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete log entry", "content_type": 4, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view log entry", "content_type": 4, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add permission", "content_type": 5, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change permission", "content_type": 5, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete permission", "content_type": 5, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view permission", "content_type": 5, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add group", "content_type": 6, "codename": "add_group"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change group", "content_type": 6, "codename": "change_group"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete group", "content_type": 6, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view group", "content_type": 6, "codename": "view_group"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add user", "content_type": 7, "codename": "add_user"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change user", "content_type": 7, "codename": "change_user"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete user", "content_type": 7, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view user", "content_type": 7, "codename": "view_user"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add content type", "content_type": 8, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change content type", "content_type": 8, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete content type", "content_type": 8, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view content type", "content_type": 8, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add session", "content_type": 9, "codename": "add_session"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change session", "content_type": 9, "codename": "change_session"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete session", "content_type": 9, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view session", "content_type": 9, "codename": "view_session"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add site", "content_type": 10, "codename": "add_site"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change site", "content_type": 10, "codename": "change_site"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete site", "content_type": 10, "codename": "delete_site"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view site", "content_type": 10, "codename": "view_site"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add source", "content_type": 11, "codename": "add_source"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change source", "content_type": 11, "codename": "change_source"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete source", "content_type": 11, "codename": "delete_source"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view source", "content_type": 11, "codename": "view_source"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add thumbnail", "content_type": 12, "codename": "add_thumbnail"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change thumbnail", "content_type": 12, "codename": "change_thumbnail"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete thumbnail", "content_type": 12, "codename": "delete_thumbnail"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view thumbnail", "content_type": 12, "codename": "view_thumbnail"}}, {"model": "auth.permission", "pk": 49, "fields": {"name": "Can add thumbnail dimensions", "content_type": 13, "codename": "add_thumbnaildimensions"}}, {"model": "auth.permission", "pk": 50, "fields": {"name": "Can change thumbnail dimensions", "content_type": 13, "codename": "change_thumbnaildimensions"}}, {"model": "auth.permission", "pk": 51, "fields": {"name": "Can delete thumbnail dimensions", "content_type": 13, "codename": "delete_thumbnaildimensions"}}, {"model": "auth.permission", "pk": 52, "fields": {"name": "Can view thumbnail dimensions", "content_type": 13, "codename": "view_thumbnaildimensions"}}, {"model": "auth.permission", "pk": 53, "fields": {"name": "Can add tag", "content_type": 14, "codename": "add_tag"}}, {"model": "auth.permission", "pk": 54, "fields": {"name": "Can change tag", "content_type": 14, "codename": "change_tag"}}, {"model": "auth.permission", "pk": 55, "fields": {"name": "Can delete tag", "content_type": 14, "codename": "delete_tag"}}, {"model": "auth.permission", "pk": 56, "fields": {"name": "Can view tag", "content_type": 14, "codename": "view_tag"}}, {"model": "auth.permission", "pk": 57, "fields": {"name": "Can add tagged item", "content_type": 15, "codename": "add_taggeditem"}}, {"model": "auth.permission", "pk": 58, "fields": {"name": "Can change tagged item", "content_type": 15, "codename": "change_taggeditem"}}, {"model": "auth.permission", "pk": 59, "fields": {"name": "Can delete tagged item", "content_type": 15, "codename": "delete_taggeditem"}}, {"model": "auth.permission", "pk": 60, "fields": {"name": "Can view tagged item", "content_type": 15, "codename": "view_taggeditem"}}, {"model": "auth.permission", "pk": 61, "fields": {"name": "Can add webmention", "content_type": 16, "codename": "add_webmentionresponse"}}, {"model": "auth.permission", "pk": 62, "fields": {"name": "Can change webmention", "content_type": 16, "codename": "change_webmentionresponse"}}, {"model": "auth.permission", "pk": 63, "fields": {"name": "Can delete webmention", "content_type": 16, "codename": "delete_webmentionresponse"}}, {"model": "auth.permission", "pk": 64, "fields": {"name": "Can view webmention", "content_type": 16, "codename": "view_webmentionresponse"}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "articles", "model": "article"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "articles", "model": "subscriber"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "comments", "model": "comment"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "sites", "model": "site"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "easy_thumbnails", "model": "source"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "easy_thumbnails", "model": "thumbnail"}}, {"model": "contenttypes.contenttype", "pk": 13, "fields": {"app_label": "easy_thumbnails", "model": "thumbnaildimensions"}}, {"model": "contenttypes.contenttype", "pk": 14, "fields": {"app_label": "taggit", "model": "tag"}}, {"model": "contenttypes.contenttype", "pk": 15, "fields": {"app_label": "taggit", "model": "taggeditem"}}, {"model": "contenttypes.contenttype", "pk": 16, "fields": {"app_label": "webmention", "model": "webmentionresponse"}}, {"model": "sites.site", "pk": 1, "fields": {"domain": "example.com", "name": "example.com"}}, {"model": "taggit.tag", "pk": 1, "fields": {"name": "electronics", "slug": "electronics"}}, {"model": "taggit.tag", "pk": 2, "fields": {"name": "media art", "slug": "media-art"}}, {"model": "taggit.tag", "pk": 3, "fields": {"name": "DIY", "slug": "diy"}}, {"model": "taggit.tag", "pk": 4, "fields": {"name": "code", "slug": "code"}}, {"model": "taggit.tag", "pk": 5, "fields": {"name": "Internet", "slug": "internet"}}, {"model": "taggit.tag", "pk": 6, "fields": {"name": "culture", "slug": "culture"}}, {"model": "taggit.tag", "pk": 7, "fields": {"name": "politics", "slug": "politics"}}, {"model": "taggit.tag", "pk": 8, "fields": {"name": "blogging", "slug": "blogging"}}, {"model": "taggit.tag", "pk": 9, "fields": {"name": "Windows", "slug": "windows"}}, {"model": "taggit.tag", "pk": 10, "fields": {"name": "Linux", "slug": "linux"}}, {"model": "taggit.tag", "pk": 11, "fields": {"name": "design", "slug": "design"}}, {"model": "taggit.tag", "pk": 12, "fields": {"name": "sysadmin", "slug": "sysadmin"}}, {"model": "taggit.tag", "pk": 13, "fields": {"name": "fabrication", "slug": "fabrication"}}, {"model": "taggit.tag", "pk": 14, "fields": {"name": "business", "slug": "business"}}, {"model": "taggit.taggeditem", "pk": 1, "fields": {"tag": 1, "content_type": 1, "object_id": 1}}, {"model": "taggit.taggeditem", "pk": 2, "fields": {"tag": 1, "content_type": 1, "object_id": 2}}, {"model": "taggit.taggeditem", "pk": 3, "fields": {"tag": 2, "content_type": 1, "object_id": 2}}, {"model": "taggit.taggeditem", "pk": 4, "fields": {"tag": 3, "content_type": 1, "object_id": 2}}, {"model": "taggit.taggeditem", "pk": 5, "fields": {"tag": 4, "content_type": 1, "object_id": 2}}, {"model": "taggit.taggeditem", "pk": 6, "fields": {"tag": 3, "content_type": 1, "object_id": 3}}, {"model": "taggit.taggeditem", "pk": 7, "fields": {"tag": 5, "content_type": 1, "object_id": 3}}, {"model": "taggit.taggeditem", "pk": 8, "fields": {"tag": 6, "content_type": 1, "object_id": 3}}, {"model": "taggit.taggeditem", "pk": 9, "fields": {"tag": 7, "content_type": 1, "object_id": 3}}, {"model": "taggit.taggeditem", "pk": 10, "fields": {"tag": 1, "content_type": 1, "object_id": 4}}, {"model": "taggit.taggeditem", "pk": 11, "fields": {"tag": 3, "content_type": 1, "object_id": 4}}, {"model": "taggit.taggeditem", "pk": 12, "fields": {"tag": 4, "content_type": 1, "object_id": 4}}, {"model": "taggit.taggeditem", "pk": 13, "fields": {"tag": 8, "content_type": 1, "object_id": 5}}, {"model": "taggit.taggeditem", "pk": 14, "fields": {"tag": 9, "content_type": 1, "object_id": 6}}, {"model": "taggit.taggeditem", "pk": 15, "fields": {"tag": 10, "content_type": 1, "object_id": 6}}, {"model": "taggit.taggeditem", "pk": 16, "fields": {"tag": 10, "content_type": 1, "object_id": 7}}, {"model": "taggit.taggeditem", "pk": 17, "fields": {"tag": 4, "content_type": 1, "object_id": 7}}, {"model": "taggit.taggeditem", "pk": 18, "fields": {"tag": 11, "content_type": 1, "object_id": 8}}, {"model": "taggit.taggeditem", "pk": 19, "fields": {"tag": 4, "content_type": 1, "object_id": 8}}, {"model": "taggit.taggeditem", "pk": 20, "fields": {"tag": 10, "content_type": 1, "object_id": 9}}, {"model": "taggit.taggeditem", "pk": 21, "fields": {"tag": 4, "content_type": 1, "object_id": 9}}, {"model": "taggit.taggeditem", "pk": 22, "fields": {"tag": 12, "content_type": 1, "object_id": 9}}, {"model": "taggit.taggeditem", "pk": 23, "fields": {"tag": 1, "content_type": 1, "object_id": 10}}, {"model": "taggit.taggeditem", "pk": 24, "fields": {"tag": 2, "content_type": 1, "object_id": 10}}, {"model": "taggit.taggeditem", "pk": 25, "fields": {"tag": 3, "content_type": 1, "object_id": 10}}, {"model": "taggit.taggeditem", "pk": 26, "fields": {"tag": 3, "content_type": 1, "object_id": 11}}, {"model": "taggit.taggeditem", "pk": 27, "fields": {"tag": 13, "content_type": 1, "object_id": 11}}, {"model": "taggit.taggeditem", "pk": 28, "fields": {"tag": 3, "content_type": 1, "object_id": 12}}, {"model": "taggit.taggeditem", "pk": 29, "fields": {"tag": 6, "content_type": 1, "object_id": 12}}, {"model": "taggit.taggeditem", "pk": 30, "fields": {"tag": 4, "content_type": 1, "object_id": 13}}, {"model": "taggit.taggeditem", "pk": 31, "fields": {"tag": 14, "content_type": 1, "object_id": 13}}, {"model": "taggit.taggeditem", "pk": 32, "fields": {"tag": 1, "content_type": 1, "object_id": 14}}, {"model": "taggit.taggeditem", "pk": 33, "fields": {"tag": 3, "content_type": 1, "object_id": 14}}, {"model": "taggit.taggeditem", "pk": 34, "fields": {"tag": 4, "content_type": 1, "object_id": 14}}]