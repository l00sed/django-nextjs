version: '3.8'

# Services
services:

  # Nginx Service
  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./.docker/local/nginx/certs:/etc/nginx/certs
      - ./.docker/local/nginx/conf.d:/etc/nginx/conf.d
      - ./.docker/local/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    deploy:
      restart_policy:
        condition: on-failure
        max_attempts: 3

  # PostgreSQL Service
  db:
    restart: always
    build:
      context: .
      dockerfile: db.Dockerfile
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Python/Django Service
  backend:
    restart: always
    build:
      context: .
      dockerfile: backend.Dockerfile
    depends_on:
      - db
    command: "/./loosed start_backend"
    expose:
      - 8000
    volumes:
      - ./app/frontend/src/mdx:/app/frontend/src/mdx
      - ./app/backend:/app/backend
      - ./loosed:/loosed

  # Node/Next.js Service
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
      target: runner
    command: "npm run dev"
    depends_on:
      - backend
    expose:
      - 3000
    volumes:
      - ./app/frontend:/home/node

# Volumes
volumes:
  app:
  postgres_data:
